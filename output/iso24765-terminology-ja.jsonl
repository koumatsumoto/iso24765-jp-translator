{"number":"3.1","name":"1GL","name_ja":"第1世代言語","definitions":[{"text":"first-generation language","text_ja":"第1世代言語"}],"confer":["machine language"],"confer_ja":["機械語"]}
{"number":"3.2","name":"2GL","name_ja":"第2世代言語","definitions":[{"text":"second-generation language","text_ja":"第2世代言語"}],"confer":["assembly language"],"confer_ja":["アセンブリ言語"]}
{"number":"3.3","name":"3D","name_ja":"3次元","definitions":[{"text":"three-dimensional","text_ja":"3次元","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information"}]}
{"number":"3.4","name":"3GL","name_ja":"第3世代言語","definitions":[{"text":"third-generation language","text_ja":"第3世代言語"}],"confer":["high-order language"],"confer_ja":["高水準言語"]}
{"number":"3.5","name":"4GL","name_ja":"第4世代言語","definitions":[{"text":"fourth-generation language","text_ja":"第4世代言語"}]}
{"number":"3.6","name":"5GL","name_ja":"第5世代言語","definitions":[{"text":"fifth-generation language","text_ja":"第5世代言語"}]}
{"number":"3.7","name":"<Viewpoint> language","name_ja":"<視点>言語","definitions":[{"text":"definitions of concepts and rules for the specification of an ODP system from the <viewpoint> viewpoint","text_ja":"<視点>の観点からODPシステムの仕様を記述するための概念と規則の定義","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.2.1.1"}],"note":"Thus, engineering language: definitions of concepts and rules for the specification of an ODP system from the engineering viewpoint.","note_ja":"したがって、工学言語：工学的観点からODPシステムの仕様を記述するための概念と規則の定義。"}
{"number":"3.8","name":"<X> domain","name_ja":"<X>ドメイン","definitions":[{"text":"set of objects, each of which is related by a characterizing relationship <X> to a controlling object","text_ja":"それぞれが制御オブジェクトに対して特徴的関係<X>により関連付けられたオブジェクトの集合","reference":"ISO/IEC 10746 2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 10.3"}]}
{"number":"3.9","name":"<X> federation","name_ja":"<X>フェデレーション","definitions":[{"text":"community of <x> domains","text_ja":"<x>ドメインのコミュニティ","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 5.1.2"}]}
{"number":"3.10","name":"<X> group","name_ja":"<X>グループ","definitions":[{"text":"set of objects with a particular characterizing relationship <X>","text_ja":"特定の特徴的関係<X>を持つオブジェクトの集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 10.1"}]}
{"number":"3.11","name":"<x> interceptor","name_ja":"<x>インターセプタ","definitions":[{"text":"engineering object in a channel, placed at a boundary between <x> domains","text_ja":"<x>ドメイン間の境界に配置されたチャネル内の工学オブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.11"}],"note":"An <x> interceptor performs checks to enforce or monitor policies on permitted interactions between basic engineering objects in different domains; performs transformations to mask differences in interpretation of data by basic engineering objects in different domains. An inter-subnetwork relay is an example of an interceptor","note_ja":"<x>インターセプタは、異なるドメインの基本工学オブジェクト間で許可された相互作用に関するポリシーを強制または監視するためのチェックを実行し、異なるドメインの基本工学オブジェクトによるデータ解釈の差異を隠蔽するための変換を実行する。サブネットワーク間中継は、インターセプタの例である。"}
{"number":"3.12","name":"<x> pattern","name_ja":"<x>パターン","definitions":[{"text":"abstract specification of a composition of objects that results in any instance of the composition having a given property, named by <X>","text_ja":"<X>により名付けられた特定の属性を持つ合成のすべてのインスタンスをもたらすオブジェクトの合成の抽象的仕様","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.8"}]}
{"number":"3.13","name":"A-0 context diagram","name_ja":"A-0コンテキスト図","definitions":[{"text":"the only context diagram that is required for a valid IDEF0 model, the A-0 diagram contains one box, which represents the top-level function being modeled, the inputs, controls, outputs, and mechanisms attached to this box, the full model name, the model name abbreviation, the model's purpose statement, and the model's viewpoint statement","text_ja":"有効なIDEF0モデルに必要な唯一のコンテキスト図であり、A-0図は、モデル化される最上位機能を表す1つのボックス、このボックスに付与された入力、制御、出力、メカニズム、完全なモデル名、モデル名の略語、モデルの目的文、およびモデルの視点文を含む","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0"}]}
{"number":"3.14","name":"A-profile","name_ja":"Aプロファイル","definitions":[{"text":"Application profile","text_ja":"アプリケーションプロファイル","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.15","name":"ABC","name_ja":"ABC","definitions":[{"text":"activity-based costing","text_ja":"活動基準原価計算"}]}
{"number":"3.16","name":"abend","name_ja":"異常終了","definitions":[{"text":"abnormal end","text_ja":"異常終了"}]}
{"number":"3.17","name":"abnormal end (abend)","name_ja":"異常終了（abend）","definitions":[{"text":"termination of a process prior to completion","text_ja":"プロセスの完了前の終了"}],"confer":["abort","exception"],"confer_ja":["アボート","例外"]}
{"number":"3.18","name":"abort","name_ja":"アボート","definitions":[{"text":"to terminate a process prior to completion","text_ja":"プロセスを完了前に終了させる"}],"confer":["abend","exception"],"confer_ja":["異常終了","例外"]}
{"number":"3.19","name":"absolute address","name_ja":"絶対アドレス","definitions":[{"text":"address that is permanently assigned to a device or storage location and that identifies the device or location without the need for translation or calculation","text_ja":"デバイスまたは記憶位置に永続的に割り当てられ、変換や計算を必要とせずにデバイスまたは位置を識別するアドレス"}],"alias":["explicit address","specific address"],"alias_ja":["明示的アドレス","特定アドレス"],"confer":["relative address","relocatable address","symbolic address","absolute assembler","absolute code","absolute instruction"],"confer_ja":["相対アドレス","再配置可能アドレス","記号アドレス","絶対アセンブラ","絶対コード","絶対命令"]}
{"number":"3.20","name":"absolute assembler","name_ja":"絶対アセンブラ","definitions":[{"text":"assembler that produces absolute code","text_ja":"絶対コードを生成するアセンブラ"}],"confer":["relocating assembler"],"confer_ja":["再配置アセンブラ"]}
{"number":"3.21","name":"absolute code","name_ja":"絶対コード","definitions":[{"text":"code in which all addresses are absolute addresses","text_ja":"すべてのアドレスが絶対アドレスであるコード"}],"alias":["specific code"],"alias_ja":["特定コード"],"confer":["relocatable code"],"confer_ja":["再配置可能コード"]}
{"number":"3.22","name":"absolute instruction","name_ja":"絶対命令","definitions":[{"text":"computer instruction in which all addresses are absolute addresses","text_ja":"すべてのアドレスが絶対アドレスであるコンピュータ命令"}],"confer":["direct instruction","effective instruction","immediate instruction","indirect instruction"],"confer_ja":["直接命令","実効命令","即値命令","間接命令"]}
{"number":"3.23","name":"absolute loader","name_ja":"絶対ローダ","definitions":[{"text":"loader that reads absolute machine code into main memory, beginning at the initial address assigned to the code by the assembler or compiler, and performs no address adjustments on the code","text_ja":"アセンブラまたはコンパイラによってコードに割り当てられた初期アドレスから開始して、絶対機械コードを主記憶装置に読み込み、コードに対してアドレス調整を行わないローダ"}],"confer":["relocating loader"],"confer_ja":["再配置ローダ"]}
{"number":"3.24","name":"abstract class","name_ja":"抽象クラス","definitions":[{"text":"class that cannot be instantiated independently","text_ja":"独立してインスタンス化できないクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.1"}],"note":"That is, instantiation must be accomplished via a subclass. A class for which every instance must also be an instance of a subclass in the cluster (a total cluster) is called an abstract class with respect to that cluster.","note_ja":"すなわち、インスタンス化はサブクラスを介して行われなければならない。クラスタ内のすべてのインスタンスがサブクラスのインスタンスでもなければならないクラス（完全なクラスタ）は、そのクラスタに関して抽象クラスと呼ばれる。"}
{"number":"3.25","name":"abstract data type","name_ja":"抽象データ型","definitions":[{"text":"data type for which only the properties of the data and the operations to be performed on the data are specified, without concern for how the data will be represented or how the operations will be implemented","text_ja":"データの表現方法や操作の実装方法に関係なく、データの属性とデータに対して実行される操作のみが指定されるデータ型"}]}
{"number":"3.26","name":"abstract design","name_ja":"抽象設計","definitions":[{"text":"generic form that needs specialization (further design work) to produce concrete designs2. design aimed at producing designs","text_ja":"具体的な設計を生成するために特殊化（さらなる設計作業）を必要とする汎用形式2. 設計を生成することを目的とした設計"}]}
{"number":"3.27","name":"abstraction","name_ja":"抽象化","definitions":[{"text":"view of an object that focuses on the information relevant to a particular purpose and ignores the remainder of the information","text_ja":"特定の目的に関連する情報に焦点を当て、残りの情報を無視するオブジェクトの見方","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"},{"text":"process of formulating a view","text_ja":"見方を策定するプロセス"},{"text":"process of suppressing irrelevant detail to establish a simplified model, or the result of that process","text_ja":"簡略化されたモデルを確立するために無関係な詳細を抑制するプロセス、またはそのプロセスの結果","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 6.3"}],"confer":["data abstraction"],"confer_ja":["データ抽象化"]}
{"number":"3.28","name":"AC","name_ja":"AC","definitions":[{"text":"actual cost","text_ja":"実際コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.29","name":"acceptability","name_ja":"受容性","definitions":[{"text":"exposure to loss (financial or otherwise) that an organization is willing to tolerate from a risk","text_ja":"組織がリスクから許容することを望む損失（金銭的またはその他）への暴露"}],"note":"Risk acceptability can apply to an individual risk or to a collection of risks, such as the totality of risks confronting a project or enterprise. Acceptability can differ for different categories of risk and can depend on the cost of treatment or other factors.","note_ja":"リスクの受容性は、個別のリスクまたはリスクの集合（プロジェクトや企業が直面するリスクの全体など）に適用できる。受容性はリスクのカテゴリによって異なる場合があり、処理のコストやその他の要因に依存する場合がある。"}
{"number":"3.30","name":"acceptability criteria","name_ja":"受容性基準","definitions":[{"text":"documented set of characteristics of a program's work products that if satisfied, forms a sufficient basis for judging each product's content to be acceptable to support a successful review or audit","text_ja":"満たされた場合に、成功する審査や監査を支援するために各製品の内容が受容可能であると判断する十分な根拠を形成する、プログラムの作業成果物の特性に関する文書化された集合","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.1"}]}
{"number":"3.31","name":"acceptable","name_ja":"受容可能","definitions":[{"text":"meeting stakeholder expectations that can be shown to be reasonable or merited","text_ja":"合理的または相当であることが示すことができる利害関係者の期待を満たすこと"}]}
{"number":"3.32","name":"acceptance criteria","name_ja":"受入基準","definitions":[{"text":"criteria that a system or component must satisfy in order to be accepted by a user, customer, or other authorized entity","text_ja":"ユーザ、顧客、またはその他の承認されたエンティティによって受け入れられるために、システムまたはコンポーネントが満たさなければならない基準"},{"text":"a set of conditions that is required to be met before deliverables are accepted","text_ja":"成果物が受け入れられる前に満たされることが要求される条件の集合","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["requirement","test criteria"],"confer_ja":["要求事項","テスト基準"]}
{"number":"3.33","name":"acceptance test","name_ja":"受入テスト","definitions":[{"text":"test of a system or functional unit usually performed by the purchaser on his premises after installation with the participation of the vendor to ensure that the contractual requirements are met","text_ja":"契約要求事項が満たされることを確保するために、インストール後に購入者が自身の施設で、通常はベンダーの参加を得て実行するシステムまたは機能単位のテスト","reference":"ISO/IEC 2382:2015, Information technology -— Vocabulary"}],"confer":["acceptance testing","validation test"],"confer_ja":["受入テスト","妥当性確認テスト"]}
{"number":"3.34","name":"acceptance testing","name_ja":"受入テスト","definitions":[{"text":"testing conducted to determine whether a system satisfies its acceptance criteria and to enable the customer to determine whether to accept the system","text_ja":"システムが受入基準を満たしているかどうかを判定し、顧客がシステムを受け入れるかどうかを決定できるようにするために実施されるテスト"},{"text":"formal testing conducted to enable a user, customer, or other authorized entity to determine whether to accept a system or component","text_ja":"ユーザ、顧客、またはその他の承認されたエンティティがシステムまたはコンポーネントを受け入れるかどうかを決定できるようにするために実施される正式なテスト","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}],"confer":["acceptance test","validation test"],"confer_ja":["受入テスト","妥当性確認テスト"]}
{"number":"3.35","name":"accepted deliverables","name_ja":"受領成果物","definitions":[{"text":"products, results, or capabilities produced by a project and validated by the project customer or sponsors as meeting their specified acceptance criteria","text_ja":"プロジェクトによって作成され、指定された受入基準を満たすものとしてプロジェクトの顧客またはスポンサーによって妥当性確認された製品、結果、または能力","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.36","name":"access","name_ja":"アクセス","definitions":[{"text":"to obtain the use of a resource","text_ja":"リソースの使用を取得すること","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.37","name":"access facility","name_ja":"アクセス機能","definitions":[{"text":"set of service primitives that allow a stub objects to negotiate the abstract and transfer syntax to be used for the operation data to be transmitted over the channel","text_ja":"スタブオブジェクトがチャネル上で送信される操作データに使用される抽象構文と転送構文を交渉することを可能にするサービスプリミティブの集合","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.1"}]}
{"number":"3.38","name":"access method","name_ja":"アクセス方式","definitions":[{"text":"technique to obtain the use of data, the use of storage in order to read or write data, or the use of an input-output channel to transfer data","text_ja":"データの使用、データを読み書きするための記憶装置の使用、またはデータを転送するための入出力チャネルの使用を取得する技法","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.39","name":"access routine","name_ja":"アクセスルーチン","definitions":[{"text":"routine that provides access to a data structure that is hidden, usually because it is a global variable or used in an abstract data type.","text_ja":"通常はグローバル変数であるか抽象データ型で使用されるために隠蔽されているデータ構造へのアクセスを提供するルーチン"}]}
{"number":"3.40","name":"access transparency","name_ja":"アクセス透過性","definitions":[{"text":"distribution transparency which masks differences in data representation and invocation mechanisms to enable interworking between objects","text_ja":"オブジェクト間の相互動作を可能にするためにデータ表現と呼び出し機構の差異を隠蔽する分散透過性","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.4.1.1"}]}
{"number":"3.41","name":"accessibility","name_ja":"アクセシビリティ","definitions":[{"text":"extent to which products, systems, services, environments and facilities can be used by people from a population with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use","text_ja":"指定された使用状況において指定された目標を達成するために、最も広範囲の特性と能力を持つ人々によって製品、システム、サービス、環境、設備が使用できる程度","reference":"ISO/IEC 25064:2013 Systems and software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: User needs report, 4.1"},{"text":"degree to which a product or system can be used by people with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use","text_ja":"指定された使用状況において指定された目標を達成するために、最も広範囲の特性と能力を持つ人々によって製品またはシステムが使用できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.4.6"},{"text":"usability of a product, service, environment or facility by people with the widest range of capabilities","text_ja":"最も広範囲の能力を持つ人々による製品、サービス、環境、または設備の使用性","reference":"ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.1; ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.1"}],"note":"Although \"accessibility\" typically addresses users who have disabilities, the concept is not limited to disability issues. The range of capabilities includes disabilities associated with age. Accessibility for people with disabilities can be specified or measured either as the extent to which a product or system can be used by users with specified disabilities to achieve specified goals with effectiveness, efficiency, freedom from risk and satisfaction in a specified context of use, or by the presence of product properties that support accessibility. Context of use includes direct use or use supported by assistive technologies. [SOURCE: ISO 9241-171:2008","note_ja":"「アクセシビリティ」は通常、障害を持つユーザに対処するが、この概念は障害の問題に限定されない。能力の範囲には年齢に関連する障害も含まれる。障害を持つ人々のアクセシビリティは、指定された使用状況において、有効性、効率性、リスクからの自由、満足とともに指定された目標を達成するために、指定された障害を持つユーザによって製品またはシステムが使用できる程度、またはアクセシビリティを支援する製品特性の存在によって規定または測定できる。使用状況には、直接使用または支援技術によって支援される使用が含まれる。[出典：ISO 9241-171:2008"}
{"number":"3.42","name":"accessibility testing","name_ja":"アクセシビリティテスト","definitions":[{"text":"type of usability testing used to measure the degree to which a test item can be operated by users with the widest possible range of characteristics and capabilities","text_ja":"可能な限り広範囲の特性と能力を持つユーザによってテスト項目が操作できる程度を測定するために使用される使用性テストの種類","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.1"}]}
{"number":"3.43","name":"accident","name_ja":"事故","definitions":[{"text":"unplanned event or series of events that results in death, injury, illness, environmental damage, or damage to or loss of equipment or property","text_ja":"死亡、傷害、疾病、環境損害、または機器や財産の損傷や損失をもたらす計画外の事象または一連の事象","reference":"IEEE 1228-1994 (R2002) IEEE Standard for Software Safety Plans, 3.1.1"}]}
{"number":"3.44","name":"accountability","name_ja":"説明責任","definitions":[{"text":"degree to which the actions of an entity can be traced uniquely to the entity","text_ja":"エンティティの行為がそのエンティティに一意に追跡できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.6.4"}]}
{"number":"3.45","name":"accuracy","name_ja":"正確性","definitions":[{"text":"qualitative assessment of correctness, or freedom from error","text_ja":"正しさの質的評価、または誤りからの自由"},{"text":"quantitative measure of the magnitude of error","text_ja":"誤りの大きさの定量的測定"},{"text":"Within the quality management system, accuracy is an assessment of correctness","text_ja":"品質管理システムにおいて、正確性は正しさの評価である","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["precision"],"confer_ja":["精度"]}
{"number":"3.46","name":"accuracy of measurement","name_ja":"測定の正確性","definitions":[{"text":"the closeness of the agreement between the result of a measurement and the true value of the measurand","text_ja":"測定結果と被測定量の真の値との間の一致の近さ","reference":"ISO/IEC TR 14143-3:2003 Information technology — Software measurement — Functional size measurement — Part 3: Verification of functional size measurement methods, 3.1"}],"note":"Accuracy is a qualitative concept. The term precision is not a synonym for \"accuracy\". A true value is a value consistent with the definition of a given particular quantity and this is a value that would be obtained by a perfect measurement. In contexts where perfect measurement is not practically feasible, a conventional true value is a value attributed to a particular quantity and accepted, sometimes by convention, as having an uncertainty appropriate for a given purpose. 'Conventional true value', in the same reference, is sometimes called assigned value, best estimate of the value, conventional value or reference value. The accuracy can be expressed in terms of the Mean magnitude of relative error. [SOURCE: ISO/IEC Guide 99:2007 International vocabulary of metrology — Basic and general concepts and associated terms]","note_ja":"正確性は質的概念である。「精度」という用語は「正確性」の同義語ではない。真の値は、与えられた特定の量の定義と一致する値であり、これは完全な測定によって得られる値である。完全な測定が実際には不可能な文脈では、慣用真値は特定の量に起因する値であり、時には慣例により、与えられた目的に適切な不確かさを持つものとして受け入れられる。同じ参考文献における「慣用真値」は、時として付与値、値の最良推定値、慣用値、または参照値と呼ばれる。正確性は相対誤差の平均大きさの観点から表現できる。[出典：ISO/IEC Guide 99:2007 International vocabulary of metrology — Basic and general concepts and associated terms]"}
{"number":"3.47","name":"ACIA","name_ja":"ACIA","definitions":[{"text":"asynchronous communication interface adapter","text_ja":"非同期通信インターフェイスアダプタ"}]}
{"number":"3.48","name":"ACID","name_ja":"ACID","definitions":[{"text":"Atomicity Consistency Isolation Durability","text_ja":"原子性一貫性分離性永続性","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.49","name":"ACQ","name_ja":"ACQ","definitions":[{"text":"acquirer","text_ja":"取得者","reference":"ISO/IEC TR 29110-5-6-2:2014 Systems and software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 5-6-2: Systems engineering — Management and engineering guide: Generic profile group: Basic profile, 4.2"}]}
{"number":"3.50","name":"acquire project team","name_ja":"プロジェクトチーム獲得","definitions":[{"text":"the process of confirming human resource availability and obtaining the team necessary to complete project activities","text_ja":"人的資源の利用可能性を確認し、プロジェクト活動を完了するために必要なチームを獲得するプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.51","name":"acquirer","name_ja":"取得者","definitions":[{"text":"stakeholder that acquires or procures a product or service from a supplier","text_ja":"供給者から製品またはサービスを取得または調達する利害関係者","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.1; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.1; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.1"},{"text":"person or organization that acquires or procures a system, software product, or software service (which can be part of a system) from a supplier","text_ja":"供給者からシステム、ソフトウェア製品、またはソフトウェアサービス（システムの一部であり得る）を取得または調達する個人または組織","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.13"},{"text":"individual or organization that acquires or procures a system, software product or software service from a supplier","text_ja":"供給者からシステム、ソフトウェア製品、またはソフトウェアサービスを取得または調達する個人または組織","reference":"ISO/IEC 25040:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation process, 4.1"}],"alias":["owner","purchaser"],"alias_ja":["所有者","購入者"],"note":"The acquirer can be internal or external to the supplier organization. Acquisition of a software product can involve, but does not necessarily require, a legal contract or a financial transaction between the acquirer and supplier.","note_ja":"取得者は供給者組織の内部または外部である場合がある。ソフトウェア製品の取得は、取得者と供給者の間の法的契約や金銭的取引を含む場合があるが、必ずしも必要ではない。"}
{"number":"3.52","name":"acquisition","name_ja":"取得","definitions":[{"text":"process of obtaining a system, product, or service","text_ja":"システム、製品、またはサービスを獲得するプロセス","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 3.2; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.2"},{"text":"obtaining human and material resources necessary to perform project activities. Acquisition implies a cost of resources, and is not necessarily financial","text_ja":"プロジェクト活動を実行するために必要な人的資源と物的資源を獲得すること。取得は資源のコストを含意し、必ずしも金銭的ではない","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.53","name":"acquisition strategy","name_ja":"取得戦略","definitions":[{"text":"specific approach to acquiring products and services that is based on considerations of supply sources, acquisition methods, requirements specification types, contract or agreement types, and related acquisition risks","text_ja":"供給源、取得方法、要求事項仕様の種類、契約や合意の種類、および関連する取得リスクの考慮に基づく製品とサービスを取得するための具体的なアプローチ"}]}
{"number":"3.54","name":"action","name_ja":"動作","definitions":[{"text":"element of a step that a user performs during a procedure","text_ja":"ユーザが手順中に実行するステップの要素","reference":"ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.2"},{"text":"description of an operation to be taken in the formulation of a solution","text_ja":"解の策定において取られるべき操作の記述","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.7"},{"text":"something which happens","text_ja":"起こる何か","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 8.3"},{"text":"user behavior that a system accepts as a request for a particular operation","text_ja":"システムが特定の操作の要求として受け入れるユーザの行動","reference":"ISO/IEC TR 25060:2010 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: General framework for usability-related information, 2.2"},{"text":"process of transformation that operates upon data or other types of inputs to create data, produce outputs, or change the state or condition of the subject software","text_ja":"データまたはその他の種類の入力に対して動作し、データを作成し、出力を生成し、または対象ソフトウェアの状態や条件を変更する変換プロセス","reference":"IEEE 1175.3-2004 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying Software Behavior"},{"text":"statement of causal and affective relationships in a behavior model linking particular stimulus interactions to particular response interactions and changes within a unit under a certain set of conditions on a unit's lifeline","text_ja":"単位のライフライン上の特定の条件セットの下で、特定の刺激相互作用を特定の応答相互作用および単位内の変化に結び付ける行動モデルにおける因果関係と情動関係の記述","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.1"}]}
{"number":"3.55","name":"action entry","name_ja":"動作エントリ","definitions":[{"text":"indication of the relevance of an action to a particular rule","text_ja":"特定の規則に対する動作の関連性の表示","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.9"}]}
{"number":"3.56","name":"action of interest","name_ja":"注目動作","definitions":[{"text":"action in a transaction which leads to a state change of significance to the transaction","text_ja":"トランザクションにとって重要な状態変化をもたらすトランザクション内の動作","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 13.7.1.2"}]}
{"number":"3.57","name":"action signature","name_ja":"動作シグネチャ","definitions":[{"text":"specification of an action that comprises the name for the action, the number, names and types of its parameters, and an indication of the causality of the object that instantiates the action template","text_ja":"動作の名前、そのパラメータの数、名前、型、および動作テンプレートをインスタンス化するオブジェクトの因果性の表示を含む動作の仕様","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.14"}]}
{"number":"3.58","name":"action stub","name_ja":"動作スタブ","definitions":[{"text":"list of all the actions to be taken in the solution of a problem","text_ja":"問題の解決において取られるべきすべての動作のリスト","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.11"}]}
{"number":"3.59","name":"activation","name_ja":"活性化","definitions":[{"text":"one occurrence of a function's transformation of some subset of its inputs into some subset of its outputs","text_ja":"機能がその入力の一部の部分集合をその出力の一部の部分集合に変換する1回の発生","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.3"}]}
{"number":"3.60","name":"activation constraint","name_ja":"活性化制約","definitions":[{"text":"function's requirement for the presence of a non-empty object set in a particular arrow role as a precondition for some activation of the function","text_ja":"機能のある活性化の前提条件として、特定の矢印役割における空でないオブジェクト集合の存在に対する機能の要求","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.4"}]}
{"number":"3.61","name":"active area","name_ja":"アクティブ領域","definitions":[{"text":"(on-screen documentation) area that responds to user input","text_ja":"（画面上文書）ユーザ入力に応答する領域"}],"example":"a window, icon or text field","example_ja":"ウィンドウ、アイコン、またはテキストフィールド"}
{"number":"3.62","name":"active enterprise object","name_ja":"能動的エンタープライズオブジェクト","definitions":[{"text":"enterprise object that is able to fill an action role","text_ja":"動作役割を果たすことができるエンタープライズオブジェクト","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.3.1"}]}
{"number":"3.63","name":"active interconnection","name_ja":"能動的相互接続","definitions":[{"text":"physical interaction mechanism allowing the action of one thing to cause a change or to stimulate an action in another thing","text_ja":"一つのものの動作が他のものに変化を引き起こしたり、動作を刺激したりすることを可能にする物理的相互作用機構","reference":"IEEE 1175.2-2006 IEEE Recommended Practice for CASE Tool Interconnection — Characterization of Interconnections, 3.1"}]}
{"number":"3.64","name":"active redundancy","name_ja":"能動的冗長性","definitions":[{"text":"in fault tolerance, the use of redundant elements operating simultaneously to prevent, or permit recovery from, failures","text_ja":"耐障害性において、障害を防止したり、障害からの回復を可能にしたりするために同時に動作する冗長要素の使用"}],"confer":["standby redundancy"],"confer_ja":["待機冗長性"]}
{"number":"3.65","name":"active text","name_ja":"アクティブテキスト","definitions":[{"text":"text displayed on the screen that responds to user input","text_ja":"ユーザ入力に応答する画面に表示されるテキスト"}]}
{"number":"3.66","name":"active white space","name_ja":"アクティブ空白","definitions":[{"text":"area around textual or graphical elements, not including margins, which breaks up text, separates topic and subtopic groupings, indicates hierarchical and topical relationships, highlights information, or makes text easier to read","text_ja":"余白を含まない、テキストまたはグラフィック要素の周りの領域で、テキストを分割し、トピックとサブトピックのグループ分けを分離し、階層的およびトピック的関係を示し、情報を強調し、またはテキストを読みやすくする"}]}
{"number":"3.67","name":"activity","name_ja":"活動","definitions":[{"text":"set of cohesive tasks of a process","text_ja":"プロセスの結合したタスクの集合","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.3; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.3"},{"text":"a distinct, scheduled portion of work performed during the course of a project","text_ja":"プロジェクトの過程で実行される明確で計画された作業の部分","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"order submitted to the system under test (SUT) by a user or an emulated user demanding the execution of a data processing operation according to a defined algorithm to produce specific output data from specific input data and (if requested) stored data","text_ja":"特定の入力データと（要求された場合）格納データから特定の出力データを生成するために、定義されたアルゴリズムに従ってデータ処理操作の実行を要求する、ユーザまたはエミュレートされたユーザによってテスト対象システム（SUT）に提出される命令","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.1"},{"text":"defined body of work to be performed, including its required input information and output information","text_ja":"実行すべき定義された作業体で、必要な入力情報と出力情報を含む"},{"text":"set of cohesive tasks of a process, which transforms inputs into outputs","text_ja":"入力を出力に変換するプロセスの結合したタスクの集合","reference":"IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2"},{"text":"element of work performed during the implementation of a process","text_ja":"プロセスの実装中に実行される作業の要素"},{"text":"set of actions that consume time and resources and whose performance is necessary to achieve, or contribute to, the realization of one or more outcomes","text_ja":"時間と資源を消費し、一つ以上の成果の実現を達成するか、それに貢献するために実行が必要な動作の集合","reference":"ISO/IEC TR 24766:2009 Information technology — Systems and software engineering — Guide for requirements engineering tool capabilities, 3.1"},{"text":"single-headed directed acyclic graph of actions, where occurrence of each action in the graph is made possible by the occurrence of all immediately preceding actions (i.e., by all adjacent actions which are closer to the head)","text_ja":"グラフ内の各動作の発生が、すべての直前の動作（すなわち、頭部により近いすべての隣接する動作）の発生によって可能になる、単一方向の有向非環式動作グラフ","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 8.6"}],"note":"An activity normally has an expected duration, cost, and resource requirements. Activities are often subdivided into tasks.","note_ja":"活動は通常、期待される期間、コスト、および資源要求を持つ。活動はしばしばタスクに細分される。"}
{"number":"3.68","name":"activity attributes","name_ja":"活動属性","definitions":[{"text":"multiple attributes associated with each schedule activity that can be included within the activity list. Activity attributes include activity codes, predecessor activities, successor activities, logical relationships, leads and lags, resource requirements, imposed dates, constraints, and assumptions","text_ja":"活動リストに含めることができる各スケジュール活動に関連付けられた複数の属性。活動属性には、活動コード、先行活動、後続活動、論理関係、リードとラグ、資源要求、課せられた日付、制約、および仮定が含まれる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.69","name":"activity code","name_ja":"活動コード","definitions":[{"text":"one or more numerical or text values that identify characteristics of the work or in some way categorize the schedule activity that allows filtering and ordering of activities within reports","text_ja":"作業の特性を識別するか、何らかの方法でスケジュール活動を分類し、レポート内での活動のフィルタリングと順序付けを可能にする一つ以上の数値またはテキスト値","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.70","name":"activity cost estimates","name_ja":"活動コスト見積り","definitions":[{"text":"the projected cost of the schedule activity that includes the cost for all resources required to perform and complete the activity, including all cost types and cost components","text_ja":"すべてのコストタイプとコスト構成要素を含む、活動を実行し完了するために必要なすべての資源のコストを含むスケジュール活動の予測コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.71","name":"activity duration","name_ja":"活動期間","definitions":[{"text":"the time in calendar units between the start and finish of a schedule activity","text_ja":"スケジュール活動の開始と終了の間のカレンダー単位での時間","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["duration"],"confer_ja":["期間"]}
{"number":"3.72","name":"activity duration estimate","name_ja":"活動期間見積り","definitions":[{"text":"a quantitative assessment of the likely amount or outcome for the duration of an activity","text_ja":"活動の期間に対する可能性のある量または結果の定量的評価","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.73","name":"activity group","name_ja":"活動グループ","definitions":[{"text":"set of related activities.","text_ja":"関連する活動の集合"}]}
{"number":"3.74","name":"activity identifier","name_ja":"活動識別子","definitions":[{"text":"a short, unique numeric or text identification assigned to each schedule activity to differentiate that project activity from other activities. Typically unique within any one project schedule network diagram","text_ja":"そのプロジェクト活動を他の活動から区別するために各スケジュール活動に割り当てられる短い一意の数値またはテキスト識別子。通常、任意の一つのプロジェクトスケジュールネットワーク図内で一意である","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.75","name":"activity list","name_ja":"活動リスト","definitions":[{"text":"a documented tabulation of schedule activities that shows the activity description, activity identifier, and a sufficiently detailed scope of work description so project team members understand what work is to be performed","text_ja":"活動記述、活動識別子、およびプロジェクトチームメンバーが実行すべき作業を理解できるように十分に詳細な作業範囲記述を示すスケジュール活動の文書化された集計","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.76","name":"activity resource requirements","name_ja":"活動資源要求","definitions":[{"text":"the types and quantities of resources required for each activity in a work package","text_ja":"作業パッケージ内の各活動に必要な資源の種類と量","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.77","name":"activity type","name_ja":"活動型","definitions":[{"text":"classification of activities defined by the execution of the same algorithm","text_ja":"同じアルゴリズムの実行によって定義される活動の分類","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.2"}]}
{"number":"3.78","name":"activity-based costing (ABC)","name_ja":"活動基準原価計算（ABC）","definitions":[{"text":"cost accounting method that allocates overhead costs based on specific production activities rather than allocating from a single overhead pool","text_ja":"単一の間接費プールから配分するのではなく、特定の生産活動に基づいて間接費を配分する原価計算方法"}]}
{"number":"3.79","name":"activity-oriented WBS","name_ja":"活動指向WBS","definitions":[{"text":"a work breakdown structure in which activities and tasks are denoted by verbs that indicate work to be accomplished. Each task name includes the work product or work products to be produced by that task","text_ja":"達成すべき作業を示す動詞によって活動とタスクが表記される作業分解構造。各タスク名には、そのタスクによって生成される作業成果物または作業成果物が含まれる","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.80","name":"actor","name_ja":"アクタ","definitions":[{"text":"role (with respect to that action) in which the enterprise object fulfilling the role participates in the action","text_ja":"役割を果たすエンタープライズオブジェクトが動作に参加する（その動作に関しての）役割","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.3.2"},{"text":"organization or CASE tool that supplies or acquires SEE services","text_ja":"SEEサービスを提供または取得する組織またはCASEツール","reference":"ISO/IEC 15940:2013 Systems and software engineering — Software Engineering Environment Services, 2.10"},{"text":"in UML, someone or something outside the system that interacts with the system","text_ja":"UMLにおいて、システムと相互作用するシステム外の誰かまたは何か"}],"note":"It can be of interest to specify which actor initiates that action.","note_ja":"どのアクタがその動作を開始するかを指定することは有用である場合がある。"}
{"number":"3.81","name":"actual cost (AC)","name_ja":"実際コスト（AC）","definitions":[{"text":"the realized cost incurred for the work performed on an activity during a specific time period","text_ja":"特定の期間中に活動で実行された作業に対して発生した実現コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"alias":["actual cost of work performed (ACWP)"],"alias_ja":["実行作業の実際コスト（ACWP）"],"confer":["earned value management","earned value technique"],"confer_ja":["出来高管理","出来高技法"]}
{"number":"3.82","name":"actual depreciation","name_ja":"実際減価償却","definitions":[{"text":"true loss in value of an asset, determined only when the asset is sold","text_ja":"資産が売却された時にのみ決定される、資産の価値の真の損失"}]}
{"number":"3.83","name":"actual dollar analysis","name_ja":"実際ドル分析","definitions":[{"text":"addressing inflation or deflation by using cash-flow amounts that represent actual amounts of money at the time of the cash flow","text_ja":"キャッシュフローの時点での実際の金額を表すキャッシュフロー額を使用することによってインフレーションまたはデフレーションに対処すること"}],"confer":["constant dollar analysis"],"confer_ja":["一定ドル分析"]}
{"number":"3.84","name":"actual duration","name_ja":"実際期間","definitions":[{"text":"the time in calendar units between the actual start date of the schedule activity and either the data date of the project schedule if the schedule activity is in progress or the actual finish date if the schedule activity is complete","text_ja":"スケジュール活動の実際開始日と、スケジュール活動が進行中の場合はプロジェクトスケジュールのデータ日付、またはスケジュール活動が完了している場合は実際終了日との間のカレンダー単位での時間","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.85","name":"actual results","name_ja":"実際結果","definitions":[{"text":"set of behaviors or conditions of a test item, or set of conditions of associated data or the test environment, observed as a result of test execution","text_ja":"テスト実行の結果として観察される、テスト項目の行動または条件の集合、または関連データやテスト環境の条件の集合","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.2"}],"example":"outputs to hardware, changes to data, reports, and communication messages sent","example_ja":"ハードウェアへの出力、データの変更、レポート、および送信された通信メッセージ"}
{"number":"3.86","name":"ACWP","name_ja":"ACWP","definitions":[{"text":"actual cost of work performed","text_ja":"実行作業の実際コスト"}]}
{"number":"3.87","name":"adaptability","name_ja":"適応性","definitions":[{"text":"degree to which a product or system can effectively and efficiently be adapted for different or evolving hardware, software or other operational or usage environments","text_ja":"製品またはシステムが異なるまたは進化するハードウェア、ソフトウェア、またはその他の運用環境や使用環境に効果的かつ効率的に適応できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.8.1"}],"confer":["flexibility"],"confer_ja":["柔軟性"],"note":"Adaptability includes the scalability of internal capacity, such as screen fields, tables, transaction volumes, and report formats. Adaptations include those carried out by specialized support staff, business or operational staff, or end users. If the system is to be adapted by the end user, adaptability corresponds to suitability for individualization as defined in ISO 9241 110.","note_ja":"適応性には、画面フィールド、表、トランザクション量、レポート形式などの内部容量のスケーラビリティが含まれる。適応には、専門サポートスタッフ、業務または運用スタッフ、またはエンドユーザによって実行されるものが含まれる。システムがエンドユーザによって適応される場合、適応性はISO 9241 110で定義されている個別化への適合性に対応する。"}
{"number":"3.88","name":"adaptation data","name_ja":"適応データ","definitions":[{"text":"data used to adapt a program to a given installation site or to given conditions in its operational environment","text_ja":"プログラムを特定のインストールサイトまたはその運用環境における特定の条件に適応させるために使用されるデータ"}]}
{"number":"3.89","name":"adaptation parameter","name_ja":"適応パラメータ","definitions":[{"text":"variable that is given a specific value to adapt a program to a given installation site or to given conditions in its operational environment","text_ja":"プログラムを特定のインストールサイトまたはその運用環境における特定の条件に適応させるために特定の値が与えられる変数"}],"example":"the variable Installation_Site_Latitude","example_ja":"変数Installation_Site_Latitude"}
{"number":"3.90","name":"adapter","name_ja":"アダプタ","definitions":[{"text":"object adapter","text_ja":"オブジェクトアダプタ","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.2.1"}]}
{"number":"3.91","name":"adaptive life cycle","name_ja":"適応型ライフサイクル","definitions":[{"text":"a project life cycle, also known as change-driven or agile methods, that is intended to facilitate change and require a high degree of ongoing stakeholder involvement. Adaptive life cycles are also iterative and incremental, but differ in that iterations are very rapid (usually 2-4 weeks in length) and are fixed in time and resources","text_ja":"変更駆動型またはアジャイル手法としても知られる、変更を促進することを意図し、高度な継続的利害関係者関与を必要とするプロジェクトライフサイクル。適応型ライフサイクルも反復的で漸進的であるが、反復が非常に高速（通常2-4週間の長さ）で、時間と資源が固定されている点で異なる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.92","name":"adaptive maintenance","name_ja":"適応保守","definitions":[{"text":"modification of a software product, performed after delivery, to keep a software product usable in a changed or changing environment","text_ja":"変化したまたは変化する環境においてソフトウェア製品を使用可能に保つために、引き渡し後に実行されるソフトウェア製品の修正","reference":"IEEE 14764-2006 Software Engineering - Software Life Cycle Processes - Maintenance, 3.1"}],"example":"The operating system is upgraded and some changes are made to accommodate the new operating system.","example_ja":"オペレーティングシステムがアップグレードされ、新しいオペレーティングシステムに対応するためにいくつかの変更が行われる。","note":"Adaptive maintenance provides enhancements necessary to accommodate changes in the environment in which a software product must operate. These changes are those that must be made to keep pace with the changing environment.","note_ja":"適応保守は、ソフトウェア製品が動作しなければならない環境の変化に対応するために必要な拡張を提供する。これらの変更は、変化する環境に歩調を合わせるために行われなければならないものである。"}
{"number":"3.93","name":"added source statements","name_ja":"追加ソース文","definitions":[{"text":"count of source statements that were created specifically for the software product","text_ja":"ソフトウェア製品のために特別に作成されたソース文の数"}]}
{"number":"3.94","name":"additional quality planning tools","name_ja":"追加品質計画ツール","definitions":[{"text":"a set of tools used to define the quality requirements and to plan effective quality management activities. They include, but are not limited to: brainstorming, force field analysis, nominal group techniques and quality management and control tools","text_ja":"品質要求事項を定義し、効果的な品質管理活動を計画するために使用されるツールの集合。これには、ブレインストーミング、フォースフィールド分析、名目グループ技法、品質管理制御ツールが含まれるが、これらに限定されない","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.95","name":"additive weighting","name_ja":"加算重み付け","definitions":[{"text":"assignment of different values to increase the importance of selected decision attributes","text_ja":"選択された決定属性の重要性を増すために異なる値を割り当てること"}],"confer":["compensatory decision technique","nondimensional scaling","analytic hierarchy process"],"confer_ja":["補償的決定技法","無次元スケーリング","階層分析手法"]}
{"number":"3.96","name":"address","name_ja":"アドレス","definitions":[{"text":"number, character, or group of characters that identifies a given device or storage location","text_ja":"特定のデバイスまたは記憶位置を識別する数、文字、または文字群"},{"text":"to refer to a device or storage location by an identifying number, character, or group of characters3. to deal with, to take into consideration; (specifically) to decide whether and when a defined documentation topic is to be included, either directly or by reference to another document; to decide whether an item is to be recorded prior to the test execution (in a tool or not in a tool), recorded during the test execution, recorded post-test execution, not recorded (addressed by the process), or excluded.","text_ja":"識別番号、文字、または文字群によってデバイスまたは記憶位置を参照すること3. 対処する、考慮に入れる；（具体的には）定義された文書トピックを直接的にまたは他の文書への参照によって含めるかどうかおよびいつ含めるかを決定すること；項目をテスト実行前に（ツール内またはツール外で）記録するか、テスト実行中に記録するか、テスト実行後に記録するか、記録しない（プロセスによって対処される）か、または除外するかを決定すること"}]}
{"number":"3.97","name":"address field","name_ja":"アドレスフィールド","definitions":[{"text":"field of a computer instruction that contains addresses, information necessary to derive addresses, or values of operands","text_ja":"アドレス、アドレスを導出するために必要な情報、またはオペランドの値を含むコンピュータ命令のフィールド"}],"alias":["address part"],"alias_ja":["アドレス部"],"confer":["operation field"],"confer_ja":["操作フィールド"]}
{"number":"3.98","name":"address format","name_ja":"アドレス形式","definitions":[{"text":"number and arrangement of address fields in a computer instruction","text_ja":"コンピュータ命令におけるアドレスフィールドの数と配置"},{"text":"number and arrangement of elements within an address, such as the elements needed to identify a particular channel, device, disk sector, and record in magnetic disk storage","text_ja":"磁気ディスク記憶装置における特定のチャネル、デバイス、ディスクセクタ、およびレコードを識別するために必要な要素など、アドレス内の要素の数と配置"}],"confer":["n-address instruction","n-plus-one address instruction"],"confer_ja":["nアドレス命令","nプラス1アドレス命令"]}
{"number":"3.99","name":"address modification","name_ja":"アドレス修正","definitions":[{"text":"arithmetic, logical, or syntactic operation performed on an address","text_ja":"アドレスに対して実行される算術的、論理的、または構文的操作"}],"confer":["effective address","indexed address","relative address","relocatable address"],"confer_ja":["実効アドレス","インデックスアドレス","相対アドレス","再配置可能アドレス"]}
{"number":"3.100","name":"address space","name_ja":"アドレス空間","definitions":[{"text":"addresses that a computer program can access","text_ja":"コンピュータプログラムがアクセスできるアドレス"},{"text":"number of memory locations that a central processing unit can address","text_ja":"中央処理装置がアドレス指定できるメモリ位置の数"}],"note":"In some systems, this is the set of physical storage locations that a program can access, disjoint from other programs, together with the set of virtual addresses referring to those storage locations, which are accessible by other programs.","note_ja":"一部のシステムでは、これは他のプログラムと分離された、プログラムがアクセスできる物理記憶位置の集合と、他のプログラムからアクセス可能なそれらの記憶位置を参照する仮想アドレスの集合である。"}
{"number":"3.101","name":"addressing exception","name_ja":"アドレス指定例外","definitions":[{"text":"exception that occurs when a program calculates an address outside the bounds of the storage available to it","text_ja":"プログラムが利用可能な記憶装置の境界外のアドレスを計算した時に発生する例外"}],"confer":["data exception","operation exception","overflow exception","protection exception","underflow exception"],"confer_ja":["データ例外","操作例外","オーバーフロー例外","保護例外","アンダーフロー例外"]}
{"number":"3.102","name":"addressing mode","name_ja":"アドレス指定モード","definitions":[{"text":"method to search operand position in the instruction set architecture for a central processing unit","text_ja":"中央処理装置の命令セットアーキテクチャにおいてオペランド位置を検索する方法"}]}
{"number":"3.103","name":"addressing range","name_ja":"アドレス指定範囲","definitions":[{"text":"address space specified and used by the instruction system of a computer","text_ja":"コンピュータの命令システムによって指定され使用されるアドレス空間"}],"note":"An addressing range depends on the bits of address lines and addressing mode.","note_ja":"アドレス指定範囲は、アドレス線のビット数とアドレス指定モードに依存する。"}{"number":"3.103","name":"addressing range","name_ja":"アドレス範囲","definitions":[{"text":"address space specified and used by the instruction system of a computer","text_ja":"コンピュータの命令システムによって指定され使用されるアドレス空間"}],"note":"An addressing range depends on the bits of address lines and addressing mode.","note_ja":"アドレス範囲は、アドレスライン数とアドレシングモードに依存する"}
{"number":"3.104","name":"adjusted size","name_ja":"調整サイズ","definitions":[{"text":"a size based on the functional size multiplied by the technical complexity adjustment","text_ja":"機能サイズに技術的複雑性調整を乗じた値に基づくサイズ","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}],"note":"This measure does not represent functional size.","note_ja":"この測度は機能サイズを表すものではない"}
{"number":"3.105","name":"adjusting leads and lags","name_ja":"リードとラグの調整","definitions":[{"text":"a technique used to find ways to bring project activities that are behind into alignment with plan during project execution","text_ja":"プロジェクト実行中に遅れているプロジェクト活動を計画に合わせる方法を見つけるために使用される技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.106","name":"ADM","name_ja":"ADM","definitions":[{"text":"architecture-driven modernization","text_ja":"アーキテクチャ駆動型モダナイゼーション","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}]}
{"number":"3.107","name":"adoption process","name_ja":"採用プロセス","definitions":[{"text":"set of activities by which an organization brings CASE tools into widespread use","text_ja":"組織がCASEツールを広く使用するための活動の集合","reference":"ISO/IEC TR 14471:2007 Information technology — Software engineering — Guidelines for the adoption of CASE tools, 2.1.2"}]}
{"number":"3.108","name":"ADT","name_ja":"ADT","definitions":[{"text":"Abstract Data Type","text_ja":"抽象データ型","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.109","name":"advanced profile","name_ja":"上級プロファイル","definitions":[{"text":"profile targeted at very small enterprises (VSEs) which want to sustain and grow as an independent competitive system or software development business","text_ja":"独立した競争力のあるシステムまたはソフトウェア開発事業として維持・成長を望む超小規模企業（VSE）を対象とするプロファイル","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.3"}]}
{"number":"3.110","name":"adverse consequence","name_ja":"有害な結果","definitions":[{"text":"undesirable consequence associated with a loss","text_ja":"損失に関連する望ましくない結果","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.4.2"},{"text":"consequence that results in a specified level of loss","text_ja":"指定されたレベルの損失をもたらす結果","reference":"ISO/IEC 15026-3:2015 Systems and software engineering — Systems and software assurance — Part 3: System integrity levels, 3.1"}],"confer":["risk"],"confer_ja":["リスク"],"note":"An adverse consequence results from the system-of-interest being in a dangerous condition combined with th environment of the system being in its worst-case state (relative to the adverse consequence). The concept of adverse consequences covers not only harm in the safety context, but also other losses, such as loss of assets in the security context.","note_ja":"有害な結果は、対象システムが危険な状態にあることと、システムの環境が最悪の状態にあることの組み合わせから生じる。有害な結果の概念は、安全性の文脈における害だけでなく、セキュリティの文脈における資産の損失などの他の損失も含む"}
{"number":"3.111","name":"AE(I)","name_ja":"AE(I)","definitions":[{"text":"Application Entity (Invocation)","text_ja":"アプリケーション・エンティティ（呼び出し）","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.112","name":"affective relationship","name_ja":"影響関係","definitions":[{"text":"functional dependency between prior input interaction occurrences and later output interaction occurrences in a behavior pattern","text_ja":"行動パターンにおける先行する入力相互作用発生と後続する出力相互作用発生の間の機能的依存関係","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.2"}]}
{"number":"3.113","name":"afferent","name_ja":"求心性","definitions":[{"text":"pertaining to a flow of data or control from a subordinate module to a superordinate module in a software system","text_ja":"ソフトウェアシステムにおいて下位モジュールから上位モジュールへのデータまたは制御の流れに関する"}],"confer":["efferent"],"confer_ja":["遠心性"]}
{"number":"3.114","name":"affinity diagram","name_ja":"親和図","definitions":[{"text":"a group creativity technique that allows large numbers of ideas to be classified into groups for review and analysis","text_ja":"大量のアイデアを分類してグループ化し、レビューと分析を行うことができるグループ創造技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.115","name":"agent","name_ja":"エージェント","definitions":[{"text":"active enterprise object that has been delegated something (authorization, responsibility, provision of a service, etc.) by, and acts for, a party (in exercising the authorization, carrying out the responsibility, providing the service, etc.)","text_ja":"当事者から何か（認可、責任、サービスの提供など）を委譲され、当事者のために行動する（認可の行使、責任の実行、サービスの提供など）活動的な企業オブジェクト","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.6.8"}],"note":"An agent can be a party or can be the ODP system or one of its components. Another system in the environment of the ODP system can also be an agent. The delegation can have been direct, by a party, or indirect, by an agent of the party having authorization from the party to so delegate.","note_ja":"エージェントは当事者である場合もあれば、ODPシステムまたはそのコンポーネントの1つである場合もある。ODPシステムの環境内の別のシステムもエージェントとなりうる。委譲は、当事者による直接的なものか、当事者から委譲する認可を得た当事者のエージェントによる間接的なものかのいずれかである"}
{"number":"3.116","name":"aggregate responsibility","name_ja":"集約責任","definitions":[{"text":"broadly stated responsibility that is eventually refined as specific properties and constraints","text_ja":"最終的に具体的な特性と制約として洗練される、広く述べられた責任","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.3"}]}
{"number":"3.117","name":"aggregation","name_ja":"集約","definitions":[{"text":"derived relationship between two elements that are groups of other elements that represents all individual relationships between the grouped elements of the two groups","text_ja":"他の要素のグループである2つの要素間の派生関係で、2つのグループのグループ化された要素間の全ての個別関係を表現する","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}]}
{"number":"3.118","name":"aggregation method","name_ja":"集約方法","definitions":[{"text":"method that combines a set of measurement values to create a composite value","text_ja":"測定値の集合を組み合わせて複合値を作成する方法","reference":"ISO/IEC 33003:2015 Information technology — Process assessment — Requirements for process measurement frameworks, 3.1"}],"note":"Aggregation methods are based on compensatory or non-compensatory models","note_ja":"集約方法は代償的または非代償的モデルに基づく"}
{"number":"3.119","name":"agile development","name_ja":"アジャイル開発","definitions":[{"text":"software development approach based on iterative development, frequent inspection and adaptation, and incremental deliveries, in which requirements and solutions evolve through collaboration in cross-functional teams and through continuous stakeholder feedback","text_ja":"反復開発、頻繁な検査と適応、および段階的な納品に基づくソフトウェア開発アプローチで、要求と解決策が機能横断チームでの協力と継続的なステークホルダーフィードバックを通じて進化する","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.4; ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.1"}]}
{"number":"3.120","name":"agile environment","name_ja":"アジャイル環境","definitions":[{"text":"organization or team implementing agile development methods and approaches","text_ja":"アジャイル開発手法とアプローチを実装する組織またはチーム","reference":"ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.2"}]}
{"number":"3.121","name":"agreement","name_ja":"合意","definitions":[{"text":"mutual acknowledgment of terms and conditions under which a working relationship is conducted","text_ja":"作業関係が実施される条件の相互承認","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.5; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.4"},{"text":"any document or communication that defines the initial intentions of a project. This can take the form of a contract, memorandum of understanding (MOU), letters of agreement, verbal agreements, email, etc.","text_ja":"プロジェクトの初期意図を定義する文書または通信。これは、契約、覚書（MOU）、合意書、口頭合意、電子メールなどの形式を取ることができる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["contract"],"confer_ja":["契約"]}
{"number":"3.122","name":"AHP","name_ja":"AHP","definitions":[{"text":"analytic hierarchy process","text_ja":"階層分析法"}]}
{"number":"3.123","name":"algebraic language","name_ja":"代数言語","definitions":[{"text":"programming language that permits the construction of statements resembling algebraic expressions, such as Y = X + 5","text_ja":"Y = X + 5 のような代数式に似た文を構築することを可能にするプログラミング言語"}],"confer":["algorithmic language","list processing language","logic programming language"],"confer_ja":["アルゴリズム言語","リスト処理言語","論理プログラミング言語"],"example":"FORTRAN"}
{"number":"3.124","name":"algorithm","name_ja":"アルゴリズム","definitions":[{"text":"finite set of well-defined rules for the solution of a problem in a finite number of steps","text_ja":"有限の手順で問題を解決するための明確に定義された規則の有限集合"},{"text":"sequence of operations for performing a specific task","text_ja":"特定のタスクを実行するための操作の順序"},{"text":"finite ordered set of well-defined rules for the solution of a problem","text_ja":"問題を解決するための明確に定義された規則の有限順序集合","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"example":"a complete specification of a sequence of arithmetic operations for evaluating sine x to a given precision"}
{"number":"3.125","name":"algorithmic language","name_ja":"アルゴリズム言語","definitions":[{"text":"programming language designed for expressing algorithms","text_ja":"アルゴリズムを表現するために設計されたプログラミング言語"}],"confer":["algebraic language","list processing language","logic programming language"],"confer_ja":["代数言語","リスト処理言語","論理プログラミング言語"],"example":"ALGOL"}
{"number":"3.126","name":"alias","name_ja":"別名","definitions":[{"text":"alternate name for an IDEF1X model construct (class, responsibility, entity, or domain)","text_ja":"IDEF1Xモデル構成要素（クラス、責任、エンティティ、またはドメイン）の代替名","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.4"}]}
{"number":"3.127","name":"allocated baseline","name_ja":"割り当てベースライン","definitions":[{"text":"approved requirements for a product, subsystem or component, describing the functional, performance, interoperability, and interface requirements that are allocated from higher-level requirements and the verifications required to demonstrate achievement of those requirements, as established at a specific point in time and documented in the allocated configuration documentation","text_ja":"製品、サブシステム、またはコンポーネントの承認された要求で、上位レベルの要求から割り当てられた機能、性能、相互運用性、およびインターフェース要求と、それらの要求の達成を実証するために必要な検証を記述し、特定の時点で確立され、割り当て構成文書に文書化されたもの","reference":"IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1"}],"confer":["developmental configuration","functional baseline","product baseline","allocated configuration identification"],"confer_ja":["開発構成","機能ベースライン","製品ベースライン","割り当て構成識別"]}
{"number":"3.128","name":"allocated configuration identification","name_ja":"割り当て構成識別","definitions":[{"text":"in configuration management, the current approved specifications governing the development of configuration items that are part of a higher-level configuration ite","text_ja":"構成管理において、上位レベルの構成項目の一部である構成項目の開発を管理する現在承認された仕様"}],"confer":["functional configuration identification","product configuration identification","allocated baseline"],"confer_ja":["機能構成識別","製品構成識別","割り当てベースライン"],"note":"Each specification defines the functional characteristics that are allocated from those of the higher-level configuration item, establishes the tests required to demonstrate achievement of its allocated functional characteristics, delineates necessary interface requirements with other associated configuration items, and establishes design constraints, if any.","note_ja":"各仕様は、上位レベルの構成項目から割り当てられた機能特性を定義し、その割り当てられた機能特性の達成を実証するために必要なテストを確立し、他の関連する構成項目との必要なインターフェース要求を明確にし、設計制約があれば確立する"}
{"number":"3.129","name":"allocated requirement","name_ja":"割り当て要求","definitions":[{"text":"requirement that levies all or part of the performance and functionality of a higher- -level requirement on a lowe level architectural element or design component","text_ja":"上位レベルの要求の性能と機能の全てまたは一部を下位レベルのアーキテクチャ要素または設計コンポーネントに課す要求"}]}
{"number":"3.130","name":"allocation","name_ja":"割り当て","definitions":[{"text":"process of distributing requirements, resources, or other entities among the components of a system or program","text_ja":"システムまたはプログラムのコンポーネント間で要求、リソース、またはその他のエンティティを分配するプロセス"},{"text":"result of the distribution of requirements, resources, or other entities among the components of a system or program","text_ja":"システムまたはプログラムのコンポーネント間での要求、リソース、またはその他のエンティティの分配の結果"}],"note":"Allocation can be made entirely to hardware, software, or humans, or to some combination to be resolved upon further functional decomposition.","note_ja":"割り当ては、ハードウェア、ソフトウェア、または人間に完全に行うか、さらなる機能分解によって解決される組み合わせに行うことができる"}
{"number":"3.131","name":"allocation of an entitlement","name_ja":"資格の割り当て","definitions":[{"text":"process of assigning some or all of a given entitlement to a subsidiary or other associated organizational unit which manages its own entitlement schema library","text_ja":"与えられた資格の一部または全てを、独自の資格スキーマライブラリを管理する子会社または他の関連組織単位に割り当てるプロセス","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.1"}],"note":"The entitlement schema enables the recording of entitlement allocations.","note_ja":"資格スキーマは資格割り当ての記録を可能にする"}
{"number":"3.132","name":"alpha testing","name_ja":"アルファテスト","definitions":[{"text":"first stage of testing before a product is considered ready for commercial or operational use","text_ja":"製品が商用または運用使用の準備ができていると見なされる前のテストの第一段階"}],"confer":["beta testing"],"confer_ja":["ベータテスト"],"note":"often performed only by users within the organization developing the software","note_ja":"多くの場合、ソフトウェアを開発している組織内のユーザーのみによって実行される"}
{"number":"3.133","name":"alphanumeric","name_ja":"英数字","definitions":[{"text":"pertaining to data that consists of letters, digits, and usually other characters, such as punctuation marks, as well as to processes and functional units that use the data","text_ja":"文字、数字、および通常は句読点などの他の文字で構成されるデータ、ならびにそのデータを使用するプロセスおよび機能単位に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.134","name":"ALS","name_ja":"ALS","definitions":[{"text":"Application Layer Structure","text_ja":"アプリケーション層構造","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.135","name":"alternate flow","name_ja":"代替フロー","definitions":[{"text":"part of a use case that describes its alternative implementations","text_ja":"ユースケースの代替実装を記述する部分"}],"alias":["alternate path"],"alias_ja":["代替パス"],"note":"It is also used to describe error conditions, since errors can be considered a kind of alternative.","note_ja":"エラーは一種の代替と見なすことができるため、エラー条件を記述するためにも使用される"}
{"number":"3.136","name":"alternate key","name_ja":"代替キー","definitions":[{"text":"candidate key of an entity other than the primary key","text_ja":"主キー以外のエンティティの候補キー","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language tax and Semantics for IDEF1X97 (IDEFobject), 3.1.5"}],"note":"[key style]"}
{"number":"3.137","name":"alternative analysis","name_ja":"代替案分析","definitions":[{"text":"a technique used to evaluate identified options in order to select which options or approaches to use to execute and perform the work of the project","text_ja":"プロジェクトの作業を実行し遂行するために使用するオプションまたはアプローチを選択するために、特定されたオプションを評価する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.138","name":"alternatives generation","name_ja":"代替案生成","definitions":[{"text":"a technique used to develop as many potential options as possible in order to identify different approaches to execute and perform the work of the project","text_ja":"プロジェクトの作業を実行し遂行するための異なるアプローチを識別するために、可能な限り多くの潜在的オプションを開発する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.139","name":"analog","name_ja":"アナログ","definitions":[{"text":"pertaining to continuously variable physical quantities or to data presented in a continuous form, as well as to processes and functional units that use the data","text_ja":"連続的に変化する物理量または連続形式で提示されるデータ、ならびにそのデータを使用するプロセスおよび機能単位に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.140","name":"analog computer","name_ja":"アナログコンピュータ","definitions":[{"text":"computer whose operations are analogous to the behavior of another system and that accepts, processes, and produces analog data","text_ja":"他のシステムの動作と類似した動作を行い、アナログデータを受け取り、処理し、生成するコンピュータ","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"example":"an abacus"}
{"number":"3.141","name":"analogous estimating","name_ja":"類推見積り","definitions":[{"text":"a technique for estimating the duration or cost of an activity or a project using historical data from a similar activity or project","text_ja":"類似した活動またはプロジェクトからの履歴データを使用して、活動またはプロジェクトの期間またはコストを見積る技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.142","name":"analysis","name_ja":"分析","definitions":[{"text":"process of studying a system by partitioning the system into parts (functions, components, or objects) and determining how the parts relate to each other2. investigation and collection phase of development that aims to specify types of users and their information needs","text_ja":"システムを部分（機能、コンポーネント、またはオブジェクト）に分割し、部分間の関係を決定することによってシステムを研究するプロセス。ユーザーの種類とその情報ニーズを特定することを目的とした開発の調査・収集段階","reference":"ISO/IEC/IEEE 26512:2011 Systems and software engineering — Requirements for acquirers and suppliers of user documentation, 4.2"}],"example":"test"}
{"number":"3.143","name":"analyst","name_ja":"アナリスト","definitions":[{"text":"member of the technical community who is skilled and trained to define problems and to analyze, develop, and express algorithms","text_ja":"問題を定義し、アルゴリズムを分析、開発、表現するために熟練し訓練された技術コミュニティのメンバー"}],"example":"systems engineer, business analyst"}
{"number":"3.144","name":"analytic hierarchy process (AHP)","name_ja":"階層分析法（AHP）","definitions":[{"text":"use of matrixes to manage pair-wise relationships in decision-making","text_ja":"意思決定における一対比較関係を管理するためのマトリックスの使用"}],"confer":["additive weighting","nondimensional scaling","compensatory decision technique"],"confer_ja":["加算重み付け","無次元スケーリング","代償的意思決定技法"]}
{"number":"3.145","name":"analytical techniques","name_ja":"分析技法","definitions":[{"text":"various techniques used to evaluate, analyze, or forecast potential outcomes based on possible variations of project or environmental variables and their relationships with other variables","text_ja":"プロジェクトまたは環境変数の可能な変動とその他の変数との関係に基づいて、潜在的な結果を評価、分析、または予測するために使用される様々な技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.146","name":"analyzability","name_ja":"分析性","definitions":[{"text":"degree of effectiveness and efficiency with which it is possible to assess the impact on a product or system of an intended change to one or more of its parts, or to diagnose a product for deficiencies or causes of failures, or to identify parts to be modified","text_ja":"製品またはシステムの一つ以上の部分への意図された変更の影響を評価する、または製品の欠陥や故障の原因を診断する、または修正すべき部分を特定することが可能である効果性と効率性の度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.7.3"}],"confer":["modifiability"],"confer_ja":["修正性"],"note":"Implementation can include providing mechanisms for the product or system to analyze its own faults and provide reports before or after a failure or other event.","note_ja":"実装には、製品またはシステムが自身の故障を分析し、故障やその他のイベントの前後にレポートを提供するメカニズムを提供することが含まれる場合がある"}
{"number":"3.147","name":"ancestor (of a class)","name_ja":"祖先（クラスの）","definitions":[{"text":"generic ancestor of the class or a parent of the class or an ancestor of a parent of the class","text_ja":"クラスの汎用祖先、またはクラスの親、またはクラスの親の祖先","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.6"}],"confer":["generic ancestor","reflexive ancestor"],"confer_ja":["汎用祖先","反射祖先"]}
{"number":"3.148","name":"ancestral box","name_ja":"祖先ボックス","definitions":[{"text":"box related to a specific diagram by a hierarchically consecutive sequence of one or more parent/child relationships","text_ja":"一つ以上の親子関係の階層的連続シーケンスによって特定の図に関連するボックス","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.6"}]}
{"number":"3.149","name":"ancestral diagram","name_ja":"祖先図","definitions":[{"text":"diagram that contains an ancestral box","text_ja":"祖先ボックスを含む図","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.7"}]}
{"number":"3.150","name":"anchor point","name_ja":"アンカーポイント","definitions":[{"text":"a milestone in software scheduling at which a major project life cycle transition occurs","text_ja":"主要なプロジェクトライフサイクル移行が発生するソフトウェアスケジューリングのマイルストーン","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.151","name":"annotate","name_ja":"注釈付け","definitions":[{"text":"command used for listing the latest version of each programs source code line, along with the date, the file version it was introduced, and the person who committed it","text_ja":"各プログラムのソースコード行の最新バージョンを、導入された日付、ファイルバージョン、およびコミットした人と共にリストアップするために使用されるコマンド"}]}
{"number":"3.152","name":"annotation","name_ja":"注釈","definitions":[{"text":"further documentation accompanying a requirement","text_ja":"要求に付随するさらなる文書"},{"text":"label represented as text near to the object it is associated with","text_ja":"関連するオブジェクトの近くにテキストとして表現されるラベル","reference":"ISO/IEC 15909-2:2011 Software and system engineering — High-level Petri nets — Part 2: Transfer format, 4.1.1"}],"example":"background information or descriptive material"}
{"number":"3.153","name":"announcement","name_ja":"通知","definitions":[{"text":"interaction (invocation) initiated by a client object, resulting in the conveyance of information from that client object to a server object, requesting a function to be performed by that server object","text_ja":"クライアントオブジェクトによって開始される相互作用（呼び出し）で、そのクライアントオブジェクトからサーバーオブジェクトへの情報の伝達をもたらし、そのサーバーオブジェクトによって機能の実行を要求する","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.3"}],"example":"the initiation of the sending of a message in a messaging system"}
{"number":"3.154","name":"annual equivalent","name_ja":"年間等価","definitions":[{"text":"representation of a cash flow as a series of equal annual payments (at a stated interest rate) over the planning horizon.","text_ja":"計画期間にわたって（指定された利率での）等しい年間支払いの系列としてのキャッシュフローの表現"}],"alias":["AE(i)"],"confer":["future worth","present worth"],"confer_ja":["将来価値","現在価値"]}
{"number":"3.155","name":"annual percentage rate (APR)","name_ja":"年利率（APR）","definitions":[{"text":"nominal annual interest rate","text_ja":"名目年利率"}]}
{"number":"3.156","name":"annuity","name_ja":"年金","definitions":[{"text":"amount of a series of equal payments at regular intervals over a planning horizon","text_ja":"計画期間にわたって定期的な間隔で行われる等しい支払いの系列の金額"}]}
{"number":"3.157","name":"anomaly","name_ja":"異常","definitions":[{"text":"condition that deviates from expectations, based on requirements specifications, design documents, user documents, or standards, or from someones perceptions or experiences","text_ja":"要求仕様、設計文書、ユーザー文書、または標準、あるいは誰かの認識や経験に基づく期待から逸脱する状態","reference":"IEEE 1028-2008 IEEE Standard for Software Reviews and Audits, 3.1"},{"text":"anything observed in the documentation or operation of a system that deviates from expectations based on previously verified system, software, or hardware products or reference documents","text_ja":"以前に検証されたシステム、ソフトウェア、またはハードウェア製品や参照文書に基づく期待から逸脱する、システムの文書化または動作において観察されるもの","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}]}
{"number":"3.158","name":"ANSI","name_ja":"ANSI","definitions":[{"text":"American National Standards Institute.","text_ja":"米国国家規格協会"}]}
{"number":"3.159","name":"anticipatory buffering","name_ja":"先行バッファリング","definitions":[{"text":"buffering technique in which data are stored in a buffer in anticipation of a need for the data","text_ja":"データの必要性を予測してデータをバッファに格納するバッファリング技法"}],"confer":["dynamic buffering","simple buffering"],"confer_ja":["動的バッファリング","単純バッファリング"]}
{"number":"3.160","name":"anticipatory paging","name_ja":"先行ページング","definitions":[{"text":"storage allocation technique in which pages are transferred from auxiliary storage to main storage in anticipation of a need for those pages","text_ja":"それらのページの必要性を予測してページを補助記憶装置から主記憶装置に転送する記憶割り当て技法"}],"confer":["demand paging"],"confer_ja":["要求ページング"]}
{"number":"3.161","name":"AOA","name_ja":"AOA","definitions":[{"text":"analysis of alternatives","text_ja":"代替案分析","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.162","name":"AON","name_ja":"AON","definitions":[{"text":"Activity-on-No","text_ja":"アクティビティ・オン・ノード"}]}
{"number":"3.163","name":"AP(I)","name_ja":"AP(I)","definitions":[{"text":"Application Process (Invocation)","text_ja":"アプリケーションプロセス（呼び出し）","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.164","name":"aperiodic task","name_ja":"非周期タスク","definitions":[{"text":"task activated on demand","text_ja":"要求時に活性化されるタスク"}],"alias":["asynchronous task"],"alias_ja":["非同期タスク"]}
{"number":"3.165","name":"API","name_ja":"API","definitions":[{"text":"Application Program Interface","text_ja":"アプリケーションプログラムインターフェース","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.166","name":"applicability to a functional domain","name_ja":"機能ドメインへの適用性","definitions":[{"text":"the ability of an FSM method to take into account the characteristics of functional user requirements (FUR) which are pertinent to FSM in a functional domain","text_ja":"機能ドメインにおいてFSMに関連する機能ユーザー要求（FUR）の特性を考慮するFSM手法の能力","reference":"ISO/IEC TR 14143-3:2003 Information technology — Software measurement — Functional size measurement — Part 3: Verification of functional size measurement methods, 3.2"}]}
{"number":"3.167","name":"application","name_ja":"アプリケーション","definitions":[{"text":"system for collecting, saving, processing, and presenting data by means of a computer","text_ja":"コンピュータを用いてデータを収集、保存、処理、および提示するシステム","reference":"ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.1; ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"},{"text":"a coherent collection of automated procedures and data supporting a business objective","text_ja":"ビジネス目標を支援する自動化された手順とデータの一貫した集合","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"},{"text":"cohesive collection of automated procedures and data supporting a business objective, consisting of one or more components, modules, or subsystems","text_ja":"ビジネス目標を支援する自動化された手順とデータの結合性のある集合で、一つ以上のコンポーネント、モジュール、またはサブシステムから構成される","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.2"}],"alias":["application system"],"alias_ja":["アプリケーションシステム"],"confer":["information system"],"confer_ja":["情報システム"],"example":"accounts payable, accounts receivable, payroll, procurement, shop production, assembly line control, air search radar, target tracking, weapons firing, flight line scheduling and passenger reservations","note":"The term application is generally used when referring to a component of software that can be executed. It consists of one or more components, modules, or subsystems.","note_ja":"アプリケーションという用語は、実行可能なソフトウェアのコンポーネントを指すときに一般的に使用される。一つ以上のコンポーネント、モジュール、またはサブシステムから構成される"}
{"number":"3.168","name":"application administration function","name_ja":"アプリケーション管理機能","definitions":[{"text":"functions performed by users which include installation, configuration, application backup, maintenance (patching and upgrading) and de-installation","text_ja":"インストール、設定、アプリケーションバックアップ、保守（パッチ適用とアップグレード）、およびアンインストールを含む、ユーザーによって実行される機能","reference":"ISO/IEC 25051:2014 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Requirements for quality of Ready to Use Software Product (RUSP) and instructions for testing, 4.1.3"}]}
{"number":"3.169","name":"application architecture","name_ja":"アプリケーションアーキテクチャ","definitions":[{"text":"architecture including the architectural structure and rules (e.g. common rules and constraints) that constrains a specific member product within a product line","text_ja":"プロダクトライン内の特定のメンバー製品を制約するアーキテクチャ構造と規則（例：共通規則と制約）を含むアーキテクチャ","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.1"}],"note":"The application architecture captures the high-level design of a specific member product of a product line","note_ja":"アプリケーションアーキテクチャは、プロダクトラインの特定のメンバー製品の高レベル設計を捉える"}
{"number":"3.170","name":"application area","name_ja":"応用分野","definitions":[{"text":"a category of projects that have common components significant in such projects, but are not needed or present in all projects. Application areas are usually defined in terms of either the product (i.e., by similar technologies or production methods) or the type of customer (i.e., internal versus external, government versus commercial) or industry sector (i.e., utilities, automotive, aerospace, information technologies, etc.) Application areas can overlap.","text_ja":"そのようなプロジェクトで重要な共通コンポーネントを持つが、すべてのプロジェクトで必要または存在するわけではないプロジェクトのカテゴリ。応用分野は通常、製品（すなわち、類似技術または生産方法による）、顧客のタイプ（すなわち、内部対外部、政府対商業）、または産業部門（すなわち、公益事業、自動車、航空宇宙、情報技術など）の観点で定義される。応用分野は重複することができる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.171","name":"application asset","name_ja":"アプリケーション資産","definitions":[{"text":"output of a specific application engineering process (e.g. application realization) that can be exploited in other lifecycle processes of application engineering and can be adapted as a domain asset based on a product management decision","text_ja":"特定のアプリケーションエンジニアリングプロセス（例：アプリケーション実現）の出力で、アプリケーションエンジニアリングの他のライフサイクルプロセスで利用でき、製品管理決定に基づいてドメイン資産として適応できるもの","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.2"}],"note":"Application asset encompasses requirements, an architectural design, components, and tests.","note_ja":"アプリケーション資産は、要求、アーキテクチャ設計、コンポーネント、およびテストを包含する"}
{"number":"3.172","name":"application assets in requirements","name_ja":"要求におけるアプリケーション資産","definitions":[{"text":"application-specific artifacts produced during application requirements engineering, such as application requirements specifications and application requirements models","text_ja":"アプリケーション要求エンジニアリング中に生成されるアプリケーション固有の成果物で、アプリケーション要求仕様書やアプリケーション要求モデルなど","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.1"}]}
{"number":"3.173","name":"application boundary","name_ja":"アプリケーション境界","definitions":[{"text":"the border between the application and its environment of other applications and users","text_ja":"アプリケーションと、他のアプリケーションおよびユーザーの環境との境界","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"}]}
{"number":"3.174","name":"application design","name_ja":"アプリケーション設計","definitions":[{"text":"process of application engineering where a single application architecture conforming to the domain architecture is derived","text_ja":"ドメインアーキテクチャに適合する単一のアプリケーションアーキテクチャが導出されるアプリケーションエンジニアリングのプロセス","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.3"}]}
{"number":"3.175","name":"application engineering","name_ja":"アプリケーションエンジニアリング","definitions":[{"text":"process of constructing or refining application systems by reusing assets","text_ja":"資産を再利用してアプリケーションシステムを構築または改良するプロセス","reference":"IEEE 1517-2010 IEEE Standard for Information Technology — System and software life cycle processes — Reuse processes, 3"},{"text":"life cycle consisting of a set of processes in which the application assets and member products of the product line are implemented and managed by reusing domain assets in conformance to the domain architecture and by binding the variability of the platform","text_ja":"ドメインアーキテクチャに適合してドメイン資産を再利用し、プラットフォームの可変性を束縛することによって、プロダクトラインのアプリケーション資産とメンバー製品が実装・管理される一連のプロセスから構成されるライフサイクル","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.4"}]}
{"number":"3.176","name":"application engineering process","name_ja":"アプリケーションエンジニアリングプロセス","definitions":[{"text":"processes for developing a member product in a product line","text_ja":"プロダクトラインにおけるメンバー製品を開発するためのプロセス","reference":"ISO/IEC 26555:2015 Software and systems engineering — Tools and methods for product line technical management, 3.1"}]}
{"number":"3.177","name":"application frameworks","name_ja":"アプリケーションフレームワーク","definitions":[{"text":"subsystem design made up of a collection of abstract and concrete classes and interfaces between them","text_ja":"抽象クラスと具象クラスの集合とそれらの間のインターフェースから構成されるサブシステム設計"}],"note":"Frameworks are often instantiation of a number of patterns.","note_ja":"フレームワークは多くの場合、多数のパターンのインスタンス化である"}
{"number":"3.178","name":"application function point count","name_ja":"アプリケーション機能ポイント数","definitions":[{"text":"a count that provides a measure of the functionality the application provides to the end-user","text_ja":"アプリケーションがエンドユーザーに提供する機能性の測度を提供する数","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"},{"text":"the size of an application expressed in function points","text_ja":"機能ポイントで表現されるアプリケーションのサイズ","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"},{"text":"activity of applying ISO/IEC 20926:2009 to measure the functional size of an application","text_ja":"アプリケーションの機能サイズを測定するためにISO/IEC 20926:2009を適用する活動","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.4"}],"note":"i.e., the functionality already provided to the user or that is still to be provided. With it, the effort required to support the realized application can also be determined.","note_ja":"すなわち、既にユーザーに提供されている機能性またはまだ提供される予定の機能性。これによって、実現されたアプリケーションを支援するために必要な工数も決定できる"}
{"number":"3.179","name":"application functional size","name_ja":"アプリケーション機能サイズ","definitions":[{"text":"measure of the functionality that an application provides to the user, determined by the application function point count","text_ja":"アプリケーション機能ポイント数によって決定される、アプリケーションがユーザーに提供する機能性の測度","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.3"}]}
{"number":"3.180","name":"application generator","name_ja":"アプリケーション生成器","definitions":[{"text":"code generator that produces programs to solve one or more problems in a particular application area","text_ja":"特定の応用分野における一つ以上の問題を解決するプログラムを生成するコード生成器"}],"example":"a payroll generator"}
{"number":"3.181","name":"application management","name_ja":"アプリケーション管理","definitions":[{"text":"domain responsible for all of the tasks and activities that are aimed at managing, supporting, maintaining, and renewing existing applications and related data structures","text_ja":"既存のアプリケーションと関連するデータ構造の管理、支援、保守、および更新を目的とするすべてのタスクと活動に責任を持つドメイン","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.2"}],"note":"Application management includes all of the tasks, responsibilities, and activities that serve to bring applications into a state where they meet the requirements and needs of their owners throughout the entire life cycle of the business processes that are supported by the applications.","note_ja":"アプリケーション管理には、アプリケーションによって支援されるビジネスプロセスの全ライフサイクルを通じて、アプリケーションが所有者の要求とニーズを満たす状態にするために役立つすべてのタスク、責任、および活動が含まれる"}
{"number":"3.182","name":"application management organization","name_ja":"アプリケーション管理組織","definitions":[{"text":"organizational unit that is responsible for application management for one or more applications","text_ja":"一つ以上のアプリケーションのアプリケーション管理に責任を持つ組織単位","reference":"ISO/IEC 16350- 2015 Information technology — Systems and software engineering — Application management, 4.3"}],"note":"An application management organization can be an internal or external unit in relation to the user organization.","note_ja":"アプリケーション管理組織は、ユーザー組織に対して内部または外部の単位となりうる"}
{"number":"3.183","name":"application object","name_ja":"アプリケーションオブジェクト","definitions":[{"text":"component that is directly related to or forms part of an application","text_ja":"アプリケーションに直接関連する、またはアプリケーションの一部を形成するコンポーネント","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.4"}],"example":"Programs, sources, databases, documentation, data structures, test files, and scripts."}
{"number":"3.184","name":"application portfolio","name_ja":"アプリケーションポートフォリオ","definitions":[{"text":"collection of applications managed by an application management organization or an entity within that application management organization","text_ja":"アプリケーション管理組織またはそのアプリケーション管理組織内のエンティティによって管理されるアプリケーションの集合","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.5"}],"note":"The scope of the application portfolio can be the entire portfolio of that application management organization, but it can also be the applications of one or some customer organizations of entity within part of a certain customer organization.","note_ja":"アプリケーションポートフォリオの範囲は、そのアプリケーション管理組織の全ポートフォリオとすることもできるが、特定の顧客組織の一部内のエンティティの一つまたは複数の顧客組織のアプリケーションとすることもできる"}
{"number":"3.185","name":"application problem","name_ja":"アプリケーション問題","definitions":[{"text":"problem submitted by an end user and requiring information processing for its solution. ISO/IEC 2382:2015, Information technology — Vocabulary]","text_ja":"エンドユーザーによって提出され、その解決のために情報処理を必要とする問題"}]}
{"number":"3.186","name":"application realization","name_ja":"アプリケーション実現","definitions":[{"text":"process of application engineering that develops application assets, some of which can be derived from domain assets, and member products based on the application architecture and the sets of application assets and domain assets","text_ja":"アプリケーションアーキテクチャとアプリケーション資産およびドメイン資産の集合に基づいて、アプリケーション資産（その一部はドメイン資産から導出可能）とメンバー製品を開発するアプリケーションエンジニアリングのプロセス","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.5"}]}
{"number":"3.187","name":"application requirements analysis","name_ja":"アプリケーション要求分析","definitions":[{"text":"subprocess that understands all application specific requirements, scrutinizes incorrect and inconsistent application requirements through modelling, and then analyses and negotiates application requirements that cannot be satisfied through the domain requirements","text_ja":"すべてのアプリケーション固有要求を理解し、モデリングを通じて不正確で一貫性のないアプリケーション要求を精査し、その後ドメイン要求では満たすことができないアプリケーション要求を分析・交渉するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.3"}]}
{"number":"3.188","name":"application requirements elicitation","name_ja":"アプリケーション要求抽出","definitions":[{"text":"subprocess for identifying stakeholders relevant to an application, eliciting application specific requirements, and binding the appropriate variants","text_ja":"アプリケーションに関連するステークホルダーを特定し、アプリケーション固有要求を抽出し、適切なバリアントを束縛するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.2"}]}
{"number":"3.189","name":"application requirements management","name_ja":"アプリケーション要求管理","definitions":[{"text":"subprocess that manages traceability and changes on application requirements","text_ja":"アプリケーション要求のトレーサビリティと変更を管理するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.6"}]}
{"number":"3.190","name":"application requirements specification","name_ja":"アプリケーション要求仕様","definitions":[{"text":"subprocess that documents the application specific requirements and integrates it with the domain requirements specification whose variants are bound","text_ja":"アプリケーション固有要求を文書化し、バリアントが束縛されたドメイン要求仕様と統合するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.4"}]}
{"number":"3.191","name":"application requirements verification and validation","name_ja":"アプリケーション要求検証・妥当性確認","definitions":[{"text":"subprocess that confirms that the application specific requirements are consistent and feasible and ensures that the bound variants satisfy the specific products requirements","text_ja":"アプリケーション固有要求が一貫性があり実現可能であることを確認し、束縛されたバリアントが特定製品の要求を満たすことを保証するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.5"}]}
{"number":"3.192","name":"application software","name_ja":"アプリケーションソフトウェア","definitions":[{"text":"software designed to help users perform particular tasks or handle particular types of problems, as distinct from software that controls the computer itself","text_ja":"コンピュータ自体を制御するソフトウェアとは異なり、ユーザーが特定のタスクを実行したり特定の種類の問題を処理したりするのを支援するように設計されたソフトウェア"},{"text":"software or a program that is specific to the solution of an application problem","text_ja":"アプリケーション問題の解決に特化したソフトウェアまたはプログラム","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"},{"text":"software designed to fulfill specific needs of a user4. software of an application","text_ja":"ユーザーの特定のニーズを満たすように設計されたソフトウェア。アプリケーションのソフトウェア","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.6"}],"note":"Application software is the software that the application management organization produces, services, and maintains. There is also system software: the software to produce and maintain the application software and to run the application software on its platform. The application management organization is one of the users of the system software.","note_ja":"アプリケーションソフトウェアは、アプリケーション管理組織が製造、サービス提供、保守するソフトウェアである。システムソフトウェアもある：アプリケーションソフトウェアを製造・保守し、プラットフォーム上でアプリケーションソフトウェアを実行するソフトウェア。アプリケーション管理組織は、システムソフトウェアのユーザーの一つである"}
{"number":"3.193","name":"application specific integrated circuit (ASIC)","name_ja":"特定用途向け集積回路（ASIC）","definitions":[{"text":"integrated circuit customized for a particular use","text_ja":"特定の用途に合わせてカスタマイズされた集積回路"}]}
{"number":"3.194","name":"application-oriented language","name_ja":"アプリケーション指向言語","definitions":[{"text":"computer language with facilities or notations applicable primarily to a single application area","text_ja":"主に単一の応用分野に適用可能な機能や記法を持つコンピュータ言語"}],"confer":["authoring language","specification language","query language"],"confer_ja":["オーサリング言語","仕様記述言語","問い合わせ言語"],"example":"a language for computer-assisted instruction or hardware design"}
{"number":"3.195","name":"application-specific requirements","name_ja":"アプリケーション固有要求","definitions":[{"text":"requirements specific to an application or requirements not covered in domain requirements","text_ja":"アプリケーションに固有の要求、またはドメイン要求で対象とされない要求","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.9"}]}
{"number":"3.196","name":"applying leads and lags","name_ja":"リードとラグの適用","definitions":[{"text":"a technique that is used to adjust the amount of time between predecessor and successor activities","text_ja":"先行活動と後続活動の間の時間量を調整するために使用される技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.197","name":"apportioned effort","name_ja":"按分工数","definitions":[{"text":"an activity where effort is allotted proportionately across certain discrete efforts and not divisible into discrete efforts","text_ja":"特定の個別工数に工数を比例配分し、個別工数に分割できない活動","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["discrete effort"],"confer_ja":["個別工数"],"note":"Apportioned effort is one of three earned value management (EVM) types of activities used to measure work performance.","note_ja":"按分工数は、作業パフォーマンスを測定するために使用される3つのアーンドバリューマネジメント（EVM）活動タイプの一つである"}
{"number":"3.198","name":"appraisal findings","name_ja":"評価結果","definitions":[{"text":"results of an appraisal that identify the most important issues, problems, or opportunities for process improvement within the appraisal scope","text_ja":"評価範囲内でプロセス改善のための最も重要な課題、問題、または機会を特定する評価の結果"}],"note":"Appraisal findings are inferences drawn from corroborated objective evidence.","note_ja":"評価結果は、裏付けられた客観的証拠から導かれる推論である"}
{"number":"3.199","name":"appraisal participants","name_ja":"評価参加者","definitions":[{"text":"members of the organizational unit who participate in providing information during an appraisal","text_ja":"評価中に情報提供に参加する組織単位のメンバー"}]}
{"number":"3.200","name":"appraisal team leader","name_ja":"評価チームリーダー","definitions":[{"text":"person who leads the activities of an appraisal and has satisfied qualification criteria for experience, knowledge, and skills defined by the appraisal method","text_ja":"評価の活動を指導し、評価手法によって定義された経験、知識、およびスキルの資格基準を満たした人"}]}
{"number":"3.201","name":"appropriateness recognizability","name_ja":"適切性認識性","definitions":[{"text":"degree to which users can recognize whether a product or system is appropriate for their needs","text_ja":"ユーザーが製品またはシステムが自分のニーズに適切かどうかを認識できる度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.4.1"}],"confer":["functional appropriateness"],"confer_ja":["機能適切性"],"note":"Appropriateness recognizability will depend on the ability to recognize the appropriateness of the product or systems functions from initial impressions of the product or system or any associated documentation. The information provided by the product or system can include demonstrations, tutorials, documentation or, for a web site, the information on the home page.","note_ja":"適切性認識性は、製品またはシステムの第一印象や関連文書から、製品またはシステムの機能の適切性を認識する能力に依存する。製品またはシステムによって提供される情報には、デモンストレーション、チュートリアル、文書、またはウェブサイトの場合はホームページ上の情報が含まれる"}
{"number":"3.202","name":"approval","name_ja":"承認","definitions":[{"text":"written notification, by an authorized representative, that an information item appears to satisfy requirements and is complete","text_ja":"情報項目が要求を満たしているように見え、完全であることの権限ある代表者による書面による通知","reference":"ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.1"}],"note":"Such approval does not shift responsibility from the supplier to meet requirements under a two-party situation","note_ja":"このような承認は、二者間状況下で要求を満たす責任を供給者から移すものではない"}
{"number":"3.203","name":"approval authority","name_ja":"承認権限者","definitions":[{"text":"person (or persons) or organization (or organizations) responsible for approving activities, artifacts, and other aspects of the system during its life cycle","text_ja":"システムのライフサイクル中において、活動、成果物、およびシステムの他の側面を承認する責任を持つ人（または人々）または組織（または組織群）","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.5.2"}],"note":"The approval authority can include multiple entities, e.g. individuals or organizations. These can include different entitles with different levels of approval and/or different areas of interest. In two-party situations, approval authority often rests with the acquirer. In regulatory situations, the approval authority can be a third party such as a governmental organization or its agent. In other situations, e.g. the purchase of off-the-shelf products developed by a single-party, the independence of the approval authority can be a relevant issue to the acquirer.","note_ja":"承認権限者は、個人や組織など複数の実体を含むことができる。これらは異なる承認レベルおよび/または異なる関心領域を持つ異なる実体を含むことができる。二者間の状況では、承認権限者は多くの場合取得者にある。規制上の状況では、承認権限者は政府機関またはその代理機関などの第三者となることができる。他の状況では、例えば単一当事者によって開発された市販製品の購入などにおいて、承認権限者の独立性は取得者にとって関連する問題となることがある。"}
{"number":"3.204","name":"approved change request","name_ja":"承認された変更要求","definitions":[{"text":"a change request that has been processed through the integrated change control process and approved","text_ja":"統合変更管理プロセスを通じて処理され承認された変更要求","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.205","name":"approved change requests review","name_ja":"承認された変更要求の審査","definitions":[{"text":"a review of the change requests to verify that these were implemented as approved","text_ja":"変更要求が承認された通りに実装されたことを検証するための変更要求の審査","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.206","name":"approved modification","name_ja":"承認された修正","definitions":[{"text":"disposition of one or more proposed changes authorizing change to any SCIs","text_ja":"任意のSCIへの変更を承認する1つ以上の提案された変更の処分","reference":"ISO/IEC TR 15846:1998 Information technology — Software life cycle processes — Configuration Management, 4.1"}],"note":"There can be a many-to-many relationship of \"proposed change\" to \"approved modification\". A proposed chang can cause modifications in several SCIs (even if only to the code and its test case). A modification can originate from several proposed changes, approved simultaneously or over a period of time while the modification is still in progress.","note_ja":"「提案された変更」と「承認された修正」の間には多対多の関係が存在することがある。提案された変更は、複数のSCIに修正を引き起こすことがある（コードとそのテストケースだけであっても）。修正は、同時に承認されるか、または修正が進行中の期間にわたって承認される複数の提案された変更から生じることがある。"}
{"number":"3.207","name":"arc","name_ja":"弧","definitions":[{"text":"directed edge of a net which can connect a place to a transition or a transition to a place, normally represented by an arrow","text_ja":"場所から遷移へ、または遷移から場所へ接続することができるネットの有向辺で、通常は矢印で表現される","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.1"}]}
{"number":"3.208","name":"arc annotation","name_ja":"弧注釈","definitions":[{"text":"expression that can involve constants, variables and operators used to annotate an arc of a net","text_ja":"ネットの弧に注釈を付けるために使用される定数、変数、演算子を含むことができる式","reference":"ISO/IEC 15909- 1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.1.3"}],"note":"The expression must evaluate to a multiset over the type of the arc's associated place.","note_ja":"この式は弧の関連する場所の型上の多重集合に評価されなければならない。"}
{"number":"3.209","name":"architect","name_ja":"アーキテクト","definitions":[{"text":"person, team, or organization responsible for systems architecture","text_ja":"システムアーキテクチャに責任を持つ人、チーム、または組織"}]}
{"number":"3.210","name":"architecting","name_ja":"アーキテクティング","definitions":[{"text":"process of conceiving, defining, expressing, documenting, communicating, certifying proper implementation of, maintaining and improving an architecture throughout a system's life cycle","text_ja":"システムのライフサイクルを通じてアーキテクチャを構想、定義、表現、文書化、伝達し、適切な実装を認証し、維持および改善するプロセス","reference":"ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.1"}],"note":"Architecting takes place in the context of an organization or a project.","note_ja":"アーキテクティングは組織またはプロジェクトの文脈で行われる。"}
{"number":"3.211","name":"architectural design","name_ja":"アーキテクチャ設計","definitions":[{"text":"process of defining a collection of hardware and software components and their interfaces to establish the framework for the development of a computer system","text_ja":"コンピュータシステムの開発の枠組みを確立するためのハードウェアとソフトウェアコンポーネントとそれらのインターフェースの集合を定義するプロセス"},{"text":"the result of defining a collection of hardware and software components and their interfaces to establish the framework for the development of a computer system","text_ja":"コンピュータシステムの開発の枠組みを確立するためのハードウェアとソフトウェアコンポーネントとそれらのインターフェースの集合を定義した結果"}],"confer":["functional design"],"confer_ja":["機能設計"]}
{"number":"3.212","name":"architectural design phase","name_ja":"アーキテクチャ設計フェーズ","definitions":[{"text":"life-cycle phase in which a system's general architecture is developed, thereby fulfilling the requirements laid down by the software requirements document and detailing the implementation plan in response to it","text_ja":"システムの一般的なアーキテクチャが開発されるライフサイクルフェーズで、それによりソフトウェア要求文書によって定められた要求を満たし、それに応じて実装計画を詳述する"}]}
{"number":"3.213","name":"architectural design review","name_ja":"アーキテクチャ設計レビュー","definitions":[{"text":"joint acquirer-supplier review to evaluate the technical adequacies of the software architectural design as depicted in the software design descriptions","text_ja":"ソフトウェア設計記述書に描写されたソフトウェアアーキテクチャ設計の技術的妥当性を評価するための取得者と供給者による合同レビュー"}]}
{"number":"3.214","name":"architectural structure","name_ja":"アーキテクチャ構造","definitions":[{"text":"physical or logical layout of the components of a system design and their internal and external connections","text_ja":"システム設計のコンポーネントとその内部および外部接続の物理的または論理的レイアウト"}],"example":"function-oriented (structured) design, object-oriented design, and data structure-oriented design","example_ja":"機能指向（構造化）設計、オブジェクト指向設計、データ構造指向設計"}
{"number":"3.215","name":"architectural style","name_ja":"アーキテクチャスタイル","definitions":[{"text":"definition of a family of systems in terms of a pattern of structural organization","text_ja":"構造的組織のパターンの観点からシステムファミリーの定義"},{"text":"characterization of a family of systems that are related by sharing structural and semantic properties","text_ja":"構造的および意味的特性を共有することによって関連するシステムファミリーの特性化"}],"example":"pipes and filters, layers, rule-based systems, and blackboard","example_ja":"パイプとフィルタ、レイヤー、ルールベースシステム、ブラックボード"}
{"number":"3.216","name":"architecture","name_ja":"アーキテクチャ","definitions":[{"text":"[system] fundamental concepts or properties of a system in its environment embodied in its elements, relationships, and in the principles of its design and evolution","text_ja":"[システム] その環境におけるシステムの基本概念または特性で、その要素、関係、および設計と進化の原則に具現化されたもの","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.6; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.5; ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.2"},{"text":"set of rules to define the structure of a system and the interrelationships between its parts","text_ja":"システムの構造とその部分間の相互関係を定義するルールの集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 6.6"}],"confer":["component","module","subprogram","routine"],"confer_ja":["コンポーネント","モジュール","副プログラム","ルーチン"]}
{"number":"3.217","name":"architecture description (AD)","name_ja":"アーキテクチャ記述（AD）","definitions":[{"text":"work product used to express an architecture","text_ja":"アーキテクチャを表現するために使用される作業成果物","reference":"ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.3"}],"alias":["architectural description"],"alias_ja":["アーキテクチャ記述"]}
{"number":"3.218","name":"architecture framework","name_ja":"アーキテクチャフレームワーク","definitions":[{"text":"conventions, principles and practices for the description of architectures established within a specific domain of application or community of stakeholders","text_ja":"特定の適用領域またはステークホルダーのコミュニティ内で確立されたアーキテクチャの記述のための慣例、原則、および実践","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.7; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.6; ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.4"}],"example":"Generalised Enterprise Reference Architecture and Methodologies (GERAM) [ISO 15704], Reference Model of Open Distributed Processing (RM-ODP) [ISO/IEC 10746","example_ja":"汎用企業参照アーキテクチャと方法論（GERAM）[ISO 15704]、開放型分散処理参照モデル（RM-ODP）[ISO/IEC 10746"}
{"number":"3.219","name":"architecture view","name_ja":"アーキテクチャビュー","definitions":[{"text":"work product expressing the architecture of a system from the perspective of specific system concerns","text_ja":"特定のシステム関心事の観点からシステムのアーキテクチャを表現する作業成果物","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.8; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.7; ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.5"}],"confer":["architecture viewpoint"],"confer_ja":["アーキテクチャビューポイント"]}
{"number":"3.220","name":"architecture viewpoint","name_ja":"アーキテクチャビューポイント","definitions":[{"text":"work product establishing the conventions for the construction, interpretation and use of architecture views to frame specific system concerns","text_ja":"特定のシステム関心事を枠組みとするアーキテクチャビューの構築、解釈、および使用のための慣例を確立する作業成果物","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.9; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.8; ISO/IEC/IEEE 42010:2011 Systems and software engineering — Architecture description, 3.6"}],"confer":["architecture view"],"confer_ja":["アーキテクチャビュー"]}
{"number":"3.221","name":"architecture-driven modernization (ADM)","name_ja":"アーキテクチャ駆動モダナイゼーション（ADM）","definitions":[{"text":"process of understanding and evolving existing software assets of a system of interest","text_ja":"関心のあるシステムの既存のソフトウェア資産を理解し進化させるプロセス","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}],"note":"ADM does not preclude source-to-source migrations (where appropriate), but encourages user organizations to consider modernization from an analysis and design perspective.","note_ja":"ADMは（適切な場合）ソース対ソース移行を排除するものではないが、ユーザー組織が分析と設計の観点からモダナイゼーションを検討することを奨励する。"}
{"number":"3.222","name":"archival page","name_ja":"アーカイブページ","definitions":[{"text":"content that is preserved as a record and not expected to change","text_ja":"記録として保存され、変更されることが期待されないコンテンツ","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.1"}],"note":"Due to technology upgrades, some archival pages cannot be readily rendered unless they are upgraded along with active pages","note_ja":"技術アップグレードにより、一部のアーカイブページは、アクティブページと共にアップグレードされない限り、容易にレンダリングできない"}
{"number":"3.223","name":"argument","name_ja":"引数","definitions":[{"text":"independent variable","text_ja":"独立変数"},{"text":"specific value of an independent variable","text_ja":"独立変数の特定の値"},{"text":"constant, variable, or expression used in a call to a software module to specify data or program elements to be passed to that module","text_ja":"そのモジュールに渡されるデータまたはプログラム要素を指定するために、ソフトウェアモジュールの呼び出しで使用される定数、変数、または式"}],"example":"the variable m in the equation E = mc2","example_ja":"方程式E = mc2における変数m"}
{"number":"3.224","name":"argument sort","name_ja":"引数ソート","definitions":[{"text":"sort of an argument of an operator","text_ja":"演算子の引数のソート","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.23.1"}],"alias":["input sort"],"alias_ja":["入力ソート"]}
{"number":"3.225","name":"arity","name_ja":"アリティ","definitions":[{"text":"number of roles that participate in a relationship","text_ja":"関係に参加する役割の数","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"},{"text":"input sorts and output sort for an operator","text_ja":"演算子の入力ソートと出力ソート","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.2"}],"note":"A binary relationship has an arity of two. An n-ary relationship has an arity of n. (n>2) sometimes known as the \"degree\" of a relationship.","note_ja":"二項関係はアリティが2である。n項関係はアリティがnである。(n>2)は関係の「次数」と呼ばれることもある。"}
{"number":"3.226","name":"arranging","name_ja":"配置","definitions":[{"text":"activity of sequencing attributes in a transactional function","text_ja":"トランザクション機能において属性を順序付けする活動","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.5"}]}
{"number":"3.227","name":"array","name_ja":"配列","definitions":[{"text":"an n-dimensional ordered set of data items identified by a single name and one or more indices, so that each element of the set is individually addressable","text_ja":"単一の名前と1つ以上のインデックスによって識別されるデータ項目のn次元順序付き集合で、集合の各要素が個別にアドレス指定可能である"}],"example":"a matrix, table, or vector","example_ja":"行列、テーブル、またはベクトル"}
{"number":"3.228","name":"arrow","name_ja":"矢印","definitions":[{"text":"directed line, composed of one or more connected arrow segments in a single diagram from a single source (box or diagram boundary) to a single use (box or diagram boundary)","text_ja":"単一のダイアグラムにおいて、単一のソース（ボックスまたはダイアグラム境界）から単一の使用（ボックスまたはダイアグラム境界）への1つ以上の接続された矢印セグメントで構成される有向線","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.8"},{"text":"graphic presentation of a logical relationship between schedule activities in the precedence diagramming method","text_ja":"プリシーデンスダイアグラム法におけるスケジュール活動間の論理的関係のグラフィック表現"}],"confer":["arrow segment","boundary arrow","internal arrow"],"confer_ja":["矢印セグメント","境界矢印","内部矢印"]}
{"number":"3.229","name":"arrow label","name_ja":"矢印ラベル","definitions":[{"text":"noun or noun phrase associated with an arrow segment to signify the arrow meaning of the arrow segment","text_ja":"矢印セグメントの矢印意味を表すために矢印セグメントに関連付けられた名詞または名詞句","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.9"}],"note":"Specifically, an arrow label identifies the object type set that is represented by an arrow segment.","note_ja":"具体的には、矢印ラベルは矢印セグメントによって表現されるオブジェクトタイプ集合を識別する。"}
{"number":"3.230","name":"arrow meaning","name_ja":"矢印意味","definitions":[{"text":"object types of an object type set, regardless of how these object types can be collected, aggregated, grouped, bundled, or otherwise joined within the object type set","text_ja":"これらのオブジェクトタイプがオブジェクトタイプ集合内でどのように収集、集約、グループ化、束化、またはその他の方法で結合されるかに関係なく、オブジェクトタイプ集合のオブジェクトタイプ","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.10"}],"example":"a physical thing, a data element","example_ja":"物理的なもの、データ要素"}
{"number":"3.231","name":"arrow role","name_ja":"矢印役割","definitions":[{"text":"relationship between an object type set represented by an arrow segment and the activity represented by the box to which the arrow segment is attached","text_ja":"矢印セグメントによって表現されるオブジェクトタイプ集合と、矢印セグメントが接続されているボックスによって表現される活動との関係","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.12"}],"note":"There are four arrow roles: input, control, output, and mechanism.","note_ja":"矢印役割は4つある：入力、制御、出力、機構。"}
{"number":"3.232","name":"arrow segment","name_ja":"矢印セグメント","definitions":[{"text":"directed line that originates at a box side, arrow junction (branch or join), or diagram boundary and terminates at the next box side, arrow junction (branch or join), or diagram boundary that occurs in the path of the line","text_ja":"ボックス側面、矢印接続点（分岐または結合）、またはダイアグラム境界から発生し、線の経路上にある次のボックス側面、矢印接続点（分岐または結合）、またはダイアグラム境界で終了する有向線","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.13"}]}
{"number":"3.233","name":"artifact","name_ja":"アーティファクト","definitions":[{"text":"role (with respect to an action) in which the enterprise object fulfilling the role is referenced in the action","text_ja":"（アクションに関して）その役割を満たす企業オブジェクトがアクションで参照される役割","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.3.3"}],"note":"An enterprise object that is an artifact in one action can be an actor in another action.","note_ja":"あるアクションでアーティファクトである企業オブジェクトは、別のアクションではアクターになることができる。"}
{"number":"3.234","name":"artificial intelligence (AI)","name_ja":"人工知能（AI）","definitions":[{"text":"branch of computer science devoted to developing data processing systems that perform functions normally associated with human intelligence, such as reasoning, learning, and self-improvement","text_ja":"推論、学習、自己改善など、通常人間の知能に関連する機能を実行するデータ処理システムの開発に専念するコンピュータサイエンスの分野","reference":"ISO/IEC 2382:2015 Information technology — Vocabulary"}]}
{"number":"3.235","name":"ASIC","name_ja":"ASIC","definitions":[{"text":"application specific integrated circuit","text_ja":"特定用途向け集積回路"}]}
{"number":"3.236","name":"ask","name_ja":"要求","definitions":[{"text":"combination of a specific activity; a demanded execution time, defined by a specific timeliness function; a specific task mode","text_ja":"特定の活動、特定の適時性関数によって定義される要求される実行時間、特定のタスクモードの組み合わせ","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.19"}]}
{"number":"3.237","name":"ASO","name_ja":"ASO","definitions":[{"text":"Application Service Object","text_ja":"アプリケーションサービスオブジェクト","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.238","name":"aspect","name_ja":"側面","definitions":[{"text":"special consideration within product line engineering process groups and tasks to associated specialized methods and tools","text_ja":"関連する特殊な方法とツールに対するプロダクトライン工学プロセスグループとタスク内の特別な考慮事項","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.7"}]}
{"number":"3.239","name":"ASR","name_ja":"ASR","definitions":[{"text":"alternative systems review","text_ja":"代替システムレビュー","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.240","name":"assemble","name_ja":"アセンブル","definitions":[{"text":"to translate a computer program expressed in an assembly language into its machine language equivalent","text_ja":"アセンブリ言語で表現されたコンピュータプログラムを対応する機械語に変換すること"},{"text":"process of constructing from parts one or more identified pieces of software","text_ja":"部品から1つ以上の識別されたソフトウェア片を構築するプロセス","reference":"IEEE 1517-2010 IEEE Standard for Information Technology — System and software life cycle processes — Reuse processes, 3"}],"confer":["compile","disassemble","interpret"],"confer_ja":["コンパイル","逆アセンブル","解釈"]}
{"number":"3.241","name":"assemble-and-go","name_ja":"アセンブル・アンド・ゴー","definitions":[{"text":"operating technique in which there are no stops between the assembling, linking, loading, and execution of a computer program","text_ja":"コンピュータプログラムのアセンブル、リンク、ロード、実行の間に停止がない動作技法"}]}
{"number":"3.242","name":"assembled origin","name_ja":"アセンブル原点","definitions":[{"text":"address of the initial storage location assigned to a computer program by an assembler, a compiler, or a linkage editor","text_ja":"アセンブラ、コンパイラ、またはリンケージエディタによってコンピュータプログラムに割り当てられた初期記憶場所のアドレス"}],"confer":["loaded origin","offset (1)","starting address"],"confer_ja":["ロード原点","オフセット（1）","開始アドレス"]}
{"number":"3.243","name":"assembler","name_ja":"アセンブラ","definitions":[{"text":"computer program that translates programs expressed in assembly language into their machine language equivalents","text_ja":"アセンブリ言語で表現されたプログラムを対応する機械語に変換するコンピュータプログラム"}],"confer":["absolute assembler","compiler","cross-assembler","interpreter","relocating assembler"],"confer_ja":["絶対アセンブラ","コンパイラ","クロスアセンブラ","インタープリタ","再配置アセンブラ"]}
{"number":"3.244","name":"assembly","name_ja":"アセンブリ","definitions":[{"text":"collection of units in which ports on different units are compatibly interconnected so behaviors of one unit can influence behaviors of another unit by means of interactions occurring through interconnected ports","text_ja":"異なるユニット上のポートが互換的に相互接続されたユニットの集合で、あるユニットの動作が相互接続されたポートを通じて生じる相互作用により他のユニットの動作に影響を与えることができる","reference":"IEEE 1175.4- 2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.3"}],"note":"An assembly can be regarded as behaviorally equivalent with a unit. The ports of the unit are just those ports of the assembly units that are not internally interconnected. The behavior of the unit is a composition of the shared behaviors of the assembly units","note_ja":"アセンブリは、ユニットと動作的に等価であるとみなすことができる。ユニットのポートは、内部的に相互接続されていないアセンブリユニットのポートのみである。ユニットの動作は、アセンブリユニットの共有動作の合成である。"}
{"number":"3.245","name":"assembly code","name_ja":"アセンブリコード","definitions":[{"text":"computer instructions and data definitions expressed in a form that can be recognized and processed by an assembler","text_ja":"アセンブラによって認識および処理可能な形式で表現されたコンピュータ命令とデータ定義"}],"alias":["assembler code"],"alias_ja":["アセンブラコード"],"confer":["compiler code","interpretive code","machine code"],"confer_ja":["コンパイラコード","インタープリティブコード","マシンコード"]}
{"number":"3.246","name":"assembly language","name_ja":"アセンブリ言語","definitions":[{"text":"programming language that corresponds closely to the instruction set of a given computer, allows symbolic naming of operations and addresses, and usually results in a one-to-one translation of program instructions int machine instructions","text_ja":"特定のコンピュータの命令セットに密接に対応し、操作とアドレスの記号的命名を可能にし、通常はプログラム命令の機械命令への1対1の変換を結果とするプログラミング言語"}],"alias":["assembler language","low-level language","second-generation language"],"alias_ja":["アセンブラ言語","低レベル言語","第2世代言語"],"confer":["fifth-generation language","fourth-generation language","high-order language","machine language"],"confer_ja":["第5世代言語","第4世代言語","高級言語","機械語"]}
{"number":"3.247","name":"assertion","name_ja":"アサーション","definitions":[{"text":"logical expression specifying a program state that must exist or a set of conditions that program variables must satisfy at a particular point during program execution.2. function or macro that complains loudly if a design assumption on which the code is based is not true","text_ja":"プログラム実行中の特定の点で存在しなければならないプログラム状態、またはプログラム変数が満たさなければならない条件の集合を指定する論理式。2. コードが基づく設計仮定が真でない場合に大きく警告する関数またはマクロ"}],"confer":["invariant","proof of correctness"],"confer_ja":["不変条件","正当性の証明"],"note":"Types include input assertion, loop assertion, output assertion.","note_ja":"型には入力アサーション、ループアサーション、出力アサーションが含まれる。"}
{"number":"3.248","name":"assessment","name_ja":"評価","definitions":[{"text":"action of applying specific documented criteria to a specific software module, package or product for the purpose of determining acceptance or release of the software module, package or product","text_ja":"特定のソフトウェアモジュール、パッケージまたは製品の受け入れまたはリリースを決定する目的で、特定の文書化された基準を適用する行為","reference":"ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 3.1"}]}
{"number":"3.249","name":"assessment body","name_ja":"評価機関","definitions":[{"text":"body that performs an assessment","text_ja":"評価を実行する機関","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.1"}],"note":"A body can be an organization or part of an organization that performs the assessment.","note_ja":"機関は、評価を実行する組織または組織の一部でありうる。"}
{"number":"3.250","name":"assessment constraint","name_ja":"評価制約","definitions":[{"text":"restriction placed on the use of the assessment outputs or on the assessment team's freedom of choice regarding the conduct of the assessment","text_ja":"評価出力の使用または評価の実施に関する評価チームの選択の自由に課される制限","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.2"}]}
{"number":"3.251","name":"assessment indicator","name_ja":"評価指標","definitions":[{"text":"sources of objective evidence used to support the assessors' judgment in rating process attributes","text_ja":"プロセス属性の評価における評価者の判断を支援するために使用される客観的証拠の源","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.1"}],"example":"work products, practice, or resource","example_ja":"作業成果物、実践、またはリソース"}
{"number":"3.252","name":"assessment input","name_ja":"評価入力","definitions":[{"text":"information required before a process assessment can commence","text_ja":"プロセス評価を開始する前に必要な情報","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.3"}]}
{"number":"3.253","name":"assessment output","name_ja":"評価出力","definitions":[{"text":"tangible results from an assessment","text_ja":"評価からの有形な結果","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.4"}],"confer":["assessment record"],"confer_ja":["評価記録"]}
{"number":"3.254","name":"assessment participant","name_ja":"評価参加者","definitions":[{"text":"individual who has responsibilities within the scope of the assessment","text_ja":"評価の範囲内で責任を持つ個人","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.5"}],"example":"the assessment sponsor, assessors, and organizational unit members","example_ja":"評価スポンサー、評価者、組織単位メンバー"}
{"number":"3.255","name":"assessment purpose","name_ja":"評価目的","definitions":[{"text":"statement, provided as part of the assessment input, which defines the reasons for performing the assessment","text_ja":"評価入力の一部として提供される、評価を実行する理由を定義する声明","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.6"}]}
{"number":"3.256","name":"assessment record","name_ja":"評価記録","definitions":[{"text":"orderly, documented collection of information which is pertinent to the assessment and adds to the understanding and verification of the process profiles generated by the assessment","text_ja":"評価に関連し、評価によって生成されるプロセスプロファイルの理解と検証を追加する、秩序だった文書化された情報の集合","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.7"}]}
{"number":"3.257","name":"assessment scope","name_ja":"評価範囲","definitions":[{"text":"definition of the boundaries of the assessment, provided as part of the assessment input, encompassing the boundaries of the organizational unit for the assessment, the processes to be included, the quality level for each process to be assessed, and the context within which the processes operate","text_ja":"評価入力の一部として提供される評価の境界の定義で、評価対象の組織単位の境界、含まれるプロセス、評価される各プロセスの品質レベル、およびプロセスが動作する文脈を包含する","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.8"}]}
{"number":"3.258","name":"assessment sponsor","name_ja":"評価スポンサー","definitions":[{"text":"individual or entity, internal or external to the organizational unit being assessed, who requires the assessment to be performed, and provides financial or other resources to carry it out","text_ja":"評価される組織単位の内部または外部の個人または実体で、評価の実行を要求し、それを実行するための財務的またはその他のリソースを提供する","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.9"}]}
{"number":"3.259","name":"assessment team","name_ja":"評価チーム","definitions":[{"text":"one or more individuals who jointly perform a process assessment","text_ja":"プロセス評価を共同で実行する1人以上の個人","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.10"}]}
{"number":"3.260","name":"assessor","name_ja":"評価者","definitions":[{"text":"individual who participates in the rating of process attributes","text_ja":"プロセス属性の評価に参加する個人","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.11"}]}
{"number":"3.261","name":"asset","name_ja":"資産","definitions":[{"text":"anything that has value to a person or organization","text_ja":"人や組織にとって価値のあるもの","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.3.1"},{"text":"item that has been designed for use in multiple contexts","text_ja":"複数の文脈での使用のために設計された項目","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1.3"},{"text":"item, such as design, specifications, source code, documentation, test suites, or manual procedures, that has been designed for use in multiple contexts","text_ja":"設計、仕様、ソースコード、文書、テストスイート、または手動手順など、複数の文脈での使用のために設計された項目","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"},{"text":"item, thing, or entity that has potential or actual value to an organization","text_ja":"組織にとって潜在的または実際の価値を持つ項目、物、または実体","reference":"ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.2"}],"example":"requirements documents, source code modules, measurement definitions","example_ja":"要求文書、ソースコードモジュール、測定定義","note":"For most organizations, physical assets usually refer to equipment, inventory and properties owned by the organization. Physical assets are the opposite of intangible assets, which are non-physical assets, such as leases, brands, digital assets, use rights, licenses, intellectual property rights, reputation or agreements. A grouping of assets referred to as an asset system could also be considered as an asset.","note_ja":"ほとんどの組織にとって、物理的資産は通常、組織が所有する設備、在庫、および不動産を指す。物理的資産は、リース、ブランド、デジタル資産、使用権、ライセンス、知的財産権、評判、または合意などの非物理的資産である無形資産の対極である。資産システムと呼ばれる資産のグループ化も資産とみなされる可能性がある。"}
{"number":"3.262","name":"asset base","name_ja":"資産ベース","definitions":[{"text":"reusable assets produced from both domain and application engineering","text_ja":"ドメインエンジニアリングとアプリケーションエンジニアリングの両方から生成された再利用可能な資産","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.6"}]}
{"number":"3.263","name":"asset management","name_ja":"資産管理","definitions":[{"text":"coordinated activities of an organization to realize value from assets","text_ja":"資産から価値を実現するための組織の協調的活動","reference":"ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.3"}]}
{"number":"3.264","name":"asset proposal","name_ja":"資産提案","definitions":[{"text":"artifact that includes major assets (functional areas and high-level common and variable features of all applications) that can be included in a product line with their quantified costs and benefits, and estimate results","text_ja":"定量化されたコストと利益、および推定結果とともにプロダクトラインに含めることができる主要な資産（機能領域および全てのアプリケーションの高レベル共通および可変機能）を含む成果物","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.8"}]}
{"number":"3.265","name":"asset scoping","name_ja":"資産スコーピング","definitions":[{"text":"process of identifying the potential domain assets and estimating the returns of investments in the assets","text_ja":"潜在的なドメイン資産を識別し、資産への投資の収益を推定するプロセス","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.7"}],"note":"Information produced during asset scoping, together with the information produced by product scoping and domain scoping, can be used to determine whether to introduce a product line into an organization.","note_ja":"資産スコーピング中に生成された情報は、製品スコーピングおよびドメインスコーピングによって生成された情報と共に、組織にプロダクトラインを導入するかどうかを決定するために使用できる。"}
{"number":"3.266","name":"assignment","name_ja":"割り当て","definitions":[{"text":"for a set of variables, the association of a value (of correct type) to each variable","text_ja":"変数の集合に対して、各変数への値（正しい型の）の関連付け","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.3"}],"confer":["binding"],"confer_ja":["束縛"]}
{"number":"3.267","name":"assignment statement","name_ja":"代入文","definitions":[{"text":"computer program statement that assigns a value to a variable","text_ja":"変数に値を代入するコンピュータプログラム文"}],"confer":["control statement","declaration","clear","initialize","reset"],"confer_ja":["制御文","宣言","クリア","初期化","リセット"],"example":"Y = X","example_ja":"Y = X"}
{"number":"3.268","name":"assist","name_ja":"支援","definitions":[{"text":"tester intervention in the form of direct procedural help provided by the test administrator to the test participants in order to allow the test to continue when the participants could not complete the tasks on their own","text_ja":"参加者が自分でタスクを完了できない場合にテストを継続できるように、テスト管理者がテスト参加者に提供する直接的な手順的支援の形でのテスターの介入","reference":"ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.12"}]}
{"number":"3.269","name":"assistive technologies","name_ja":"支援技術","definitions":[{"text":"hardware or software that is added to or incorporated within a system that increases accessibility for an individual","text_ja":"個人のアクセシビリティを向上させるためにシステムに追加または組み込まれるハードウェアまたはソフトウェア","reference":"ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.11"}],"example":"Braille displays, screen readers, screen magnification software, and eye tracking devices","example_ja":"点字ディスプレイ、スクリーンリーダー、画面拡大ソフトウェア、および視線追跡装置"}
{"number":"3.270","name":"association","name_ja":"関連","definitions":[{"text":"in UML, a relationship between an actor and a use case that indicates that the actor interacts with the system by means of the use case2. relationship (binding) between protocol objects (or between a protocol object and an interceptor) that is established independently of the protocol exchanges that support a particular computational interaction","text_ja":"UMLにおいて、アクターがユースケースによってシステムと相互作用することを示すアクターとユースケース間の関係。2. 特定の計算相互作用をサポートするプロトコル交換とは独立して確立されるプロトコルオブジェクト間（またはプロトコルオブジェクトとインターセプタ間）の関係（束縛）","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.2"}]}
{"number":"3.271","name":"association management facility","name_ja":"関連管理機能","definitions":[{"text":"set of service primitives which support the management of an association between protocol objects","text_ja":"プロトコルオブジェクト間の関連の管理をサポートするサービスプリミティブの集合","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.3"}]}
{"number":"3.272","name":"associative class","name_ja":"関連クラス","definitions":[{"text":"class introduced to resolve a many-to-many relationship","text_ja":"多対多関係を解決するために導入されるクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.7"}]}
{"number":"3.273","name":"associative entity","name_ja":"関連エンティティ","definitions":[{"text":"entity used to represent a relationship between other entities","text_ja":"他のエンティティ間の関係を表現するために使用されるエンティティ","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"An associative entity is used when a relationship does not otherwise provide sufficient mechanisms.","note_ja":"関連エンティティは、関係が他に十分な機構を提供しない場合に使用される。"}
{"number":"3.274","name":"associative entity type","name_ja":"関連エンティティタイプ","definitions":[{"text":"entity type that contains attributes which further describe a many-to-many relationship between two other entity types","text_ja":"他の2つのエンティティタイプ間の多対多関係をさらに記述する属性を含むエンティティタイプ","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.6"}],"confer":["entity type"],"confer_ja":["エンティティタイプ"]}
{"number":"3.275","name":"associative literal","name_ja":"関連リテラル","definitions":[{"text":"literal that denotes an instance in terms of its value","text_ja":"その値の観点からインスタンスを表すリテラル","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.8"}],"note":"The form of expression used to state an associative literal is className with propertyName: propertyValue.","note_ja":"関連リテラルを述べるために使用される式の形式は、propertyName: propertyValueを持つclassNameである。"}
{"number":"3.276","name":"assumption","name_ja":"仮定","definitions":[{"text":"a factor in the planning process that is considered to be true, real, or certain, without proof or demonstration","text_ja":"証明や実証なしに、真実、現実、または確実であると考えられる計画プロセスの要因","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.277","name":"assumptions analysis","name_ja":"仮定分析","definitions":[{"text":"a technique that explores the accuracy of assumptions and identifies risks to the project from inaccuracy, inconsistency, or incompleteness of assumptions","text_ja":"仮定の正確性を探求し、仮定の不正確性、不整合、または不完全性からプロジェクトへのリスクを識別する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.278","name":"assurance","name_ja":"保証","definitions":[{"text":"grounds for justified confidence that a claim has been or will be achieved","text_ja":"主張が達成されたか、または達成されるであろうという正当化された信頼の根拠","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.1.1"}]}
{"number":"3.279","name":"assurance case","name_ja":"保証ケース","definitions":[{"text":"reasoned, auditable artifact created that supports the contention that its top-level claim (or set of claims), is satisfied, including systematic argumentation and its underlying evidence and explicit assumptions that support the claim(s)","text_ja":"その最上位の主張（または主張の集合）が満たされているという論争をサポートするために作成された、論理的で監査可能な成果物で、体系的な論証とその根拠となる証拠、および主張を支持する明示的な仮定を含む","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.1.3"},{"text":"representation of a claim or claims, and the support for these claims","text_ja":"主張または主張群の表現、およびこれらの主張に対する支援","reference":"IEEE 730- 2014 IEEE Standard for Software Quality Assurance Processes, 3.2"}],"note":"An assurance case contains the following and their relationships: one or more claims about properties; arguments that logically link the evidence and any assumptions to the claim(s); a body of evidence and possibly assumptions supporting these arguments for the claim(s); justification of the choice of top-level claim and the method of reasoning","note_ja":"保証ケースには以下とそれらの関係が含まれる：特性に関する1つ以上の主張；証拠と任意の仮定を主張に論理的に結びつける議論；主張に対するこれらの議論を支持する証拠群と可能な仮定；最上位主張の選択と推論方法の正当化"}
{"number":"3.280","name":"assure","name_ja":"保証する","definitions":[{"text":"to promise or state with certainty by one person to another person or group","text_ja":"ある人から別の人またはグループに対して確実性をもって約束または宣言すること","reference":"IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2"}],"confer":["ensure"],"confer_ja":["確実にする"]}
{"number":"3.281","name":"asynchronous","name_ja":"非同期","definitions":[{"text":"pertaining to two or more processes that do not depend upon the occurrence of specific events such as common timing","text_ja":"共通タイミングなどの特定の出来事の発生に依存しない2つ以上のプロセスに関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.282","name":"asynchronous communication interface adapter","name_ja":"非同期通信インターフェースアダプタ","definitions":[{"text":"functional unit to connect interfaces for asynchronous communications","text_ja":"非同期通信用インターフェースを接続する機能単位"}]}
{"number":"3.283","name":"asynchronous communication interface adapter (ACIA)","name_ja":"非同期通信インターフェースアダプタ（ACIA）","definitions":[{"text":"functional unit to connect interfaces for asynchronous communications","text_ja":"非同期通信用インターフェースを接続する機能単位"}]}
{"number":"3.284","name":"asynchronous I/O device","name_ja":"非同期I/Oデバイス","definitions":[{"text":"I/O device that generates an interrupt after producing some input or generating some output","text_ja":"何らかの入力を生成または何らかの出力を生成した後に割り込みを生成するI/Oデバイス"}]}
{"number":"3.285","name":"asynchronous I/O device interface task","name_ja":"非同期I/Oデバイスインターフェースタスク","definitions":[{"text":"task that interfaces to an I/O device and is activated by interrupts from that device","text_ja":"I/Oデバイスにインターフェースし、そのデバイスからの割り込みによって活性化されるタスク"}]}
{"number":"3.286","name":"asynchronous message communication","name_ja":"非同期メッセージ通信","definitions":[{"text":"communication in which a producer task sends a message to a consumer task and does not wait for a response","text_ja":"プロデューサタスクがコンシューマタスクにメッセージを送信し、応答を待機しない通信"}],"alias":["loosely coupled message communication"],"alias_ja":["疎結合メッセージ通信"],"note":"A message queue could build up between the tasks.","note_ja":"タスク間でメッセージキューが構築される可能性がある。"}
{"number":"3.287","name":"atomic type","name_ja":"原子型","definitions":[{"text":"data type, each of whose members consists of a single, nondecomposable data item","text_ja":"そのメンバーのそれぞれが単一の非分解可能なデータ項目で構成されるデータ型"}],"alias":["primitive type"],"alias_ja":["プリミティブ型"],"confer":["composite type"],"confer_ja":["複合型"]}
{"number":"3.288","name":"atomicity","name_ja":"原子性","definitions":[{"text":"entity at a given level of abstraction that cannot be subdivided at that level of abstraction","text_ja":"与えられた抽象レベルにおいて、その抽象レベルで分割できない実体","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 6.4"}]}
{"number":"3.289","name":"attached process","name_ja":"付加プロセス","definitions":[{"text":"process definitions how each asset will be used in application","text_ja":"各資産がアプリケーションでどのように使用されるかを定義するプロセス","reference":"ISO/IEC 26555:2015 Software and systems engineering — Tools and methods for product line technical management, 3.2"}]}
{"number":"3.290","name":"attack","name_ja":"攻撃","definitions":[{"text":"malicious action or interaction with the system or its environment that has the potential to result in a fault or an error (and thereby possibly in a failure) or an adverse consequence","text_ja":"システムまたはその環境との悪意のある行動または相互作用で、故障またはエラー（それによって可能には障害）または悪影響を結果として生じる可能性があるもの","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.4.6"}]}
{"number":"3.291","name":"attribute","name_ja":"属性","definitions":[{"text":"property associated with a set of real or abstract things that is some characteristic of interest","text_ja":"関心のある何らかの特性である、実在のまたは抽象的な事物の集合に関連する特性","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.9"},{"text":"inherent property or characteristic of an entity that can be distinguished quantitatively or qualitatively by human or automated means","text_ja":"人間または自動化された手段によって定量的または定性的に区別できるエンティティの固有の特性または特徴","reference":"ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.2; ISO/IEC 25000:2014 Systems and software Engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Guide to SQuaRE, 4.1"},{"text":"measurable physical or abstract property of an entity","text_ja":"エンティティの測定可能な物理的または抽象的特性","reference":"IEEE 1061- 1998 (R2004) IEEE Standard for Software Quality Metrics Methodology, 2.1"},{"text":"identifiable association between an object and a value","text_ja":"オブジェクトと値の間の識別可能な関連","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.2.2"},{"text":"function from the instances of a class to the instances of the value class of the attribute","text_ja":"クラスのインスタンスから属性の値クラスのインスタンスへの関数","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.9"},{"text":"unique item of information about an entity","text_ja":"エンティティに関する一意の情報項目","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"},{"text":"single-valued characteristic of an entity or relationship","text_ja":"エンティティまたは関係の単一値特性","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"},{"text":"label that governs the form or shape of the object it is associated with, which, in contrast to an annotation, is typically not shown as text","text_ja":"それが関連するオブジェクトの形や形状を支配するラベルで、注釈とは対照的に、通常はテキストとして表示されない","reference":"ISO/IEC 15909-2:2011 Software and system engineering — High-level Petri nets — Part 2: Transfer format, 4.1.2"}],"example":"people, objects, places, events, ideas, or combinations of things","example_ja":"人、オブジェクト、場所、イベント、アイデア、または事物の組み合わせ","note":"can refer either to general characteristics such as reliability, maintainability, and usability or to specific features of a software product. An attribute expresses some characteristic that is generally common to the instances of a class. The name of the attribute is the name of the role that the value class plays in describing the class, which can simply be the name of the value class (as long as using the value class name does not cause ambiguity).","note_ja":"信頼性、保守性、使用性などの一般的な特性またはソフトウェア製品の特定の機能のいずれかを指すことができる。属性は、一般的にクラスのインスタンスに共通する何らかの特性を表現する。属性の名前は、値クラスがクラスの記述において果たす役割の名前であり、これは単純に値クラスの名前でありうる（値クラス名を使用することが曖昧さを引き起こさない限り）。"}
{"number":"3.292","name":"attribute name","name_ja":"属性名","definitions":[{"text":"role name for the value class of the attribute","text_ja":"属性の値クラスの役割名","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.10"}]}
{"number":"3.293","name":"attribute sampling","name_ja":"属性サンプリング","definitions":[{"text":"method of measuring quality that consists of noting the presence (or absence) of some characteristic (attribute) in each of the units under consideration. After each unit is inspected, the decision is made to accept a lot, reject it, or inspect another unit","text_ja":"検討中の各単位において何らかの特性（属性）の存在（または不存在）を記録することからなる品質測定方法。各単位が検査された後、ロットを受け入れる、拒否する、または別の単位を検査するという決定がなされる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.294","name":"attributed relationship","name_ja":"属性付き関係","definitions":[{"text":"relationship that has attributes","text_ja":"属性を持つ関係","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.295","name":"attributive entity type","name_ja":"属性エンティティタイプ","definitions":[{"text":"entity type that further describes one or more attributes of another entity type","text_ja":"別のエンティティタイプの1つ以上の属性をさらに記述するエンティティタイプ","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.7"}],"confer":["entity"],"confer_ja":["エンティティ"]}
{"number":"3.296","name":"audience","name_ja":"対象読者","definitions":[{"text":"category of users sharing the same or similar characteristics and needs (for example, reason for using the documentation, tasks, education level, abilities, training, experience)","text_ja":"同じまたは類似の特性とニーズを共有するユーザーのカテゴリ（例えば、文書使用の理由、タスク、教育レベル、能力、訓練、経験）","reference":"ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.6"},{"text":"category of users sharing the same or similar characteristics and needs (for example, purpose in using the documentation, tasks, education level, abilities, training, and experience) that determine the content, structure, and use of the intended documentation","text_ja":"意図された文書の内容、構造、および使用を決定する同じまたは類似の特性とニーズを共有するユーザーのカテゴリ（例えば、文書使用の目的、タスク、教育レベル、能力、訓練、経験）","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.2"}],"note":"There can be different audiences for documentation (for example, management, data entry, maintenance).","note_ja":"文書には異なる対象読者が存在しうる（例えば、管理、データ入力、保守）。"}
{"number":"3.297","name":"audience research","name_ja":"対象読者調査","definitions":[{"text":"planned process of interviews of representative users and analysis of interview records and personnel records","text_ja":"代表的ユーザーのインタビューとインタビュー記録および人事記録の分析の計画されたプロセス"}],"note":"The purpose of audience research is to determine the abilities, training, experience, limitations, prejudices and preferences of the intended readers of a document.","note_ja":"対象読者調査の目的は、文書の意図された読者の能力、訓練、経験、制限、偏見、および好みを決定することである。"}
{"number":"3.298","name":"audit","name_ja":"監査","definitions":[{"text":"systematic, independent, documented process for obtaining records, statements of fact, or other relevant information and assessing them objectively, to determine the extent to which specified requirements are fulfilled","text_ja":"記録、事実の陳述、またはその他の関連情報を取得し、それらを客観的に評価して、指定された要求がどの程度満たされているかを決定するための体系的、独立した、文書化されたプロセス","reference":"ISO/IEC TR 29110-1:2016 Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 1: Overview, 3.7"},{"text":"independent examination of a work product or set of work products to assess compliance with specifications, standards, contractual agreements, or other criteria","text_ja":"仕様、標準、契約合意、またはその他の基準への適合性を評価するための作業成果物または作業成果物の集合の独立した検査","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.10; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.9"},{"text":"independent examination of a software product, software process, or set of software processes to assess compliance with specifications, standards, contractual agreements, or other criteria","text_ja":"仕様、標準、契約合意、またはその他の基準への適合性を評価するためのソフトウェア製品、ソフトウェアプロセス、またはソフトウェアプロセスの集合の独立した検査","reference":"IEEE 1028-2008 IEEE Standard for Software Reviews and Audits, 3.2"},{"text":"independent assessment of products and processes, conducted by an authorized person to assess compliance with requirements","text_ja":"要求への適合性を評価するために承認された人によって実施される製品とプロセスの独立した評価","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.5"},{"text":"systematic, independent and documented process for obtaining audit evidence and evaluating it objectively to determine the extent to which audit criteria are fulfilled","text_ja":"監査証拠を取得し、監査基準がどの程度満たされているかを決定するためにそれを客観的に評価する体系的、独立した、文書化されたプロセス","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.7"}],"note":"An audit results in a clear indication of whether the audit criteria have been met.","note_ja":"監査は、監査基準が満たされているかどうかの明確な指示を結果として生じる。"}
{"number":"3.299","name":"audit team","name_ja":"監査チーム","definitions":[{"text":"one or more auditors conducting an audit, supported if needed by technical experts","text_ja":"必要に応じて技術専門家によって支援される監査を実施する1人以上の監査人","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.10"}],"note":"One auditor of the audit team is appointed as the audit team leader. The audit team can include auditors-i training.","note_ja":"監査チームの1人の監査人が監査チームリーダーとして任命される。監査チームは訓練中の監査人を含むことができる。"}
{"number":"3.300","name":"auditee","name_ja":"被監査者","definitions":[{"text":"organization being audited","text_ja":"監査を受けている組織","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.8"}]}
{"number":"3.301","name":"auditor","name_ja":"監査人","definitions":[{"text":"person who conducts an audit","text_ja":"監査を実施する人","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.9"}]}
{"number":"3.302","name":"authenticity","name_ja":"真正性","definitions":[{"text":"degree to which the identity of a subject or resource can be proved to be the one claimed","text_ja":"主体またはリソースのアイデンティティが主張されたものであることが証明できる度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.6.5"}]}
{"number":"3.303","name":"authoring language","name_ja":"オーサリング言語","definitions":[{"text":"high-level programming language used to develop courseware for computer-assisted instruction","text_ja":"コンピュータ支援教育のコースウェア開発に使用される高級プログラミング言語"}],"confer":["authoring system"],"confer_ja":["オーサリングシステム"]}
{"number":"3.304","name":"authoring system","name_ja":"オーサリングシステム","definitions":[{"text":"programming system that incorporates an authoring language","text_ja":"オーサリング言語を組み込んだプログラミングシステム"}]}
{"number":"3.305","name":"authority","name_ja":"権限","definitions":[{"text":"the right to apply project resources, expend funds, make decisions, or give approvals","text_ja":"プロジェクトリソースを適用し、資金を支出し、決定を下し、または承認を与える権利","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.306","name":"authorization","name_ja":"認可","definitions":[{"text":"action indicating that a particular behavior shall not be prevented","text_ja":"特定の動作が阻止されてはならないことを示す行為","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.6.4"}],"note":"Unlike a permission, an authorization is an empowerment.","note_ja":"許可とは異なり、認可は権限付与である。"}
{"number":"3.307","name":"automate","name_ja":"自動化する","definitions":[{"text":"to make a process or equipment automatic","text_ja":"プロセスまたは機器を自動的にすること","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.308","name":"automated systems process","name_ja":"自動化システムプロセス","definitions":[{"text":"systems or software process that is performed either fully or partially supported by CASE tools","text_ja":"CASEツールによって完全にまたは部分的にサポートされて実行されるシステムまたはソフトウェアプロセス","reference":"ISO/IEC 15940:2013 Systems and software engineering — Software Engineering Environment Services, 2.9"}],"alias":["assisted process","assisted software process","assisted systems process","automated process","automated software process"],"alias_ja":["支援プロセス","支援ソフトウェアプロセス","支援システムプロセス","自動化プロセス","自動化ソフトウェアプロセス"]}
{"number":"3.309","name":"automated verification system","name_ja":"自動検証システム","definitions":[{"text":"software tool that accepts as input a computer program and a representation of its specification and produces, possibly with human help, a proof or disproof of the correctness of the program","text_ja":"コンピュータプログラムとその仕様の表現を入力として受け取り、おそらく人間の助けを借りて、プログラムの正しさの証明または反証を生成するソフトウェアツール"},{"text":"software tool that automates part or all of the verification process","text_ja":"検証プロセスの一部または全部を自動化するソフトウェアツール"}]}
{"number":"3.310","name":"automatic","name_ja":"自動","definitions":[{"text":"pertaining to a process or equipment that, under specified conditions, functions without human intervention","text_ja":"指定された条件下で、人間の介入なしに機能するプロセスまたは機器に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.311","name":"automation","name_ja":"自動化","definitions":[{"text":"conversion of processes or equipment to automatic operation, or the results of the conversion","text_ja":"プロセスまたは機器の自動動作への変換、または変換の結果","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.312","name":"autonomy-based improvement","name_ja":"自律性ベース改善","definitions":[{"text":"self-motivated and self-determined professional process improvement with an understanding of the wor (process) objectives, latest technology, and outcomes from product use","text_ja":"作業（プロセス）目標、最新技術、および製品使用からの成果を理解した自己動機による自己決定的な専門的プロセス改善","reference":"ISO/IEC TR 29110-3-4:2015 Systems and software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 3-4: Autonomy-based improvement method, 3.2"},{"text":"motivated professional process improvement with understanding work (process) objectives, technology status quo, and outcomes from product use, not forced by anybody","text_ja":"誰にも強制されない、作業（プロセス）目標、技術現状、および製品使用からの成果を理解した動機のある専門的プロセス改善","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.11"}]}
{"number":"3.313","name":"availability","name_ja":"可用性","definitions":[{"text":"ability of a service or service component to perform its required function at an agreed instant or over an agreed period of time","text_ja":"合意された瞬間または合意された期間にわたってサービスまたはサービスコンポーネントが要求された機能を実行する能力"},{"text":"degree to which a system or component is operational and accessible when required for use","text_ja":"使用が要求されたときにシステムまたはコンポーネントが動作可能でアクセス可能である度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.5.2"},{"text":"ability of an application object to perform its required function at an agreed instant or over an agreed period of time","text_ja":"合意された瞬間または合意された期間にわたってアプリケーションオブジェクトが要求された機能を実行する能力","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.7"}],"confer":["error tolerance","fault tolerance","reliability","robustness"],"confer_ja":["エラー許容性","故障許容性","信頼性","頑健性"],"note":"Availability is normally expressed as a ratio or percentage of the time that the service or service component is actually available for use by the customer to the agreed time that the service should be available. Availability is a combination of maturity (which reflects the frequency of failure), fault tolerance and recoverability (which reflect the length of downtime following each failure). This concerns the start and finish (execution) of the application, the processing at the correct times and in the correct order, the execution of incidental processing, the opening times of online processing, and the storage period of files.","note_ja":"可用性は通常、サービスまたはサービスコンポーネントが顧客による使用のために実際に利用可能な時間の、サービスが利用可能であるべき合意された時間に対する比率またはパーセンテージとして表現される。可用性は、成熟度（故障の頻度を反映）、故障許容性および回復可能性（各故障後のダウンタイムの長さを反映）の組み合わせである。これは、アプリケーションの開始と終了（実行）、正しい時間と正しい順序での処理、付随的処理の実行、オンライン処理の開放時間、およびファイルの保存期間に関する。"}
{"number":"3.314","name":"available interaction","name_ja":"利用可能相互作用","definitions":[{"text":"interaction that is allowed by one unit and controlled by another unit","text_ja":"あるユニットによって許可され、別のユニットによって制御される相互作用","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.4"}]}
{"number":"3.315","name":"BAC","name_ja":"BAC","definitions":[{"text":"budget at completion","text_ja":"完成時予算","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.316","name":"back matter","name_ja":"後付","definitions":[{"text":"material that appears at the end of printed documentation, such as an index","text_ja":"索引などの印刷文書の末尾に現れる資料"}]}
{"number":"3.317","name":"back-to-back testing","name_ja":"バックトゥバックテスト","definitions":[{"text":"testing in which two or more variants of a program are executed with the same inputs, the outputs are compared, and errors are analyzed in case of discrepancies","text_ja":"プログラムの2つ以上の変種が同じ入力で実行され、出力が比較され、相違がある場合にエラーが分析されるテスト","reference":"ISO/IEC TR 19759:2016, Software Engineering -- Guide to the Software Engineering Body of Knowledge (SWEBOK), 4.2.2.9"}],"confer":["mutation testing"],"confer_ja":["ミューテーションテスト"]}
{"number":"3.318","name":"background","name_ja":"バックグラウンド","definitions":[{"text":"in job scheduling, the computing environment in which low-priority processes or those not requiring user interaction are executed","text_ja":"ジョブスケジューリングにおいて、低優先度プロセスまたはユーザー相互作用を必要としないプロセスが実行される計算環境"}],"confer":["foreground","background processing"],"confer_ja":["フォアグラウンド","バックグラウンド処理"]}
{"number":"3.319","name":"background processing","name_ja":"バックグラウンド処理","definitions":[{"text":"execution of a low-priority process while higher priority processes are not using computer resources, or the execution of processes that do not require user interaction","text_ja":"より高い優先度のプロセスがコンピュータリソースを使用していない間の低優先度プロセスの実行、またはユーザー相互作用を必要としないプロセスの実行"}],"confer":["foreground processing"],"confer_ja":["フォアグラウンド処理"]}
{"number":"3.320","name":"backlog","name_ja":"バックログ","definitions":[{"text":"a listing of product requirements and deliverables to be completed, written as stories, and prioritized by the business to manage and organize the project's work","text_ja":"完了すべき製品要求と成果物のリストで、ストーリーとして記述され、プロジェクトの作業を管理し組織化するためにビジネスによって優先順位付けされる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"a set of software features awaiting development in a subsequent iteration","text_ja":"後続のイテレーションでの開発を待つソフトウェア機能の集合","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.321","name":"backout","name_ja":"バックアウト","definitions":[{"text":"to undo the effects of a commit","text_ja":"コミットの効果を取り消すこと"}],"note":"often by introducing a new commit that restores things to their previous state","note_ja":"しばしば、物事を以前の状態に復元する新しいコミットを導入することによって"}
{"number":"3.322","name":"backup","name_ja":"バックアップ","definitions":[{"text":"system, component, file, procedure, or person available to replace or help restore a primary item in the event of a failure or externally caused disaster2. to create or designate a system, component, file, procedure, or person as a replacement","text_ja":"故障または外的に引き起こされた災害の場合に主要項目を置換または復元を支援するために利用可能なシステム、コンポーネント、ファイル、手順、または人。2. 置換としてシステム、コンポーネント、ファイル、手順、または人を作成または指定すること"}]}
{"number":"3.323","name":"backup and recovery testing","name_ja":"バックアップ・回復テスト","definitions":[{"text":"type of reliability testing that measures the degree to which system state can be restored from backup within specified parameters of time, cost, completeness, and accuracy in the event of failure","text_ja":"故障の場合に、時間、コスト、完全性、および正確性の指定されたパラメータ内でバックアップからシステム状態を復元できる度合いを測定する信頼性テストの一種","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.3"}]}
{"number":"3.324","name":"backup programmer","name_ja":"バックアッププログラマ","definitions":[{"text":"assistant leader of a chief programmer team","text_ja":"チーフプログラマチームの補佐リーダー"}],"confer":["chief programmer"],"confer_ja":["チーフプログラマ"],"note":"Responsibilities include contributing significant portions of the software being developed by the team, aiding the chief programmer in reviewing the work of other team members, substituting for the chief programmer when necessary, and having an overall technical understanding of the software being developed.","note_ja":"責任には、チームによって開発されているソフトウェアの重要な部分への貢献、他のチームメンバーの作業のレビューにおけるチーフプログラマの支援、必要時のチーフプログラマの代行、および開発されているソフトウェアの全体的な技術的理解を持つことが含まれる。"}
{"number":"3.325","name":"Backus-Naur Form","name_ja":"バッカス・ナウア記法","definitions":[{"text":"formal meta-language used for defining the syntax of a language in a textual format","text_ja":"テキスト形式で言語の構文を定義するために使用される形式的メタ言語","reference":"ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.1"}]}
{"number":"3.326","name":"backward pass","name_ja":"後方パス","definitions":[{"text":"a critical path method technique for calculating the late start and late finish dates by working backward through the schedule model from the project end date","text_ja":"プロジェクト終了日からスケジュールモデルを通じて後方に作業することによって遅延開始日と遅延終了日を計算するクリティカルパス法の技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["schedule network analysis"],"confer_ja":["スケジュールネットワーク分析"]}
{"number":"3.327","name":"backward recovery","name_ja":"後方回復","definitions":[{"text":"reconstruction of a file to a given state by reversing all changes made to the file since it was in that state2. type of recovery in which a system, program, database, or other system resource is restored to a previous state in which it can perform required functions","text_ja":"ファイルがその状態にあった以降にファイルに加えられた全ての変更を逆転させることによってファイルを与えられた状態に再構成すること。2. システム、プログラム、データベース、またはその他のシステムリソースが要求される機能を実行できる以前の状態に復元される回復の一種"}],"confer":["forward recovery"],"confer_ja":["前方回復"]}
{"number":"3.328","name":"bag","name_ja":"バッグ","definitions":[{"text":"collection class whose members are unordered but in which duplicates are meaningful","text_ja":"メンバーが無順序であるが重複が意味を持つコレクションクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.11"}],"confer":["list","set"],"confer_ja":["リスト","集合"]}
{"number":"3.329","name":"ball grid array (BGA)","name_ja":"ボールグリッドアレイ（BGA）","definitions":[{"text":"surface-mounted integrated circuit package with multiple connections in a grid pattern on the bottom surface","text_ja":"底面にグリッドパターンで複数の接続を持つ表面実装集積回路パッケージ"}],"note":"provides more connections than on packages with connectors on the edges only","note_ja":"エッジのみにコネクタを持つパッケージよりも多くの接続を提供する"}
{"number":"3.330","name":"bar chart","name_ja":"バーチャート","definitions":[{"text":"a graphic display of schedule-related information. In the typical bar chart, schedule activities or work breakdown structure components are listed down the left side of the chart, dates are shown across the top, and activity durations are shown as date-placed horizontal bars","text_ja":"スケジュール関連情報のグラフィック表示。典型的なバーチャートでは、スケジュール活動または作業分解構造コンポーネントがチャートの左側に列挙され、日付が上部に示され、活動期間が日付に配置された水平バーとして示される","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["Gantt chart"],"confer_ja":["ガントチャート"]}
{"number":"3.331","name":"base address","name_ja":"ベースアドレス","definitions":[{"text":"address used as a reference point to which a relative address is added to determine the address of the storage location to be accessed","text_ja":"アクセスされる記憶場所のアドレスを決定するために相対アドレスが加算される参照点として使用されるアドレス"}],"confer":["indexed address","relative address","self-relative address"],"confer_ja":["インデックスアドレス","相対アドレス","自己相対アドレス"]}
{"number":"3.332","name":"base class","name_ja":"基底クラス","definitions":[{"text":"relationship between a template class CB of instances of B and template class CA of instances of A, where template A is an incremental modification of template B","text_ja":"テンプレートAがテンプレートBの漸進的修正である場合の、BのインスタンスのテンプレートクラスcbとAのインスタンスのテンプレートクラスCA間の関係","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.24"}],"confer":["derived class"],"confer_ja":["派生クラス"]}
{"number":"3.333","name":"base functional component (BFC)","name_ja":"基本機能コンポーネント（BFC）","definitions":[{"text":"an elementary unit of functional user requirements defined by and used by an FSM method for measurement purposes","text_ja":"測定目的でFSM手法によって定義され使用される機能ユーザー要求の基本単位","reference":"ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.1; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.1; ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.8"}],"alias":["functional service"],"alias_ja":["機能サービス"],"example":"A functional user requirement \"Maintain Customers\" consists of the following BFCs: \"Add a new customer\", \"Report Customer Purchases\", and \"Change Customer Details\". A collection of logically related business data is maintained by the software as \"Customer Details\".","example_ja":"機能ユーザー要求「顧客維持」は以下のBFCで構成される：「新規顧客追加」、「顧客購入報告」、「顧客詳細変更」。論理的に関連するビジネスデータの集合は「顧客詳細」としてソフトウェアによって維持される。"}
{"number":"3.334","name":"base functional component type (BFC type)","name_ja":"基本機能コンポーネントタイプ（BFCタイプ）","definitions":[{"text":"defined category of Base Functional Component","text_ja":"基本機能コンポーネントの定義されたカテゴリ","reference":"ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.2"}]}
{"number":"3.335","name":"base measure","name_ja":"基本測定","definitions":[{"text":"measure defined in terms of an attribute and the method for quantifying it","text_ja":"属性とそれを定量化する方法の観点から定義される測定","reference":"ISO/IEC/IEEE 15939:2017 Systems and software engineering — Measurement process, 3.3"}],"note":"A base measure is functionally independent of other measures.","note_ja":"基本測定は他の測定から機能的に独立している。"}
{"number":"3.336","name":"base practice (BP)","name_ja":"基本プラクティス（BP）","definitions":[{"text":"activity that, when consistently performed, contributes to achieving a specific process purpose","text_ja":"一貫して実行された場合に、特定のプロセス目的の達成に貢献する活動","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.2"}]}
{"number":"3.337","name":"base standard","name_ja":"基本標準","definitions":[{"text":"approved International Standard or Telecommunication Standardization Sector of the International Telecommunications Union (ITU-T) Recommendation","text_ja":"承認された国際標準または国際電気通信連合電気通信標準化部門（ITU-T）勧告","reference":"ISO/IEC TR 29110-1:2016 Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 1: Overview, 2.5"}]}
{"number":"3.338","name":"base value","name_ja":"基本値","definitions":[{"text":"input parameter value used in base choice testing that is normally selected based on being a representative or typical value for the parameter","text_ja":"基本選択テストで使用される入力パラメータ値で、通常パラメータの代表的または典型的な値であることに基づいて選択される","reference":"ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.3"}],"alias":["base choice"],"alias_ja":["基本選択"]}
{"number":"3.339","name":"baseline","name_ja":"ベースライン","definitions":[{"text":"formally approved version of a configuration item, regardless of media, formally designated and fixed at a specific time during the configuration item's life cycle","text_ja":"媒体に関係なく、構成項目のライフサイクル中の特定の時点で正式に指定され固定された、構成項目の正式に承認されたバージョン","reference":"ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.10"},{"text":"specification or product that has been formally reviewed and agreed upon, that thereafter serves as the basis for further development, and that can be changed only through formal change control procedures","text_ja":"正式にレビューされ合意された仕様または製品で、その後のさらなる開発の基礎として機能し、正式な変更管理手順によってのみ変更できる","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.6"},{"text":"agreement or result designated and fixed at a given time, from which changes require justification and approval","text_ja":"与えられた時点で指定され固定された合意または結果で、そこからの変更は正当化と承認を必要とする","reference":"IEEE 1012- 2012 IEEE Standard for System and Software Verification and Validation, 3.1"},{"text":"snapshot of the state of a service or individual configuration items at a point in time","text_ja":"ある時点でのサービスまたは個別の構成項目の状態のスナップショット","reference":"ISO/IEC 19770-1:2012 Information technology — Software asset management — Part 1: Processes and tiered assessment of conformance, 3.1"},{"text":"formally controlled and maintained set of data that serves as the basis for defining change [IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1] 6 [verb] to establish and approve a set of data","text_ja":"変更を定義する基礎として機能する正式に制御され維持されるデータの集合 [IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1] 6 [動詞] データの集合を確立し承認すること","reference":"IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1"},{"text":"the approved version of a work product that can be changed only through formal change control procedures and is used as a basis for comparison","text_ja":"正式な変更管理手順によってのみ変更でき、比較の基礎として使用される作業成果物の承認されたバージョン","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"approved version of a configuration item, regardless of media, formally designated and fixed at a specific time during the configuration item's life cycle","text_ja":"媒体に関係なく、構成項目のライフサイクル中の特定の時点で正式に指定され固定された構成項目の承認されたバージョン","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.11"}],"note":"Some baselines are project deliverables, while others provide the basis for further work. A baseline, together with all approved changes to the baseline, represents the current approved configuration. The term is thus used to refer to a particular version of a software configuration item that has been agreed on, e.g., as a stable base for further development or to mark a specific project milestone. In either case, any new baseline is agreed through the project's agreed change control procedures.","note_ja":"一部のベースラインはプロジェクト成果物であり、他は更なる作業の基礎を提供する。ベースラインは、ベースラインへの全ての承認された変更と共に、現在の承認された構成を表す。従って、この用語は、例えば更なる開発の安定した基盤として、または特定のプロジェクトマイルストーンを示すために合意されたソフトウェア構成項目の特定のバージョンを指すために使用される。どちらの場合でも、新しいベースラインはプロジェクトの合意された変更管理手順を通じて合意される。"}
{"number":"3.340","name":"baseline design","name_ja":"ベースライン設計","definitions":[{"text":"system design that has been agreed on by all stakeholders interested in the system development","text_ja":"システム開発に関心を持つ全てのステークホルダーによって合意されたシステム設計"}]}
{"number":"3.341","name":"baseline document","name_ja":"ベースライン文書","definitions":[{"text":"system or software document that defines a work product that has been placed under configuration management","text_ja":"構成管理下に置かれた作業成果物を定義するシステムまたはソフトウェア文書"}],"example":"design specifications, requirements specifications, system specifications","example_ja":"設計仕様書、要求仕様書、システム仕様書"}
{"number":"3.342","name":"baseline function point count","name_ja":"ベースライン機能ポイント数","definitions":[{"text":"application function point count taken of the functionality at a point in time, from which changes can be measured","text_ja":"ある時点での機能のアプリケーション機能ポイント数で、そこから変更を測定できる","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}]}
{"number":"3.343","name":"baseline management","name_ja":"ベースライン管理","definitions":[{"text":"in configuration management, the application of technical and administrative direction to designate the documents and changes to those documents that formally identify and establish baselines at specific times during the life cycle of a configuration item","text_ja":"構成管理において、構成項目のライフサイクル中の特定の時点でベースラインを正式に識別し確立する文書とその文書への変更を指定するための技術的および管理的指示の適用"}]}
{"number":"3.344","name":"basic engineering object","name_ja":"基本工学オブジェクト","definitions":[{"text":"engineering object that requires the support of a distributed infrastructure","text_ja":"分散インフラストラクチャのサポートを必要とする工学オブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.1"}],"alias":["BEO"],"alias_ja":["BEO"]}
{"number":"3.345","name":"basic flow","name_ja":"基本フロー","definitions":[{"text":"part of a use case that describes its most common implementation","text_ja":"ユースケースの最も一般的な実装を記述する部分"}],"alias":["basic path","happy day scenario"],"alias_ja":["基本パス","ハッピーデイシナリオ"],"note":"The basic flow is written assuming that no errors or alternatives exist.","note_ja":"基本フローは、エラーや代替案が存在しないことを仮定して記述される。"}
{"number":"3.346","name":"basic interworking facility","name_ja":"基本相互運用機能","definitions":[{"text":"set of service primitives which have a direct correspondence with computational signals which model computational operations","text_ja":"計算操作をモデル化する計算信号と直接対応するサービスプリミティブの集合","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.4"}]}
{"number":"3.347","name":"basic maturity level","name_ja":"基本成熟度レベル","definitions":[{"text":"lowest level of achievement in a scale of organizational process maturity","text_ja":"組織プロセス成熟度の尺度における最低レベルの達成度","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.3"}]}
{"number":"3.348","name":"basic process set","name_ja":"基本プロセスセット","definitions":[{"text":"set of processes, which ensure the achievement of the basic maturity level","text_ja":"基本成熟度レベルの達成を保証するプロセスの集合","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.3.4"}]}
{"number":"3.349","name":"basic profile","name_ja":"基本プロファイル","definitions":[{"text":"profile targeted at VSEs developing a single application by a single work team","text_ja":"単一の作業チームによって単一のアプリケーションを開発するVSEを対象としたプロファイル","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.14"}]}
{"number":"3.350","name":"basic symbol","name_ja":"基本記号","definitions":[{"text":"symbol used when the precise nature or form of, for example, the process or data media is not known or when it is not necessary to depict the actual medium","text_ja":"例えばプロセスやデータ媒体の正確な性質や形が分からない場合、または実際の媒体を描写する必要がない場合に使用される記号","reference":"ISO 5807:1985 Information processing — Documentation symbols and conventions for data, program and system flowcharts, program network charts and system resources charts, 3.1"}]}
{"number":"3.351","name":"basis of estimates","name_ja":"見積根拠","definitions":[{"text":"supporting documentation outlining the details used in establishing project estimates such as assumptions, constraints, level of detail, ranges, and confidence levels","text_ja":"仮定、制約、詳細レベル、範囲、信頼度レベルなど、プロジェクト見積の確立に使用される詳細を概説する補助文書","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.352","name":"basis set","name_ja":"基底集合","definitions":[{"text":"set of objects used to create a multiset","text_ja":"多重集合を作成するために使用されるオブジェクトの集合","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.4"}]}
{"number":"3.353","name":"batch","name_ja":"バッチ","definitions":[{"text":"pertaining to a system or mode of operation in which inputs are collected and processed all at one time, rather than being processed as they arrive, and a job, once started, proceeds to completion without additional input or user interaction","text_ja":"入力が到着時に処理されるのではなく、すべて一度に収集され処理され、ジョブが一度開始されると追加の入力やユーザー相互作用なしに完了まで進行するシステムまたは動作モードに関する"}],"confer":["conversational","interactive","online","real-time"],"confer_ja":["対話型","相互作用型","オンライン","リアルタイム"]}
{"number":"3.354","name":"bathtub curve","name_ja":"バスタブ曲線","definitions":[{"text":"graph of the number of failures in a system or component as a function of time","text_ja":"時間の関数としてのシステムまたはコンポーネントの故障数のグラフ"}],"note":"The name is derived from the usual shape of the graph: a period of decreasing failures (the early-failure period), followed by a relatively steady period (the constant-failure period), followed by a period of increasing failures (the wearout failure period).","note_ja":"名前は通常のグラフの形状に由来する：故障が減少する期間（初期故障期間）、その後比較的安定した期間（定常故障期間）、その後故障が増加する期間（摩耗故障期間）。"}
{"number":"3.355","name":"Bayes' rule","name_ja":"ベイズの定理","definitions":[{"text":"statistical formula that relates the conditional probability P (A  < /dev/null |  B) to the inverse conditional probability P (B | A)","text_ja":"条件付き確率P(A|B)と逆条件付き確率P(B|A)を関連付ける統計的公式"}]}
{"number":"3.356","name":"BCWP","name_ja":"BCWP","definitions":[{"text":"budgeted cost of work performed BCWS","text_ja":"実行作業の予算コスト BCWS"},{"text":"budgeted cost of work scheduled","text_ja":"予定作業の予算コスト"}]}
{"number":"3.357","name":"behavior","name_ja":"動作","definitions":[{"text":"observable activity of a system, measurable in terms of quantifiable effects on the environment whether arising from internal or external stimulus","text_ja":"内部または外部の刺激に起因するかどうかに関わらず、環境への定量化可能な効果の観点から測定可能な、システムの観察可能な活動","reference":"IEEE 1175.1-2002 (R2007) IEEE Guide for CASE Tool Interconnections-Classification and Description, 3.1"},{"text":"peculiar reaction of a thing under given circumstances","text_ja":"与えられた状況下での物の特有の反応","reference":"IEEE 1175.1-2002 (R2007) IEEE Guide for CASE Tool Interconnections-Classification and Description, 3.1"},{"text":"aspect of an instance's specification that is determined by the state-changing operations it can perform","text_ja":"それが実行できる状態変更操作によって決定されるインスタンスの仕様の側面","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.12"},{"text":"of an object, a collection of actions with a set of constraints on when they may occur","text_ja":"オブジェクトにおいて、それらがいつ発生しうるかの制約の集合を持つアクションの集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 8.7"},{"text":"aggregate of all unit responses to internal and external stimuli","text_ja":"内部および外部の刺激に対するすべてのユニット応答の集合","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.5"}]}
{"number":"3.358","name":"behavior pattern","name_ja":"動作パターン","definitions":[{"text":"relationship that maps a sequence of stimulus interactions to a sequence of response interactions","text_ja":"刺激相互作用の列を応答相互作用の列にマップする関係","reference":"IEEE 1175.4- 2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.6"}]}
{"number":"3.359","name":"behavior specification","name_ja":"動作仕様","definitions":[{"text":"structured collection of data that describes the potential variety of behavior possible from a system","text_ja":"システムから可能な動作の潜在的多様性を記述するデータの構造化された集合","reference":"IEEE 1175.1- 2002 (R2007) IEEE Guide for CASE Tool Interconnections-Classification and Description, 3.2"}]}
{"number":"3.360","name":"behavior state","name_ja":"動作状態","definitions":[{"text":"state which represents the partitioning of all unit behavior patterns into (possibly overlapping) subsets of behavior patterns that can be elicited from a unit at a particular point in time","text_ja":"特定の時点でユニットから引き出すことができる動作パターンの（可能には重複する）部分集合への全てのユニット動作パターンの分割を表す状態","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.7"}]}
{"number":"3.361","name":"behavioral compatibility","name_ja":"動作互換性","definitions":[{"text":"identical behavior of two objects, such that one object can replace the other with respect to a set of criteria without the environment being able to notice the difference in the objects' behavior on the basis of the set of criteria","text_ja":"2つのオブジェクトの同一の動作で、ある基準の集合に関して、環境がその基準の集合に基づいてオブジェクトの動作の違いに気づくことができることなく、あるオブジェクトが他のオブジェクトを置き換えることができる","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.4"}]}
{"number":"3.362","name":"benchmark","name_ja":"ベンチマーク","definitions":[{"text":"standard against which results can be measured or assessed","text_ja":"結果を測定または評価できる標準","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.3.2"},{"text":"procedure, problem, or test that can be used to compare systems or components to each other or to a standard","text_ja":"システムやコンポーネントを互いにまたは標準と比較するために使用できる手順、問題、またはテスト"},{"text":"reference point against which comparisons can be made","text_ja":"比較を行うことができる参照点","reference":"ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.1"}]}
{"number":"3.363","name":"benchmarking","name_ja":"ベンチマーキング","definitions":[{"text":"activity of comparing objects of interest to each other or against a benchmark to evaluate characteristic(s)","text_ja":"特性を評価するために関心のあるオブジェクトを互いにまたはベンチマークと比較する活動","reference":"ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.2"},{"text":"the comparison of actual or planned practices, such as processes and operations, to those of comparable organizations to identify best practices, generate ideas for improvement, and provide a basis for measuring performance","text_ja":"ベストプラクティスを識別し、改善のアイデアを生成し、性能測定の基礎を提供するために、プロセスや操作などの実際のまたは計画された実践を同等の組織のものと比較すること","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"note":"In the context of ISO/IEC 29155, the object of interest is IT project performance, and the characteristic is a particular aspect of an IT project such as productivity.","note_ja":"ISO/IEC 29155の文脈では、関心のあるオブジェクトはITプロジェクトの性能であり、特性は生産性などのITプロジェクトの特定の側面である。"}
{"number":"3.364","name":"benchmarking analyst","name_ja":"ベンチマーキング分析者","definitions":[{"text":"person or organization that conducts benchmarking activity","text_ja":"ベンチマーキング活動を実施する人または組織","reference":"ISO/IEC 29155-3:2015 Systems and software engineering — Information technology project performance benchmarking framework — Part 3: Guidance for reporting"}]}
{"number":"3.365","name":"benchmarking experience base","name_ja":"ベンチマーキング経験ベース","definitions":[{"text":"information store that contains the evaluation of the information products and the benchmarking activity, as well as any lessons learned during benchmarking and analysis","text_ja":"情報製品とベンチマーキング活動の評価、およびベンチマーキングと分析中に学んだ教訓を含む情報ストア","reference":"ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.3"}]}
{"number":"3.366","name":"benchmarking method","name_ja":"ベンチマーキング手法","definitions":[{"text":"logical sequence of general steps to describe the process of comparing one or more attributes against a reference attribute with respect to a specified scale","text_ja":"指定された尺度に関して1つ以上の属性を参照属性と比較するプロセスを記述する一般的なステップの論理的順序","reference":"ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.4"}]}
{"number":"3.367","name":"benchmarking report","name_ja":"ベンチマーキング報告書","definitions":[{"text":"document of the results of an instance of benchmarking","text_ja":"ベンチマーキングのインスタンスの結果の文書","reference":"ISO/IEC 29155-3:2015 Systems and software engineering — Information technology project performance benchmarking framework — Part 3: Guidance for reporting"}],"note":"Document usually consists of various formats (e.g. textual descriptions, numeric values, statistical charts and tables), and is exchanged via various media (e.g. electronic documents, electronic data set, printed documents, and embedded data within specific computer software).","note_ja":"文書は通常、様々な形式（例：テキスト記述、数値、統計チャート、表）で構成され、様々な媒体（例：電子文書、電子データセット、印刷文書、特定のコンピュータソフトウェア内の埋め込みデータ）を通じて交換される。"}
{"number":"3.368","name":"benchmarking user","name_ja":"ベンチマーキングユーザー","definitions":[{"text":"person or organization that utilizes the outcome of benchmarking","text_ja":"ベンチマーキングの結果を活用する人または組織","reference":"ISO/IEC 29155-1:2011 Systems and software engineering — Information technology project performance benchmarking framework — Part 1: Concepts and definitions, 2.5"}]}
{"number":"3.369","name":"benefit cost analysis","name_ja":"便益費用分析","definitions":[{"text":"in not-for-profit decision analysis, evaluating the desirability of an alternative on the ratio of the net benefits to the population to the net costs to the sponsor","text_ja":"非営利意思決定分析において、人口への純便益とスポンサーへの純費用の比率に基づいて代替案の望ましさを評価すること"}]}
{"number":"3.370","name":"BEO","name_ja":"BEO","definitions":[{"text":"Basic Engineering Object","text_ja":"基本工学オブジェクト","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview; ISO/IEC 19793:2015 Information technology — Open Distributed Processing — Use of UML for ODP system specifications, 4"}]}
{"number":"3.371","name":"beta test","name_ja":"ベータテスト","definitions":[{"text":"second stage of testing when a product is in limited production use","text_ja":"製品が限定的な本番使用にある場合のテストの第2段階"}],"alias":["beta testing"],"alias_ja":["ベータテスト"],"confer":["alpha testing"],"confer_ja":["アルファテスト"],"note":"often performed at a customer site","note_ja":"しばしば顧客サイトで実行される"}
{"number":"3.372","name":"BFC","name_ja":"BFC","definitions":[{"text":"base functional component [ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 4; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.1] BFC class","text_ja":"基本機能コンポーネント [ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 4; ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.1] BFCクラス"},{"text":"defined group of BFC types","text_ja":"BFCタイプの定義されたグループ","reference":"ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, 3.1"}]}
{"number":"3.373","name":"BFC Type","name_ja":"BFCタイプ","definitions":[{"text":"a defined category of BFCs","text_ja":"BFCの定義されたカテゴリ","reference":"ISO/IEC 14143-1:2007 Information technology — Software measurement — Functional size measurement; Part 1: Definition of concepts, 3.2"}],"example":"'External Inputs', 'External Outputs' and 'Logical Transactions', and data stores such as 'Internal Logical Files'","example_ja":"「外部入力」、「外部出力」、「論理トランザクション」、および「内部論理ファイル」などのデータストア"}
{"number":"3.374","name":"BGA","name_ja":"BGA","definitions":[{"text":"ball grid array","text_ja":"ボールグリッドアレイ"}]}
{"number":"3.375","name":"bidder conference","name_ja":"入札者会議","definitions":[{"text":"the meetings with prospective sellers prior to the preparation of a bid or proposal to ensure all prospective vendors have a clear and common understanding of the procurement. Also known as contractor conferences, vendor conferences, or pre-bid conferences","text_ja":"入札または提案の準備前に見込み売り手と行う会議で、全ての見込みベンダーが調達について明確で共通の理解を持つことを確実にする。契約者会議、ベンダー会議、または入札前会議としても知られる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.376","name":"bidirectional traceability","name_ja":"双方向トレーサビリティ","definitions":[{"text":"association among two or more logical entities that is discernible in either direction (to and from an entity)","text_ja":"どちらの方向（エンティティへおよびエンティティから）でも識別可能な2つ以上の論理エンティティ間の関連"}],"confer":["requirements traceability"],"confer_ja":["要求トレーサビリティ"]}
{"number":"3.377","name":"big-bang testing","name_ja":"ビッグバンテスト","definitions":[{"text":"type of integration testing in which software elements, hardware elements, or both are combined all at once into an overall system, rather than in stages","text_ja":"ソフトウェア要素、ハードウェア要素、またはその両方が段階的にではなく一度に全体システムに結合される統合テストの一種"}]}
{"number":"3.378","name":"bill of materials (BOM)","name_ja":"部品表（BOM）","definitions":[{"text":"documented formal hierarchical tabulation of the physical assemblies, subassemblies, and components needed to fabricate a product","text_ja":"製品を製造するために必要な物理的なアセンブリ、サブアセンブリ、およびコンポーネントの文書化された正式な階層的表"}]}
{"number":"3.379","name":"binary digit (bit)","name_ja":"2進数字（ビット）","definitions":[{"text":"unit of information that can be represented by either a zero or a one. 2 element of computer storage that can hold a unit of information as in (1)","text_ja":"0または1のいずれかで表現できる情報の単位。2. (1)のように情報の単位を保持できるコンピュータ記憶の要素"},{"text":"numeral used to represent one of the two digits in the binary numeration system; zero (0) or one (1)","text_ja":"2進記数法における2つの数字のうちの1つを表すために使用される数字；0（ゼロ）または1（イチ）"}]}
{"number":"3.380","name":"bind","name_ja":"束縛する","definitions":[{"text":"to assign a value to an identifier","text_ja":"識別子に値を割り当てること"}],"confer":["dynamic binding","static binding"],"confer_ja":["動的束縛","静的束縛"],"example":"to assign a value to a parameter or to assign an absolute address to a symbolic address in a computer program","example_ja":"パラメータに値を割り当てる、またはコンピュータプログラムにおいて記号アドレスに絶対アドレスを割り当てること"}
{"number":"3.381","name":"binder","name_ja":"バインダー","definitions":[{"text":"engineering object in a channel, which maintains a distributed binding between interacting basic engineering objects","text_ja":"相互作用する基本工学オブジェクト間の分散束縛を維持するチャネル内の工学オブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.10"}]}
{"number":"3.382","name":"binding","name_ja":"束縛","definitions":[{"text":"contractual context resulting from a given establishing behavior","text_ja":"与えられた確立動作から生じる契約的文脈","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.5.2"},{"text":"task to make a decision on relevant variants, which will be application assets, from domain assets using the domain variability model and from application assets using the application variability model","text_ja":"ドメイン可変性モデルを使用してドメイン資産から、およびアプリケーション可変性モデルを使用してアプリケーション資産から、アプリケーション資産となる関連する変種について決定を行うタスク","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.8"}],"confer":["assignment"],"confer_ja":["割り当て"]}
{"number":"3.383","name":"binding behavior","name_ja":"束縛動作","definitions":[{"text":"establishing behavior between two or more interfaces, and hence between their supporting objects","text_ja":"2つ以上のインターフェース間、したがってそれらを支援するオブジェクト間の確立動作","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.5.1"}]}
{"number":"3.384","name":"binding endpoint identifier","name_ja":"束縛エンドポイント識別子","definitions":[{"text":"identifier, in the naming context of a capsule, used by a basic engineering object to select one of the bindings in which it is involved, for the purpose of interaction","text_ja":"カプセルの命名文脈における識別子で、相互作用の目的で基本工学オブジェクトがそれが関与する束縛の1つを選択するために使用される","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.15"}],"example":"a memory address (for a data structure representing an engineering interface)","example_ja":"メモリアドレス（工学インターフェースを表現するデータ構造の）","note":"The same form of binding endpoint identifier can be used, whether the binding involved is either local or distributed.","note_ja":"関与する束縛がローカルまたは分散のいずれであっても、同じ形式の束縛エンドポイント識別子を使用できる。"}
{"number":"3.385","name":"binding object","name_ja":"束縛オブジェクト","definitions":[{"text":"computational object which supports a binding between a set of other computational objects","text_ja":"他の計算オブジェクトの集合間の束縛をサポートする計算オブジェクト","reference":"ISO/IEC 10746- 3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.14"}]}
{"number":"3.386","name":"binding precondition","name_ja":"束縛前条件","definitions":[{"text":"set of conditions required for the successful execution of a binding behavior","text_ja":"束縛動作の成功した実行に必要な条件の集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.5.3"}]}
{"number":"3.387","name":"binding time","name_ja":"束縛時間","definitions":[{"text":"moment of variability resolution","text_ja":"可変性解決の瞬間","reference":"ISO/IEC 26555:2015 Software and systems engineering — Tools and methods for product line technical management, 3.3"}]}
{"number":"3.388","name":"bit","name_ja":"ビット","definitions":[{"text":"either of the digits 0 or 1 when used in the binary numeration system","text_ja":"2進記数法で使用される場合の数字0または1のいずれか","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"},{"text":"binary digit","text_ja":"2進数字"},{"text":"built-in test","text_ja":"組み込みテスト","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.389","name":"bit steering","name_ja":"ビットステアリング","definitions":[{"text":"microprogramming technique in which the meaning of a field in a microinstruction is dependent on the value of another field in the microinstruction","text_ja":"マイクロ命令内のフィールドの意味がマイクロ命令内の別のフィールドの値に依存するマイクロプログラミング技法"}],"alias":["immediate control"],"alias_ja":["即座制御"],"confer":["residual control","two-level encoding"],"confer_ja":["残留制御","2レベル符号化"]}
{"number":"3.390","name":"black box","name_ja":"ブラックボックス","definitions":[{"text":"system or component whose inputs, outputs, and general function are known but whose contents or implementation are unknown or irrelevant","text_ja":"入力、出力、一般的な機能は知られているが、内容や実装が未知または無関係なシステムまたはコンポーネント"},{"text":"pertaining to an approach that treats a system or component whose inputs, outputs, and general function are known but whose contents or implementation are unknown or irrelevant","text_ja":"入力、出力、一般的な機能は知られているが、内容や実装が未知または無関係なシステムまたはコンポーネントを扱うアプローチに関する"}],"confer":["glass box"],"confer_ja":["グラスボックス"]}
{"number":"3.391","name":"block","name_ja":"ブロック","definitions":[{"text":"group of contiguous storage locations, computer program statements, records, words, characters, or bits that are treated as a unit","text_ja":"単位として扱われる連続した記憶場所、コンピュータプログラム文、レコード、語、文字、またはビットのグループ"},{"text":"to form a group","text_ja":"グループを形成すること"}],"confer":["block-structured language","delimiter"],"confer_ja":["ブロック構造言語","区切り文字"]}
{"number":"3.392","name":"block diagram","name_ja":"ブロック図","definitions":[{"text":"diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks","text_ja":"主要な部分または機能がブロックによって表現され、ブロックの関係を示す線で接続されたシステムの図","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"},{"text":"diagram of a system, computer, or device in which the principal parts are represented by suitably annotated geometrical figures to show both the functions of the parts and their functional relationships","text_ja":"主要な部分が適切に注釈された幾何学図形によって表現され、部分の機能とそれらの機能的関係の両方を示すシステム、コンピュータ、またはデバイスの図"}],"alias":["configuration diagram","system resources chart"],"alias_ja":["構成図","システムリソースチャート"],"confer":["box diagram","bubble chart","flowchart","graph","input-process-output chart","structure chart"],"confer_ja":["ボックス図","バブルチャート","フローチャート","グラフ","入力-処理-出力チャート","構造チャート"]}
{"number":"3.393","name":"block-structured language","name_ja":"ブロック構造言語","definitions":[{"text":"design or programming language in which sequences of statements, called blocks, are defined, usually with begin and end delimiters, and variables or labels defined in one block are not recognized outside that block","text_ja":"ブロックと呼ばれる文の列が定義される設計またはプログラミング言語で、通常beginとendの区切り文字を持ち、1つのブロックで定義された変数やラベルはそのブロック外では認識されない"}],"confer":["structured programming language"],"confer_ja":["構造化プログラミング言語"],"example":"Ada, ALGOL, PL/I","example_ja":"Ada、ALGOL、PL/I"}
{"number":"3.394","name":"blocking factor","name_ja":"ブロック化因子","definitions":[{"text":"number of records, words, characters, or bits in a block","text_ja":"ブロック内のレコード、語、文字、またはビットの数"}]}
{"number":"3.395","name":"BMT","name_ja":"BMT","definitions":[{"text":"Bench Mark Test","text_ja":"ベンチマークテスト","reference":"ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 8.2"}]}
{"number":"3.396","name":"body metadata","name_ja":"本体メタデータ","definitions":[{"text":"elements in the body of an HTML document providing administrative and/or navigational facilities for the user or administrator","text_ja":"ユーザーまたは管理者に管理的および/またはナビゲーション機能を提供するHTML文書の本体内の要素","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.3"}]}
{"number":"3.397","name":"body of knowledge","name_ja":"知識体系","definitions":[{"text":"collection of knowledge items or areas generally agreed to be essential to understanding a particular subject","text_ja":"特定の主題の理解に不可欠であると一般的に合意されている知識項目または領域の集合","reference":"ISO/IEC 24773:2008 Software engineering -Certification of software engineering professionals -Comparison framework, 3.1"}]}
{"number":"3.398","name":"BOM","name_ja":"BOM","definitions":[{"text":"bill of materials","text_ja":"部品表"}]}
{"number":"3.399","name":"Boolean expression","name_ja":"ブール式","definitions":[{"text":"expression that evaluates to true or false","text_ja":"真または偽に評価される式","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.26.1"}]}
{"number":"3.400","name":"Boolean signature","name_ja":"ブール署名","definitions":[{"text":"signature where one of the sorts is Bool, corresponding to the carrier Boolean in any associated algebra, and one of the constants is true sub Bool, corresponding to the value true in the algebra","text_ja":"ソートの1つが任意の関連代数における担体Booleanに対応するBoolであり、定数の1つが代数における値trueに対応するtrue sub Boolである署名","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.22.1"}]}
{"number":"3.401","name":"boot","name_ja":"ブート","definitions":[{"text":"to initialize a computer system by clearing memory and reloading the operating system","text_ja":"メモリをクリアしオペレーティングシステムを再ロードすることによってコンピュータシステムを初期化すること"}],"note":"derived from bootstrap","note_ja":"bootstrapに由来する"}
{"number":"3.402","name":"boot mode","name_ja":"ブートモード","definitions":[{"text":"initialized mode of program operations when a computer is turned on","text_ja":"コンピュータの電源が入れられた時のプログラム動作の初期化モード"}]}
{"number":"3.403","name":"bootstrap","name_ja":"ブートストラップ","definitions":[{"text":"short computer program that is permanently resident or easily loaded into a computer and whose execution brings a larger program, such as an operating system or its loader, into memory","text_ja":"コンピュータに常駐しているか容易にロードされる短いコンピュータプログラムで、その実行によってオペレーティングシステムやそのローダーなどのより大きなプログラムをメモリに持ち込む"},{"text":"to use a program to bring up a larger program, such as an operating system","text_ja":"オペレーティングシステムなどのより大きなプログラムを立ち上げるためにプログラムを使用すること"}]}
{"number":"3.404","name":"bootstrap loader","name_ja":"ブートストラップローダー","definitions":[{"text":"short computer program used to load a bootstrap","text_ja":"ブートストラップをロードするために使用される短いコンピュータプログラム"}]}
{"number":"3.405","name":"bottom-up","name_ja":"ボトムアップ","definitions":[{"text":"pertaining to an activity that starts with the lowest-level components of a hierarchy and proceeds through progressively higher-levels","text_ja":"階層の最低レベルのコンポーネントから開始し、段階的により高いレベルに進む活動に関する"},{"text":"pertaining to a method or procedure that starts at the lowest level of abstraction and proceeds towards the highest level","text_ja":"最低の抽象化レベルから開始し最高レベルに向かって進む方法または手順に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["top-down","critical piece first"],"confer_ja":["トップダウン","重要部分優先"],"example":"bottom-up design, bottom-up testing","example_ja":"ボトムアップ設計、ボトムアップテスト"}
{"number":"3.406","name":"bottom-up design","name_ja":"ボトムアップ設計","definitions":[{"text":"design approach in which low-level pieces of a system are combined into an overall design.","text_ja":"システムの低レベル部品を組み合わせて全体設計にする設計アプローチ"},{"text":"process of designing a system by identifying low-level components, designing each component separately, and then designing a structure to integrate the low-level components into larger and larger subsystems until the design is finishe","text_ja":"低レベルコンポーネントを識別し、各コンポーネントを個別に設計し、その後設計が完成するまで低レベルコンポーネントをより大きなサブシステムに統合する構造を設計することによってシステムを設計するプロセス"}]}
{"number":"3.407","name":"bottom-up estimating","name_ja":"ボトムアップ見積","definitions":[{"text":"a method of estimating project duration or cost by aggregating the estimates of the lower-level components of the work breakdown structure (WBS)","text_ja":"作業分解構造（WBS）の下位レベルコンポーネントの見積を集計することによってプロジェクト期間またはコストを見積る方法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.408","name":"boundary","name_ja":"境界","definitions":[{"text":"conceptual interface between the software under study and its users","text_ja":"研究中のソフトウェアとそのユーザー間の概念的インターフェース","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.9; ISO/IEC 29881:2010 Information technology — Software and systems engineering — FiSMA 1.1 functional size measurement method, 3.2"},{"text":"conceptual interface between the software being measured and its functional users","text_ja":"測定されるソフトウェアとその機能ユーザー間の概念的インターフェース","reference":"ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 2.3"},{"text":"collection of all interface ports between a unit and its environment, characterized by the input and output interactions that it allows","text_ja":"ユニットとその環境間の全てのインターフェースポートの集合で、それが許可する入力および出力相互作用によって特徴付けられる","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.8"}],"note":"The boundary provides the measurement analyst(s) with a solid delimiter to distinguish, without ambiguity, what is included inside the measured software from what is part of the measured software's operating environment.","note_ja":"境界は、測定されるソフトウェア内に含まれるものと測定されるソフトウェアの動作環境の一部であるものを曖昧さなく区別するための堅固な区切り文字を測定分析者に提供する。"}
{"number":"3.409","name":"boundary arrow","name_ja":"境界矢印","definitions":[{"text":"arrow with one end (source or use) not connected to any box in a diagram","text_ja":"図内のどのボックスにも接続されていない一端（ソースまたは使用）を持つ矢印","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.14"}],"confer":["internal arrow"],"confer_ja":["内部矢印"]}
{"number":"3.410","name":"boundary ICOM code","name_ja":"境界ICOMコード","definitions":[{"text":"ICOM code that maps an untunneled boundary arrow in a child diagram to an arrow attached to the parent box that is detailed by that diagram","text_ja":"子図内のトンネル化されていない境界矢印を、その図によって詳述される親ボックスに接続された矢印にマップするICOMコード","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.15"}]}
{"number":"3.411","name":"boundary value","name_ja":"境界値","definitions":[{"text":"data value that corresponds to a minimum or maximum input, internal, or output value specified for a system or component","text_ja":"システムまたはコンポーネントに指定された最小または最大の入力、内部、または出力値に対応するデータ値"}],"confer":["stress testing"],"confer_ja":["ストレステスト"]}
{"number":"3.412","name":"box","name_ja":"ボックス","definitions":[{"text":"rectangle containing a box name, a box number, and possibly a box detail reference and representing a function in a diagram","text_ja":"ボックス名、ボックス番号、および可能にはボックス詳細参照を含み、図内の機能を表現する長方形","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.16"}]}
{"number":"3.413","name":"box detail reference","name_ja":"ボックス詳細参照","definitions":[{"text":"square enclosure encompassing a box number, which indicates that the box is decomposed or detailed by a child diagram","text_ja":"ボックス番号を囲む正方形の囲いで、ボックスが子図によって分解または詳述されることを示す","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.17"}]}
{"number":"3.414","name":"box diagram","name_ja":"ボックス図","definitions":[{"text":"control flow diagram consisting of a rectangle that is subdivided to show sequential steps, if-then-els conditions, repetition, and case conditions","text_ja":"順次ステップ、if-then-else条件、繰り返し、およびcase条件を示すために細分化された長方形からなる制御フロー図"}],"alias":["Chapin chart","Nassi-Shneiderman char"],"alias_ja":["チャピンチャート","ナッシ・シュナイダーマンチャート"],"confer":["block diagram","bubble chart","flowchart","graph","input-process-output chart","program structure diagram","structure chart"],"confer_ja":["ブロック図","バブルチャート","フローチャート","グラフ","入力-処理-出力チャート","プログラム構造図","構造チャート"]}
{"number":"3.415","name":"box ICOM code","name_ja":"ボックスICOMコード","definitions":[{"text":"ICOM code that maps a tunneled boundary arrow to an arrow attached to some ancestral box","text_ja":"トンネル化された境界矢印を何らかの祖先ボックスに接続された矢印にマップするICOMコード","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.18"}]}
{"number":"3.416","name":"box name","name_ja":"ボックス名","definitions":[{"text":"verb or verb phrase placed inside a box that names the modeled function","text_ja":"モデル化された機能に名前を付けるためにボックス内に配置される動詞または動詞句","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.19"}],"confer":["function name"],"confer_ja":["機能名"],"note":"A box takes as its box name the function name of the function represented by the box.","note_ja":"ボックスは、ボックスによって表現される機能の機能名をボックス名として取る。"}
{"number":"3.417","name":"box number","name_ja":"ボックス番号","definitions":[{"text":"single digit (0, 1, 2, ..., 9) placed in the lower right corner of a box to uniquely identify that box in a diagram","text_ja":"図内でそのボックスを一意に識別するためにボックスの右下角に置かれる単一の数字（0、1、2、...、9）","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.20"}],"note":"The only box that can be numbered 0 is the box that represents the A0 function in A-0 and A-1 context diagram","note_ja":"0の番号を付けることができる唯一のボックスは、A-0およびA-1文脈図でA0機能を表現するボックスである"}
{"number":"3.418","name":"BP","name_ja":"BP","definitions":[{"text":"base practice","text_ja":"基本プラクティス","reference":"ISO/IEC TR 29110-3-1:2015 Systems and software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 3-1: Assessment Guide, 4.2"}]}
{"number":"3.419","name":"brainstorming","name_ja":"ブレインストーミング","definitions":[{"text":"a general data gathering and creativity technique that can be used to identify risks, ideas, or solutions to issues by using a group of team members or subject-matter experts","text_ja":"チームメンバーまたは主題専門家のグループを使用してリスク、アイデア、または問題の解決策を識別するために使用できる一般的なデータ収集および創造性技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.420","name":"branch","name_ja":"分岐","definitions":[{"text":"computer program construct in which one of two or more alternative sets of program statements is selected for execution","text_ja":"2つ以上の代替プログラム文の集合のうち1つが実行のために選択されるコンピュータプログラム構造"},{"text":"point in a computer program at which one of two or more alternative sets of program statements is selected for execution","text_ja":"2つ以上の代替プログラム文の集合のうち1つが実行のために選択されるコンピュータプログラム内の点"},{"text":"junction at which a root arrow segment (going from source to use) divides into two or more arrow segments","text_ja":"根矢印セグメント（ソースから使用へ向かう）が2つ以上の矢印セグメントに分割される接合点","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.21"},{"text":"to perform the selection in (1)","text_ja":"(1)での選択を実行すること"},{"text":"any of the alternative sets of program statements in (1)","text_ja":"(1)における代替プログラム文の集合のいずれか"},{"text":"set of evolving source file versions","text_ja":"進化するソースファイルバージョンの集合","reference":"ISO/IEC TR 19759:2016, Software Engineering -- Guide to the Software Engineering Body of Knowledge (SWEBOK), 6.1.3"},{"text":"deviation from the main development line for a configuration item, which allows different persons to work on the same item at the same time","text_ja":"構成項目の主開発ラインからの逸脱で、異なる人が同時に同じ項目で作業することを可能にする","reference":"ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.3"}],"confer":["case","jump","go to","if-then-else"],"confer_ja":["ケース","ジャンプ","goto","if-then-else"],"note":"Every branch is identified by a tag. Often, a branch identifies the file versions that have been or will be released as a product release. It can denote unbundling of arrow meaning, i.e., the separation of object types from an object type set. Also refers to an arrow segment into which a root arrow segment has been divided.","note_ja":"すべての分岐はタグによって識別される。しばしば、分岐は製品リリースとしてリリースされたまたはリリースされるファイルバージョンを識別する。これは矢印意味のアンバンドリング、すなわちオブジェクトタイプ集合からのオブジェクトタイプの分離を示すことができる。また、根矢印セグメントが分割された矢印セグメントも指す。"}
{"number":"3.421","name":"branch testing","name_ja":"分岐テスト","definitions":[{"text":"testing designed to execute each outcome of each decision point in a computer program","text_ja":"コンピュータプログラム内の各決定点の各結果を実行するように設計されたテスト"}],"confer":["path testing","statement testing"],"confer_ja":["パステスト","文テスト"]}
{"number":"3.422","name":"breadcrumb trail","name_ja":"パンくずリスト","definitions":[{"text":"navigational aid with a displayed series of hyperlinks which lead from the home page to the current page, allowing the user to return to previously viewed pages.","text_ja":"ホームページから現在のページまでの一連のハイパーリンクが表示されたナビゲーション支援で、ユーザーが以前に閲覧したページに戻ることを可能にする","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.4"}]}
{"number":"3.423","name":"break-even analysis","name_ja":"損益分岐点分析","definitions":[{"text":"analysis of two or more objective functions to find where, if at all, they have the same value","text_ja":"2つ以上の目的関数を分析して、それらが同じ値を持つ場所があるかどうか、あるとすればどこかを見つけること"}]}
{"number":"3.424","name":"breakpoint","name_ja":"ブレークポイント","definitions":[{"text":"point in a computer program at which execution can be suspended to permit manual or automated monitoring of program performance or results","text_ja":"プログラムの性能や結果の手動または自動監視を可能にするために実行を停止できるコンピュータプログラム内の点"}],"note":"Types include code breakpoint, data breakpoint, dynamic breakpoint, epilog breakpoint, programmable breakpoint, prolog breakpoint, static breakpoint. A breakpoint is said to be set when both a point in the program and an event that will cause suspension of execution at that point are defined; it is said to be initiated when program execution is suspended.","note_ja":"種類には、コードブレークポイント、データブレークポイント、動的ブレークポイント、エピログブレークポイント、プログラム可能ブレークポイント、プロログブレークポイント、静的ブレークポイントが含まれる。ブレークポイントは、プログラム内の点とその点での実行停止を引き起こすイベントの両方が定義された時に設定されたと言われ、プログラム実行が停止された時に開始されたと言われる。"}
{"number":"3.425","name":"browser","name_ja":"ブラウザ","definitions":[{"text":"application allowing a person to retrieve and read hypertext, to view the contents of hypertext nodes (Web pages), to navigate from one Web page to another, and to interact with the content, such as changing the visual appearance of the displayed content","text_ja":"人がハイパーテキストを取得して読み、ハイパーテキストノード（Webページ）の内容を表示し、あるWebページから別のWebページへナビゲートし、表示コンテンツの視覚的外観を変更するなど、コンテンツと相互作用することを可能にするアプリケーション","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information, 4.5"}]}
{"number":"3.426","name":"BRS","name_ja":"BRS","definitions":[{"text":"business requirements specification","text_ja":"ビジネス要求仕様書","reference":"ISO/IEC/IEEE 29148:2011 Systems and software engineering — Life cycle processes — Requirements engineering, 4.2"}]}
{"number":"3.427","name":"bubble chart","name_ja":"バブルチャート","definitions":[{"text":"data flow, data structure, or other diagram in which entities are depicted with circles (bubbles) and relationships are represented by links drawn between the circles","text_ja":"エンティティが円（バブル）で描かれ、関係が円の間に描かれたリンクで表現されるデータフロー、データ構造、またはその他の図"}],"confer":["block diagram","box diagram","flowchart","graph","input-process-output chart","structure chart"],"confer_ja":["ブロック図","ボックス図","フローチャート","グラフ","入力-処理-出力チャート","構造チャート"]}
{"number":"3.428","name":"budget","name_ja":"予算","definitions":[{"text":"the approved estimate for the project or any work breakdown structure component or any schedule activity","text_ja":"プロジェクトまたは任意の作業分解構造コンポーネントまたは任意のスケジュール活動の承認された見積","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["estimate"],"confer_ja":["見積"],"note":"often used also to refer to work effort as well as, or instead of, money.","note_ja":"しばしば金銭と同様に、または金銭の代わりに、作業努力を指すためにも使用される。"}
{"number":"3.429","name":"budget at completion (BAC)","name_ja":"完成時予算（BAC）","definitions":[{"text":"the sum of all the budgets established for the work to be performed","text_ja":"実行される作業のために確立されたすべての予算の合計","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.430","name":"buffer","name_ja":"バッファ","definitions":[{"text":"device or storage area used to store data temporarily to compensate for differences in rates of data flow, time of occurrence of events, or amounts of data that can be handled by the devices or processes involved in the transfer or use of the data","text_ja":"データの転送または使用に関与するデバイスまたはプロセスが処理できるデータフローの速度、イベントの発生時間、またはデータ量の違いを補償するためにデータを一時的に格納するために使用されるデバイスまたは記憶領域"},{"text":"routine that accomplishes the objectives in (1)","text_ja":"(1)の目的を達成するルーチン"},{"text":"to allocate, schedule, or use devices or storage areas as in (1)","text_ja":"(1)のようにデバイスまたは記憶領域を割り当て、スケジュール、または使用すること"}]}
{"number":"3.431","name":"build","name_ja":"ビルド","definitions":[{"text":"operational version of a system or component that incorporates a specified subset of the capabilities that the final product will provide","text_ja":"最終製品が提供する能力の指定された部分集合を組み込んだシステムまたはコンポーネントの動作バージョン","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.1; ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"},{"text":"process of generating (archiving) an executable and testable system from source versions or baselines","text_ja":"ソースバージョンまたはベースラインから実行可能でテスト可能なシステムを生成（アーカイブ）するプロセス","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.1; ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.4"},{"text":"to perform the steps required to produce an instance of the product","text_ja":"製品のインスタンスを生成するために必要なステップを実行すること","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.1"}],"note":"In software, this means processing source files to derive target files. In hardware, this means assembling a physical object. The build needs to compile and link the various versions in the correct order. The build tools can be integrated into a configuration management tool.","note_ja":"ソフトウェアでは、これはソースファイルを処理してターゲットファイルを導出することを意味する。ハードウェアでは、これは物理的オブジェクトを組み立てることを意味する。ビルドは、様々なバージョンを正しい順序でコンパイルしリンクする必要がある。ビルドツールは構成管理ツールに統合できる。"}
{"number":"3.432","name":"build process","name_ja":"ビルドプロセス","definitions":[{"text":"process of transforming project code base into usable applications","text_ja":"プロジェクトコードベースを使用可能なアプリケーションに変換するプロセス","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}]}
{"number":"3.433","name":"built-in class","name_ja":"組み込みクラス","definitions":[{"text":"class that is a primitive in the IDEF1X metamodel","text_ja":"IDEF1Xメタモデルにおけるプリミティブであるクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.13"}]}
{"number":"3.434","name":"built-in random access memory (RAM)","name_ja":"組み込みランダムアクセスメモリ（RAM）","definitions":[{"text":"RAM embedded in a microcontroller unit (MCU) chip","text_ja":"マイクロコントローラユニット（MCU）チップに埋め込まれたRAM"}]}
{"number":"3.435","name":"built-in read only memory","name_ja":"組み込み読み取り専用メモリ","definitions":[{"text":"read-only memory embedded in a microcontroller unit (MCU) chi","text_ja":"マイクロコントローラユニット（MCU）チップに埋め込まれた読み取り専用メモリ"}],"alias":["built-in RO"],"alias_ja":["組み込みRO"]}
{"number":"3.436","name":"bundle","name_ja":"バンドル","definitions":[{"text":"grouping of products which is the result of a marketing/licensing strategy to sell entitlements to multiple products as one purchased item","text_ja":"複数の製品への利用権を1つの購入項目として販売するマーケティング/ライセンス戦略の結果である製品のグループ化","reference":"ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.5"},{"text":"arrow segment that collects multiple meanings into a single construct or abstraction, i.e., an arrow segment that represents an object type set that includes more than one object type","text_ja":"複数の意味を単一の構造または抽象化に収集する矢印セグメント、すなわち1つ以上のオブジェクトタイプを含むオブジェクトタイプ集合を表現する矢印セグメント","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.22"},{"text":"to combine separate arrow meanings into a composite arrow meaning, expressed by joining arrow segments, i.e., the inclusion of multiple object types into an object type set","text_ja":"別個の矢印意味を複合矢印意味に結合すること、矢印セグメントを結合することによって表現される、すなわちオブジェクトタイプ集合への複数のオブジェクトタイプの包含","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.22"}],"note":"A bundle can be referred to as a suite, if the products are closely related and typically integrated (such as an office suite containing a spreadsheet, word processor, presentation and other related items). Bundles can also refer to software titles that are less closely related such as a game, a virus scanner and a utility bundled together with a new computer, or to groups of entitlements, such as multiple entitlements for a backup software product.","note_ja":"製品が密接に関連し通常統合されている場合（スプレッドシート、ワードプロセッサ、プレゼンテーション、その他の関連項目を含むオフィススイートなど）、バンドルはスイートと呼ばれることがある。バンドルは、新しいコンピュータと一緒にバンドルされたゲーム、ウィルススキャナー、ユーティリティなど、あまり密接に関連していないソフトウェアタイトルや、バックアップソフトウェア製品の複数の利用権などの利用権のグループを指すこともある。"}
{"number":"3.437","name":"burndown","name_ja":"バーンダウン","definitions":[{"text":"an indicator of the work completed and an estimate of remaining work to be completed or remaining effort needed to complete a product development iteration cycle. Work is measured as all work done to deliver story points, stories, features, functions, function points, user stories, use cases, or requirements during a product development iteration.","text_ja":"完了した作業および製品開発イテレーションサイクルを完了するために完了すべき残り作業または必要な残り努力の指標。作業は、製品開発イテレーション中にストーリーポイント、ストーリー、機能、機能、機能ポイント、ユーザーストーリー、ユースケース、または要求を提供するために行われたすべての作業として測定される","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}],"confer":["burnup"],"confer_ja":["バーンアップ"]}
{"number":"3.438","name":"burndown chart","name_ja":"バーンダウンチャート","definitions":[{"text":"document that records project status, usually showing tasks completed against total number of tasks","text_ja":"プロジェクトの状況を記録する文書で、通常は総タスク数に対する完了タスクを示す","reference":"ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.4"}]}
{"number":"3.439","name":"burndown rate","name_ja":"バーンダウン率","definitions":[{"text":"the number of software story points, features, functions, user stories, use cases, or requirements completed per work unit (week or iteration)","text_ja":"作業単位（週またはイテレーション）あたりに完了したソフトウェアストーリーポイント、機能、機能、ユーザーストーリー、ユースケース、または要求の数","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}],"confer":["velocity"],"confer_ja":["ベロシティ"]}
{"number":"3.440","name":"burnup","name_ja":"バーンアップ","definitions":[{"text":"an indicator of the number of story points, features, functions, user stories, use cases, or requirements completed and the work remaining or remaining effort needed to complete a product development iteration cycle. Work is measured as all work done to deliver story points, features, functions, user stories, use cases, or requirements during a product development iteration.","text_ja":"完了したストーリーポイント、機能、機能、ユーザーストーリー、ユースケース、または要求の数および製品開発イテレーションサイクルを完了するために必要な残り作業または残り努力の指標。作業は、製品開発イテレーション中にストーリーポイント、機能、機能、ユーザーストーリー、ユースケース、または要求を提供するために行われたすべての作業として測定される","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}],"confer":["burndown"],"confer_ja":["バーンダウン"]}
{"number":"3.441","name":"bus","name_ja":"バス","definitions":[{"text":"data communication path in a computer or system","text_ja":"コンピュータまたはシステムにおけるデータ通信パス"}]}
{"number":"3.442","name":"business case","name_ja":"ビジネスケース","definitions":[{"text":"a documented economic feasibility study used to establish validity of the benefits of a selected component lacking sufficient definition and that is used as a basis for the authorization of further project management activities","text_ja":"十分な定義を欠く選択されたコンポーネントの利益の妥当性を確立するために使用され、さらなるプロジェクト管理活動の承認の基礎として使用される文書化された経済的実行可能性研究","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.443","name":"business information management","name_ja":"ビジネス情報管理","definitions":[{"text":"domain responsible for all of the tasks and activities that are aimed at supporting the end users in the use of the application and at acting as the customer of the IT organizations","text_ja":"アプリケーションの使用におけるエンドユーザーの支援を目的とし、IT組織の顧客として行動することを目的とした全てのタスクと活動に責任を持つ領域","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.8"}],"note":"Business information management represents the business as the customer organization or client of the application management and IT infrastructure management organizations in maintaining the functionality of the information provisioning and the information systems. It is the demand side of the information provisioning. An information system can have non-automated elements such as forms and user guides. Those elements are usually maintained by the business information management organization.","note_ja":"ビジネス情報管理は、情報提供と情報システムの機能を維持する上で、アプリケーション管理とITインフラストラクチャ管理組織の顧客組織またはクライアントとしてのビジネスを表現する。これは情報提供の需要側である。情報システムはフォームやユーザーガイドなどの非自動化要素を持つことができる。これらの要素は通常、ビジネス情報管理組織によって維持される。"}
{"number":"3.444","name":"business objective","name_ja":"ビジネス目標","definitions":[{"text":"strategy designed by senior management to ensure an organization's continued existence and enhance its profitability, market share, and other factors influencing the organization's success","text_ja":"組織の継続的存在を確保し、その収益性、市場シェア、および組織の成功に影響するその他の要因を向上させるために上級管理者によって設計された戦略"}]}
{"number":"3.445","name":"business process","name_ja":"ビジネスプロセス","definitions":[{"text":"partially ordered set of enterprise activities that can be executed to achieve some desired end-result in pursuit of a given objective of an organization","text_ja":"組織の与えられた目標の追求において何らかの望ましい最終結果を達成するために実行できる企業活動の部分的に順序付けられた集合"}]}
{"number":"3.446","name":"business value","name_ja":"ビジネス価値","definitions":[{"text":"a concept that is unique to each organization and includes tangible and intangible elements. Through the effective use of project, program, and portfolio management disciplines, organizations will possess the ability to employ reliable, established processes to meet enterprise objectives and obtain greater business value from their investments.","text_ja":"各組織に固有の概念で、有形および無形の要素を含む。プロジェクト、プログラム、ポートフォリオ管理規律の効果的な使用を通じて、組織は企業目標を満たし投資からより大きなビジネス価値を得るために信頼性のある確立されたプロセスを採用する能力を持つであろう","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.447","name":"busy","name_ja":"ビジー","definitions":[{"text":"pertaining to a system or component that is operational, in service, and in use","text_ja":"動作中で、稼働中で、使用中のシステムまたはコンポーネントに関する"}],"confer":["down","idle","up"],"confer_ja":["ダウン","アイドル","アップ"]}
{"number":"3.448","name":"busy time","name_ja":"ビジー時間","definitions":[{"text":"in computer performance engineering, the period of time during which a system or component is operational, in service, and in use","text_ja":"コンピュータ性能工学において、システムまたはコンポーネントが動作中で、稼働中で、使用中である時間の期間"}],"confer":["down time","idle time","set-up time","up time"],"confer_ja":["ダウン時間","アイドル時間","セットアップ時間","アップ時間"],"note":"operational, in service, and in use","note_ja":"動作中で、稼働中で、使用中"}
{"number":"3.449","name":"buyer","name_ja":"購入者","definitions":[{"text":"acquirer of products, services, or results for an organization","text_ja":"組織のための製品、サービス、または結果の取得者","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["customer","acquirer"],"confer_ja":["顧客","取得者"]}
{"number":"3.450","name":"byte","name_ja":"バイト","definitions":[{"text":"group of adjacent binary digits operated upon as a unit and usually shorter than a computer word (frequently connotes a group of eight bits)","text_ja":"単位として操作される隣接する2進数字のグループで、通常コンピュータワードより短い（しばしば8ビットのグループを意味する）"},{"text":"element of computer storage that can hold a group of bits as in (1)","text_ja":"(1)のようなビットのグループを保持できるコンピュータ記憶の要素"},{"text":"string that consists of a number of bits, treated as a unit, and usually representing a character or a part of a character","text_ja":"いくつかのビットで構成され、単位として扱われ、通常は文字または文字の一部を表現する文字列","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.451","name":"C4I","name_ja":"C4I","definitions":[{"text":"command, control, communications, computer, and intelligence","text_ja":"指揮、統制、通信、コンピュータ、情報","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.452","name":"cache","name_ja":"キャッシュ","definitions":[{"text":"temporary storage in computer memory, to improve operations by having frequently used data readily available for retrieval2. RAM with very high operating speed used for data storage within a processor","text_ja":"取得のために頻繁に使用されるデータを容易に利用可能にすることによって動作を改善するコンピュータメモリ内の一時記憶。2. プロセッサ内のデータ記憶に使用される非常に高い動作速度を持つRAM"}]}
{"number":"3.453","name":"CAD","name_ja":"CAD","definitions":[{"text":"Computer Aided Design","text_ja":"コンピュータ支援設計","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.454","name":"cadence","name_ja":"ケイデンス","definitions":[{"text":"frequency of performing a periodic activity, such as incremental product release","text_ja":"増分製品リリースなどの定期的活動を実行する頻度","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.455","name":"CAI","name_ja":"CAI","definitions":[{"text":"critical application item","text_ja":"重要アプリケーション項目","reference":"IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2"}]}
{"number":"3.456","name":"calculator","name_ja":"計算機","definitions":[{"text":"device that is suitable for performing arithmetic operations, but that requires human intervention to alter its stored program, if any, and to initiate each operation or sequence of operations","text_ja":"算術演算の実行に適したデバイスであるが、その格納プログラム（もしあれば）を変更し、各操作または操作の列を開始するために人間の介入を必要とする","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"note":"A calculator performs some of the functions of a computer, but usually operates only with frequent human intervention.","note_ja":"計算機はコンピュータの機能の一部を実行するが、通常は頻繁な人間の介入でのみ動作する。"}
{"number":"3.457","name":"calendar unit","name_ja":"カレンダー単位","definitions":[{"text":"smallest unit of time used in scheduling a project","text_ja":"プロジェクトのスケジューリングに使用される最小の時間単位"}],"note":"Calendar units are generally in hours, days, or weeks, but can also be in quarter years, months, shifts, or even in minutes.","note_ja":"カレンダー単位は一般的に時間、日、または週であるが、四半期、月、シフト、または分でもありうる。"}
{"number":"3.458","name":"call","name_ja":"呼び出し","definitions":[{"text":"transfer of control from one software module to another, usually with the implication that control will be returned to the calling module","text_ja":"あるソフトウェアモジュールから別のモジュールへの制御の転送で、通常は制御が呼び出し側モジュールに戻されることを含意する"},{"text":"computer instruction that transfers control from one software module to another as in (1) and often specifies the parameters to be passed to and from the module","text_ja":"(1)のようにあるソフトウェアモジュールから別のモジュールに制御を転送し、しばしばモジュールとの間で受け渡しされるパラメータを指定するコンピュータ命令"},{"text":"to transfer control from one software module to another as in (1) and, often, to pass parameters to the other module","text_ja":"(1)のようにあるソフトウェアモジュールから別のモジュールに制御を転送し、しばしば他のモジュールにパラメータを渡すこと"},{"text":"request for service(s) or action(s) with respect to an application or a related service","text_ja":"アプリケーションまたは関連サービスに関するサービスまたはアクションの要求","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.9"}],"confer":["go to"],"confer_ja":["goto"],"note":"A call might concern a request for service, information or advice; disruption or error reporting (incident); request for change; assignment (for instance an instruction to start an off-schedule production run); and complaint","note_ja":"呼び出しは、サービス、情報、または助言の要求；中断またはエラー報告（インシデント）；変更要求；割り当て（例えば、予定外の本番実行を開始する指示）；および苦情に関するものでありうる"}
{"number":"3.459","name":"call arrow","name_ja":"呼び出し矢印","definitions":[{"text":"arrow that enables the sharing of detail between IDEF0 models (linking them together) or within an IDEF0 model","text_ja":"IDEF0モデル間（それらをリンクする）またはIDEF0モデル内での詳細の共有を可能にする矢印","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.23"}],"note":"The tail of a call arrow is attached to the bottom side of a box. One or more page references are attached to a call arrow.","note_ja":"呼び出し矢印の尾部はボックスの下側に接続される。1つ以上のページ参照が呼び出し矢印に付加される。"}
{"number":"3.460","name":"call by name","name_ja":"名前による呼び出し","definitions":[{"text":"method for passing parameters, in which the calling module provides to the called module a symbolic expression representing the parameter to be passed, and a service routine evaluates the expression and provides the resulting value to the called module","text_ja":"パラメータを渡す方法で、呼び出し側モジュールが被呼び出し側モジュールに渡されるパラメータを表現する記号式を提供し、サービスルーチンがその式を評価して結果の値を被呼び出し側モジュールに提供する"}],"confer":["call by reference","call by value"],"confer_ja":["参照による呼び出し","値による呼び出し"],"note":"Because the expression is evaluated each time its corresponding formal parameter is used in the called module, the value of the parameter can change during the execution of the called module.","note_ja":"対応する形式パラメータが被呼び出し側モジュールで使用される度に式が評価されるため、パラメータの値は被呼び出し側モジュールの実行中に変更される可能性がある。"}
{"number":"3.461","name":"call by reference","name_ja":"参照による呼び出し","definitions":[{"text":"a method for passing parameters, in which the calling module provides to the called module the address of the parameter to be passed","text_ja":"パラメータを渡す方法で、呼び出し側モジュールが被呼び出し側モジュールに渡されるパラメータのアドレスを提供する"}],"alias":["call by address","call by location"],"alias_ja":["アドレスによる呼び出し","位置による呼び出し"],"confer":["call by name","call by value"],"confer_ja":["名前による呼び出し","値による呼び出し"],"note":"With this method, the called module has the ability to change the value of the parameter stored by the calling module.","note_ja":"この方法では、被呼び出し側モジュールは呼び出し側モジュールによって格納されたパラメータの値を変更する能力を持つ。"}
{"number":"3.462","name":"call by value","name_ja":"値による呼び出し","definitions":[{"text":"method of passing parameters, in which the calling module provides to the called module the actual value of the parameter to be passed","text_ja":"パラメータを渡す方法で、呼び出し側モジュールが被呼び出し側モジュールに渡されるパラメータの実際の値を提供する"}],"confer":["call by name","call by reference"],"confer_ja":["名前による呼び出し","参照による呼び出し"],"note":"With this method, the called module cannot change the value of the parameter as stored by the calling module.","note_ja":"この方法では、被呼び出し側モジュールは呼び出し側モジュールによって格納されたパラメータの値を変更できない。"}
{"number":"3.463","name":"call graph","name_ja":"呼び出しグラフ","definitions":[{"text":"diagram that identifies the modules in a system or computer program and shows which modules call one another","text_ja":"システムまたはコンピュータプログラム内のモジュールを識別し、どのモジュールが互いを呼び出すかを示す図"}],"alias":["call tree,","tier chart"],"alias_ja":["呼び出し木","階層チャート"],"confer":["structure chart","control flow diagram","data flow diagram","data structure diagram","state diagram"],"confer_ja":["構造チャート","制御フロー図","データフロー図","データ構造図","状態図"],"note":"The result is not necessarily the same as that shown in a structure chart.","note_ja":"結果は必ずしも構造チャートに示されるものと同じではない。"}
{"number":"3.464","name":"call list","name_ja":"呼び出しリスト","definitions":[{"text":"ordered list of arguments used in a call to a software module","text_ja":"ソフトウェアモジュールの呼び出しで使用される引数の順序付きリスト"}]}
{"number":"3.465","name":"call reference","name_ja":"呼び出し参照","definitions":[{"text":"page reference attached to a call arrow","text_ja":"呼び出し矢印に付加されたページ参照","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.24"}]}
{"number":"3.466","name":"called diagram","name_ja":"被呼び出し図","definitions":[{"text":"decomposition diagram invoked by a calling box and identified by a page reference attached to a call arrow","text_ja":"呼び出しボックスによって起動され、呼び出し矢印に付加されたページ参照によって識別される分解図","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.25"}]}
{"number":"3.467","name":"calling box","name_ja":"呼び出しボックス","definitions":[{"text":"box that is detailed by a decomposition diagram that is not the box's child diagram","text_ja":"ボックスの子図ではない分解図によって詳述されるボックス","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.26"}],"note":"A call arrow is attached to the bottom of a calling box.","note_ja":"呼び出し矢印は呼び出しボックスの下部に接続される。"}
{"number":"3.468","name":"calling sequence","name_ja":"呼び出しシーケンス","definitions":[{"text":"sequence of computer instructions and, possibly, data necessary to perform a call to another module","text_ja":"別のモジュールへの呼び出しを実行するために必要なコンピュータ命令の列と、可能にはデータ"}]}
{"number":"3.469","name":"CAN","name_ja":"CAN","definitions":[{"text":"controller area network","text_ja":"コントローラエリアネットワーク"}]}
{"number":"3.470","name":"candidate FSM method","name_ja":"候補FSM手法","definitions":[{"text":"documented software size measurement method submitted for conformity evaluation","text_ja":"適合性評価のために提出された文書化されたソフトウェアサイズ測定手法","reference":"ISO/IEC 14143-2:2011 Information technology — Software measurement — Functional size measurement — Part 2: Conformity evaluation of software size measurement methods to ISO/IEC 14143-1, 3.1"}]}
{"number":"3.471","name":"candidate key","name_ja":"候補キー","definitions":[{"text":"attribute, or combination of attributes, of an entity for which no two instances agree on the values","text_ja":"2つのインスタンスが値について一致しないエンティティの属性または属性の組み合わせ","reference":"IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.14"}],"note":"[key style]","note_ja":"[キースタイル]"}
{"number":"3.472","name":"capability maturity model","name_ja":"能力成熟度モデル","definitions":[{"text":"model that contains the essential elements of effective processes for one or more disciplines and describes an evolutionary improvement path from ad hoc, immature processes to disciplined, mature processes with improved quality and effectiveness","text_ja":"1つ以上の規律に対する効果的なプロセスの本質的要素を含み、アドホックで未成熟なプロセスから規律ある成熟したプロセスへの品質と効果性を改善した進化的改善パスを記述するモデル"}]}
{"number":"3.473","name":"capable process","name_ja":"有能プロセス","definitions":[{"text":"process that can satisfy specified product quality, service quality, and process-performance objective","text_ja":"指定された製品品質、サービス品質、およびプロセス性能目標を満たすことができるプロセス"}],"confer":["stable process","standard process","statistically managed process"],"confer_ja":["安定プロセス","標準プロセス","統計的管理プロセス"]}
{"number":"3.474","name":"capacity","name_ja":"容量","definitions":[{"text":"degree to which the maximum limits of a product or system parameter meet requirements","text_ja":"製品またはシステムパラメータの最大限界が要求を満たす度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.2.3"}],"note":"Parameters can include the number of items that can be stored, the number of concurrent users, the communication bandwidth, throughput of transactions, and size of database.","note_ja":"パラメータには、格納できる項目数、同時ユーザー数、通信帯域幅、トランザクションのスループット、データベースのサイズが含まれる。"}
{"number":"3.475","name":"capacity testing","name_ja":"容量テスト","definitions":[{"text":"type of performance efficiency testing conducted to evaluate the level at which increasing load (of users, transactions, data storage, etc.) compromises a test item's ability to sustain required performance","text_ja":"増加する負荷（ユーザー、トランザクション、データ記憶など）がテスト項目の要求される性能を維持する能力を損なうレベルを評価するために実施される性能効率テストの一種","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.5"}]}
{"number":"3.476","name":"capital expenditure","name_ja":"資本支出","definitions":[{"text":"spending by an enterprise to acquire tangible infrastructure or facilities items, such as furniture, computers, and the like","text_ja":"家具、コンピュータなどの有形インフラストラクチャまたは設備項目を取得するための企業による支出"}],"note":"does not include acquisition of consumable supplies or of items to be included in finished products for sale","note_ja":"消耗品の取得または販売用完成品に含まれる項目の取得は含まない"}
{"number":"3.477","name":"capsule","name_ja":"カプセル","definitions":[{"text":"configuration of engineering objects forming a single unit for the purpose of encapsulation of processing and storage","text_ja":"処理と記憶のカプセル化の目的で単一の単位を形成する工学オブジェクトの構成","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.4"}],"example":"a virtual machine (e.g. a process)","example_ja":"仮想マシン（例：プロセス）"}
{"number":"3.478","name":"capsule manager","name_ja":"カプセルマネージャ","definitions":[{"text":"engineering object which manages the engineering objects in a capsule","text_ja":"カプセル内の工学オブジェクトを管理する工学オブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.5"}]}
{"number":"3.479","name":"CARD","name_ja":"CARD","definitions":[{"text":"cost analysis requirements description","text_ja":"コスト分析要求記述","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.480","name":"cardinality","name_ja":"カーディナリティ","definitions":[{"text":"constraint on the number of entity instances that are related to the subject entity through a relationship","text_ja":"関係を通じて主体エンティティに関連するエンティティインスタンスの数に対する制約","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"},{"text":"specification of how many instances of a first class can or are required to exist for each instance of a second (not necessarily distinct) class, and how many instances of a second class can or are required to exist for each instance of a first class","text_ja":"第2のクラス（必ずしも異なるとは限らない）の各インスタンスに対して第1のクラスのインスタンスがいくつ存在できるかまたは存在することが要求されるか、および第1のクラスの各インスタンスに対して第2のクラスのインスタンスがいくつ存在できるかまたは存在することが要求されるかの仕様","reference":"IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.15"}],"confer":["cardinality constraint"],"confer_ja":["カーディナリティ制約"],"note":"For each direction of a relationship, the cardinality can be constrained.","note_ja":"関係の各方向について、カーディナリティは制約されることができる。"}
{"number":"3.481","name":"cardinality constraint","name_ja":"カーディナリティ制約","definitions":[{"text":"constraint that limits the number of instances that can be associated with each other in a relationship","text_ja":"関係において互いに関連付けることができるインスタンスの数を制限する制約","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.16"},{"text":"constraint that limits the number of members in a collection","text_ja":"コレクション内のメンバー数を制限する制約","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.16"}],"confer":["cardinality"],"confer_ja":["カーディナリティ"]}
{"number":"3.482","name":"carrier","name_ja":"担体","definitions":[{"text":"set of a many-sorted algebra","text_ja":"多ソート代数の集合","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets Part 1: Concepts, definitions and graphical notation, 2.1.6"}]}
{"number":"3.483","name":"case","name_ja":"ケース","definitions":[{"text":"single-entry, single-exit multiple-way branch that defines a control expression, specifies the processing to performed for each value of the control expression, and returns control in all instances to the statement immediately following the overall construct","text_ja":"制御式を定義し、制御式の各値に対して実行される処理を指定し、すべてのインスタンスで全体構造の直後の文に制御を返す単一入口、単一出口の複数方向分岐"},{"text":"Computer Aided Software Engineering","text_ja":"コンピュータ支援ソフトウェア工学","reference":"ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 4"}],"alias":["multiple exclusive selective construct"],"alias_ja":["複数排他選択構造"],"confer":["go to","jump","if-then-else","multiple inclusive selective construct"],"confer_ja":["goto","ジャンプ","if-then-else","複数包含選択構造"]}
{"number":"3.484","name":"CASE needs","name_ja":"CASEニーズ","definitions":[{"text":"organizational requirements which are met by CASE tool characteristics","text_ja":"CASEツールの特性によって満たされる組織要求","reference":"ISO/IEC TR 14471:2007 Information technology — Software engineering — Guidelines for the adoption of CASE tools, 2.1.3"}],"note":"These characteristics are detailed in ISO/IEC 14102:2008. They include management process, development process, maintenance, documentation, configuration management, quality assurance, verification, validation, environment needs, CASE tool integrability, quality characteristics, acquisition needs, implementation needs, support indicators, and certification requirements.","note_ja":"これらの特性はISO/IEC 14102:2008で詳述されている。それらには、管理プロセス、開発プロセス、保守、文書化、構成管理、品質保証、検証、妥当性確認、環境ニーズ、CASEツール統合可能性、品質特性、取得ニーズ、実装ニーズ、サポート指標、および認証要求が含まれる。"}
{"number":"3.485","name":"CASE tool","name_ja":"CASEツール","definitions":[{"text":"software tool used for computer-aided software engineering (CASE)","text_ja":"コンピュータ支援ソフトウェア工学（CASE）に使用されるソフトウェアツール","reference":"IEEE 1175.1-2002 (R2007) IEEE Guide for CASE Tool Interconnections-Classification and Description, 3.3"},{"text":"software product that can assist software engineers by providing automated support for software life-cycle activities","text_ja":"ソフトウェアライフサイクル活動の自動化サポートを提供することによってソフトウェア技術者を支援できるソフトウェア製品","reference":"ISO/IEC 14102:2008 Information Technology - Guideline for the evaluation and selection of CASE tools, 3.2"},{"text":"software product that can assist software and system engineers by providing automated support for software and system engineering life-cycle activitie","text_ja":"ソフトウェアおよびシステム工学ライフサイクル活動の自動化サポートを提供することによってソフトウェアおよびシステム技術者を支援できるソフトウェア製品","reference":"ISO/IEC 15940:2013 Systems and software engineering — Software Engineering Environment Services, 2.3"}],"note":"A CASE tool can provide support in only selected functional areas or in a wide variety of functional areas.","note_ja":"CASEツールは、選択された機能領域のみまたは幅広い機能領域でサポートを提供できる。"}
{"number":"3.486","name":"cast","name_ja":"キャスト","definitions":[{"text":"to treat an object of one type as an object of another type","text_ja":"ある型のオブジェクトを別の型のオブジェクトとして扱うこと","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.17"}],"confer":["coerce"],"confer_ja":["強制"]}
{"number":"3.487","name":"catastrophic failure","name_ja":"破滅的故障","definitions":[{"text":"failure of critical software","text_ja":"重要ソフトウェアの故障"}]}
{"number":"3.488","name":"categorization","name_ja":"分類","definitions":[{"text":"specific way to allocate a target system into a category","text_ja":"対象システムをカテゴリに配分する特定の方法","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.5"}],"confer":["generalization"],"confer_ja":["汎化"]}
{"number":"3.489","name":"categorization scheme","name_ja":"分類体系","definitions":[{"text":"orderly combination of views and categories related to software.","text_ja":"ソフトウェアに関連するビューとカテゴリの秩序ある組み合わせ"}]}
{"number":"3.490","name":"categorization space","name_ja":"分類空間","definitions":[{"text":"universal set of systems and software which has one or more classification axes as its individual dimension, by which stakeholder's concerns on categorization are expressed","text_ja":"1つ以上の分類軸を個別の次元として持つシステムとソフトウェアの全体集合で、それによって分類に関するステークホルダーの関心事が表現される","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.6"}]}
{"number":"3.491","name":"category","name_ja":"カテゴリ","definitions":[{"text":"specifically defined division or grouping of software based upon one or more attributes or characteristics","text_ja":"1つ以上の属性または特性に基づくソフトウェアの特定に定義された分割またはグループ化"},{"text":"subset of categorization space, which the stakeholders are interested in, specified using a combination of one or more equivalence classes","text_ja":"ステークホルダーが関心を持つ分類空間の部分集合で、1つ以上の同値クラスの組み合わせを使用して指定される","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.9"}]}
{"number":"3.492","name":"category entity","name_ja":"カテゴリエンティティ","definitions":[{"text":"entity whose instances represent a subtype or subclassification of another entity (generic entity)","text_ja":"そのインスタンスが別のエンティティ（汎用エンティティ）のサブタイプまたはサブ分類を表現するエンティティ","reference":"IEEE 1320.2- 1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.21"}],"confer":["subclass","subtype"],"confer_ja":["サブクラス","サブタイプ"],"note":"[key style]","note_ja":"[キースタイル]"}
{"number":"3.493","name":"causal analysis","name_ja":"因果分析","definitions":[{"text":"analysis of a defect to determine its cause","text_ja":"欠陥の原因を決定するための欠陥の分析"}]}
{"number":"3.494","name":"causal relationship","name_ja":"因果関係","definitions":[{"text":"existence dependency between the stimulus of a behavior and the various responses that are caused to occur","text_ja":"動作の刺激と発生が引き起こされる様々な応答との間の存在依存性","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.9"}]}
{"number":"3.495","name":"cause and effect diagram","name_ja":"原因と結果図","definitions":[{"text":"a decomposition technique that helps trace an undesirable effect back to its root cause","text_ja":"望ましくない結果をその根本原因まで遡って追跡するのに役立つ分解技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"alias":["fishbone diagram"],"alias_ja":["魚骨図"]}
{"number":"3.496","name":"caution","name_ja":"注意","definitions":[{"text":"advisory in software user documentation that performing some action can lead to consequences that are unwanted or undefined, such as loss of data or an equipment problem","text_ja":"ソフトウェアユーザー文書における助言で、何らかのアクションを実行することがデータの損失や機器の問題などの望ましくないまたは未定義の結果をもたらす可能性があることを示す","reference":"ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.7"}],"confer":["warning","note"],"confer_ja":["警告","注記"]}
{"number":"3.497","name":"CBa","name_ja":"CBa","definitions":[{"text":"conduct benchmarking activity","text_ja":"ベンチマーキング活動の実施","reference":"ISO/IEC 29155-2:2013: Systems and software engineering — Information technology project performance benchmarking framework — Part 2: Requirements for benchmarking, 4"}]}
{"number":"3.498","name":"CCB","name_ja":"CCB","definitions":[{"text":"configuration control board","text_ja":"構成管理委員会","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2; ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3"},{"text":"change control board","text_ja":"変更管理委員会","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2; ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3"}]}
{"number":"3.499","name":"CCCS","name_ja":"CCCS","definitions":[{"text":"Client Conversion Code Sets","text_ja":"クライアント変換コードセット","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.500","name":"CCM","name_ja":"CCM","definitions":[{"text":"CORBA Component Model","text_ja":"CORBAコンポーネントモデル","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3"}]}
{"number":"3.501","name":"CCS","name_ja":"CCS","definitions":[{"text":"Conversion Code Sets","text_ja":"変換コードセット","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.502","name":"CD","name_ja":"CD","definitions":[{"text":"Compact Disk","text_ja":"コンパクトディスク"}]}
{"number":"3.503","name":"CD-ROM","name_ja":"CD-ROM","definitions":[{"text":"compact disc, read-only memory","text_ja":"コンパクトディスク、読み取り専用メモリ","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.504","name":"CDD","name_ja":"CDD","definitions":[{"text":"capability development document","text_ja":"能力開発文書","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.505","name":"CDIF","name_ja":"CDIF","definitions":[{"text":"CASE Data Interchange Format (originally)","text_ja":"CASEデータ交換形式（元々）","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 5.2"}]}
{"number":"3.506","name":"CDIF clear text encoding","name_ja":"CDIF明文符号化","definitions":[{"text":"clear text file encoding of a CDIF transfer file","text_ja":"CDIF転送ファイルの明文ファイル符号化","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.507","name":"CDIF exporter","name_ja":"CDIFエクスポータ","definitions":[{"text":"tool that creates a CDIF transfer file","text_ja":"CDIF転送ファイルを作成するツール","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.508","name":"CDIF family of standards","name_ja":"CDIF標準ファミリー","definitions":[{"text":"set of standards that, when used together, provide a standard definition for the interchange of information between modeling tools","text_ja":"一緒に使用された時に、モデリングツール間の情報交換の標準定義を提供する標準の集合","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.509","name":"CDIF graphical notation","name_ja":"CDIFグラフィカル記法","definitions":[{"text":"set of rules governing the representation of CDIF modeling concepts in diagrams","text_ja":"図におけるCDIFモデリング概念の表現を支配するルールの集合","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.510","name":"CDIF identifier","name_ja":"CDIF識別子","definitions":[{"text":"attribute that uniquely identifies an object in the model section of a transfer","text_ja":"転送のモデル部分においてオブジェクトを一意に識別する属性","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.511","name":"CDIF importer","name_ja":"CDIFインポータ","definitions":[{"text":"tool that reads a CDIF transfer file and uses it to create or modify a model","text_ja":"CDIF転送ファイルを読み取り、それを使用してモデルを作成または修正するツール","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.512","name":"CDIF meta-metamodel","name_ja":"CDIFメタメタモデル","definitions":[{"text":"description of the set of concepts and notations used to define a metamodel","text_ja":"メタモデルを定義するために使用される概念と記法の集合の記述","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"Specifically, the CDIF meta-metamodel defines an Entity-Relationship-Attribute model that is used to construct and define both metamodels and the CDIF meta-metamodel itself","note_ja":"具体的には、CDIFメタメタモデルは、メタモデルとCDIFメタメタモデル自体の両方を構築し定義するために使用されるエンティティ・関係・属性モデルを定義する"}
{"number":"3.513","name":"CDIF metaidentifier","name_ja":"CDIFメタ識別子","definitions":[{"text":"meta-meta-attribute that uniquely identifies a meta-object in the metamodel section of a transfer","text_ja":"転送のメタモデル部分においてメタオブジェクトを一意に識別するメタメタ属性","reference":"ISO/IEC 154 1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.514","name":"CDIF semantic metamodel","name_ja":"CDIF意味メタモデル","definitions":[{"text":"description of the set of concepts and notations used to define a model","text_ja":"モデルを定義するために使用される概念と記法の集合の記述","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"The CDIF semantic metamodel defines an Entity-Relationship-Attribute model that is used to construct an define models used in systems development.","note_ja":"CDIF意味メタモデルは、システム開発で使用されるモデルを構築し定義するために使用されるエンティティ・関係・属性モデルを定義する。"}
{"number":"3.515","name":"CDIF transfer","name_ja":"CDIF転送","definitions":[{"text":"combination of a particular syntax, a particular encoding of that syntax, and a metamodel","text_ja":"特定の構文、その構文の特定の符号化、およびメタモデルの組み合わせ","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"In other words, a complete definition of the format and contents of a transfer.","note_ja":"言い換えれば、転送の形式と内容の完全な定義。"}
{"number":"3.516","name":"CDIF transfer file","name_ja":"CDIF転送ファイル","definitions":[{"text":"transfer file conforming to ISO/IEC 15475","text_ja":"ISO/IEC 15475に適合する転送ファイル","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1"}]}
{"number":"3.517","name":"CDIF transfer format","name_ja":"CDIF転送形式","definitions":[{"text":"combination of a particular syntax and a particular encoding of that syntax which together provides a complete definition of the transfer format","text_ja":"特定の構文とその構文の特定の符号化の組み合わせで、一緒になって転送形式の完全な定義を提供する","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}]}
{"number":"3.518","name":"CDIF transfer syntax and encoding","name_ja":"CDIF転送構文と符号化","definitions":[{"text":"standard vehicle format supported by CDIF","text_ja":"CDIFによってサポートされる標準ビークル形式","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"The combination of SYNTAX.1 and ENCODING.1 forms the initial CDIF transfer syntax and encoding.","note_ja":"SYNTAX.1とENCODING.1の組み合わせが初期CDIF転送構文と符号化を形成する。"}
{"number":"3.519","name":"CDR","name_ja":"CDR","definitions":[{"text":"critical design review","text_ja":"重要設計審査","reference":"IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.2"},{"text":"common data representation","text_ja":"共通データ表現","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.520","name":"CDRL","name_ja":"CDRL","definitions":[{"text":"contract data requirements list","text_ja":"契約データ要求リスト","reference":"ISO/IEC/IEEE 16326:2009 Systems and software engineering — Life cycle processes — Project management, 3"}]}
{"number":"3.521","name":"central processing unit (CPU)","name_ja":"中央処理装置（CPU）","definitions":[{"text":"functional unit that consists of one or more processors and their internal storage","text_ja":"1つ以上のプロセッサとその内部記憶で構成される機能単位","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.522","name":"central tendency","name_ja":"中心傾向","definitions":[{"text":"a property of the central limit theorem predicting that the data observations in a distribution will tend to group around a central location. The three typical measures of central tendency are the mean, median, and mode","text_ja":"分布におけるデータ観測値が中心位置の周りにグループ化する傾向があることを予測する中心極限定理の特性。中心傾向の3つの典型的な尺度は、平均、中央値、最頻値である","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.523","name":"certification","name_ja":"認証","definitions":[{"text":"third-party attestation related to products, processes, systems, or persons","text_ja":"製品、プロセス、システム、または人に関する第三者証明","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.15"},{"text":"a written guarantee that a system or component complies with its specified requirements and is acceptable for operational use","text_ja":"システムまたはコンポーネントが指定された要求に適合し、運用使用に受け入れ可能であることの書面による保証"},{"text":"formal demonstration that a system or component complies with its specified requirements and is acceptable for operational use","text_ja":"システムまたはコンポーネントが指定された要求に適合し、運用使用に受け入れ可能であることの正式な実証"},{"text":"process of confirming that a system or component complies with its specified requirements and is acceptable for operational use","text_ja":"システムまたはコンポーネントが指定された要求に適合し、運用使用に受け入れ可能であることを確認するプロセス"}],"example":"written authorization that a computer system is secure and is permitted to operate in a defined environment","example_ja":"コンピュータシステムが安全であり、定義された環境での動作が許可されるという書面による承認","note":"Certification is applicable to all objects of conformity assessment except for conformity assessment bodies themselves, to which accreditation is applicable. Certification of a management system is sometimes also called registration.","note_ja":"認証は、適合性評価機関自体を除く適合性評価のすべての対象に適用される。適合性評価機関自体には認定が適用される。マネジメントシステムの認証は登録と呼ばれることもある。"}
{"number":"3.524","name":"certification artifact","name_ja":"認証成果物","definitions":[{"text":"tangible results from a certification process","text_ja":"認証プロセスからの有形な結果"}],"example":"inspection checklists, metrics, problem reports","example_ja":"検査チェックリスト、メトリクス、問題報告書"}
{"number":"3.525","name":"certification body","name_ja":"認証機関","definitions":[{"text":"body certifying persons against the requirements in ISO/IEC 24773:2008, including the development and maintenance of a Scheme","text_ja":"スキームの開発と維持を含む、ISO/IEC 24773:2008の要求に対して人を認証する機関","reference":"ISO/IEC 24773:2008 Software engineering -Certification of software engineering professionals -Comparison framework, 3.2"},{"text":"third-party conformity assessment body operating certification schemes","text_ja":"認証スキームを運営する第三者適合性評価機関","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.16"}],"note":"A certification body can be non-governmental or governmental (with or without regulatory authority)","note_ja":"認証機関は非政府または政府（規制権限の有無に関わらず）でありうる"}
{"number":"3.526","name":"certification criteria","name_ja":"認証基準","definitions":[{"text":"set of standards, rules, or properties to which an asset must conform in order to be certified to a certain level","text_ja":"資産が特定のレベルに認証されるために適合しなければならない標準、規則、または特性の集合"}],"note":"Certification criteria are defined by a certification policy. Certification criteria can be specified as a set of certification properties that must be met.","note_ja":"認証基準は認証方針によって定義される。認証基準は、満たされなければならない認証特性の集合として指定できる。"}
{"number":"3.527","name":"certification process","name_ja":"認証プロセス","definitions":[{"text":"process of assessing whether an asset conforms to predetermined certification criteria appropriate for that class of asset","text_ja":"資産がその資産クラスに適切な事前に決定された認証基準に適合するかどうかを評価するプロセス"},{"text":"activities by which a certification body establishes that a person fulfills specified competence requirements, including application, evaluation, decision on certification, surveillance and recertification, and use of certificates and logos or marks","text_ja":"認証機関が人が指定された能力要求を満たすことを確立する活動で、申請、評価、認証決定、監視と再認証、および証明書とロゴまたはマークの使用を含む","reference":"ISO/IEC TR 29154:2013, Software engineering — Guide for the application of ISO/IEC 24773:2008 (Certification of software engineering professionals — Comparison framework), 3.1"}]}
{"number":"3.528","name":"certification property","name_ja":"認証特性","definitions":[{"text":"statement about some feature or characteristic of an asset that can be assessed as being true or false during a certification process","text_ja":"認証プロセス中に真または偽として評価できる資産の何らかの機能または特性についての記述"}],"note":"Properties can relate to what an asset is, what it does, or how it relates to its operating environment. An assessment of a certification quality factor is accomplished by assessing the underlying certification properties.","note_ja":"特性は、資産が何であるか、何をするか、またはその動作環境にどのように関連するかに関連しうる。認証品質因子の評価は、根本的な認証特性を評価することによって達成される。"}
{"number":"3.529","name":"certification scheme","name_ja":"認証スキーム","definitions":[{"text":"specific certification requirements related to specified categories of persons, to which the same particular standards and rules and the same procedures apply","text_ja":"同じ特定の標準と規則および同じ手順が適用される、指定された人のカテゴリに関連する特定の認証要求","reference":"ISO/IEC TR 29154:2013, Software engineering — Guide for the application of ISO/IEC 24773:2008 (Certification of software engineering professionals — Comparison framework), 3.2"},{"text":"certification system related to specified products, to which the same specified requirements, specific rules, and procedures apply","text_ja":"同じ指定された要求、特定の規則、および手順が適用される、指定された製品に関連する認証システム","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.17"}],"note":"[ISO/IEC 17024]","note_ja":"[ISO/IEC 17024]"}
{"number":"3.530","name":"certification scheme owner","name_ja":"認証スキーム所有者","definitions":[{"text":"person or organization that is responsible for developing and maintaining a specific certification scheme","text_ja":"特定の認証スキームの開発と維持に責任を持つ人または組織","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.18"}],"note":"The certification scheme owner can be the certification body itself, a governmental authority, trade association, group of certification bodies, or other.","note_ja":"認証スキーム所有者は、認証機関自体、政府機関、業界団体、認証機関グループ、またはその他でありうる。"}
{"number":"3.531","name":"CFD","name_ja":"CFD","definitions":[{"text":"cumulative flow diagram","text_ja":"累積フロー図","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.532","name":"CFP","name_ja":"CFP","definitions":[{"text":"COSMIC function point","text_ja":"COSMIC機能ポイント","reference":"ISO/IEC 19761:2011 Software engineering — COSMIC: a functional size measurement method, 3"}]}
{"number":"3.533","name":"chain","name_ja":"チェーン","definitions":[{"text":"one or more tasks submitted to the SUT in a defined sequence","text_ja":"定義された順序でSUTに提出される1つ以上のタスク","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.3"},{"text":"sequence of actions within an activity where, for each adjacent pair of actions, occurrence of the first action is necessary for the occurrence of the second action","text_ja":"活動内のアクションの列で、各隣接するアクションの対について、第1のアクションの発生が第2のアクションの発生に必要である","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.1.1"}]}
{"number":"3.534","name":"chain type","name_ja":"チェーンタイプ","definitions":[{"text":"classification of chains which is defined by the sequence of tasks types","text_ja":"タスクタイプの列によって定義されるチェーンの分類","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.4"}],"note":"The emulated users submit only chains of specified chain types to the SUT.","note_ja":"エミュレートされたユーザーは、指定されたチェーンタイプのチェーンのみをSUTに提出する。"}
{"number":"3.535","name":"change","name_ja":"変更","definitions":[{"text":"the modification of an existing application comprising additions, changes and deletions","text_ja":"追加、変更、削除を含む既存のアプリケーションの修正","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}],"confer":["enhancement"],"confer_ja":["拡張"]}
{"number":"3.536","name":"change authority","name_ja":"変更権限","definitions":[{"text":"configuration board","text_ja":"構成委員会","reference":"ISO/IEC TR 15846:1998 Information technology — Software life cycle processes — Configuration Management, 4.2"}],"note":"Disposition is made by a designated change authority traditionally given the name \"Change/Configuration Control Board\". This authority can approve a proposed change, thus converting it to an approved modification, or can disapprove a proposed change, or can defer a decision.","note_ja":"処分は、伝統的に「変更/構成管理委員会」という名前が与えられた指定された変更権限によって行われる。この権限は、提案された変更を承認してそれを承認された修正に変換するか、提案された変更を不承認にするか、または決定を延期することができる。"}
{"number":"3.537","name":"change control","name_ja":"変更管理","definitions":[{"text":"a process whereby modifications to documents, deliverables, or baselines associated with the project are identified, documented, approved, or rejected","text_ja":"プロジェクトに関連する文書、成果物、またはベースラインへの修正が識別、文書化、承認、または拒否されるプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["configuration control","version control"],"confer_ja":["構成管理","バージョン管理"]}
{"number":"3.538","name":"change control board (CCB)","name_ja":"変更管理委員会（CCB）","definitions":[{"text":"a formally chartered group responsible for reviewing, evaluating, approving, delaying, or rejecting changes to a project, and for recording and communicating such decisions","text_ja":"プロジェクトへの変更の審査、評価、承認、遅延、または拒否、およびそのような決定の記録と伝達に責任を持つ正式に認可されたグループ","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["configuration control board"],"confer_ja":["構成管理委員会"]}
{"number":"3.539","name":"change control procedure","name_ja":"変更管理手順","definitions":[{"text":"actions taken to identify, document, review, and authorize changes to a software or documentation product that is being developed","text_ja":"開発中のソフトウェアまたは文書製品への変更を識別、文書化、審査、承認するために取られる行動","reference":"ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.8"}],"note":"The procedures ensure that the validity of changes is confirmed, that the effects on other items are examined, and that those people concerned with the development are notified of the changes.","note_ja":"手順は、変更の妥当性が確認され、他の項目への影響が検査され、開発に関係する人々が変更について通知されることを確実にする。"}
{"number":"3.540","name":"change control system","name_ja":"変更管理システム","definitions":[{"text":"a set of procedures that describes how modifications to the project deliverables and documentation are managed and controlled","text_ja":"プロジェクト成果物と文書への修正がどのように管理され制御されるかを記述する手順の集合","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.541","name":"change dump","name_ja":"変更ダンプ","definitions":[{"text":"selective dump of those storage locations whose contents have changed since some specified time or event","text_ja":"指定された時間またはイベント以降に内容が変更された記憶場所の選択的ダンプ"}],"alias":["differential dump"],"alias_ja":["差分ダンプ"],"confer":["dynamic dump","memory dump","postmortem dump","selective dump","snapshot dump","static dump"],"confer_ja":["動的ダンプ","メモリダンプ","ポストモーテムダンプ","選択的ダンプ","スナップショットダンプ","静的ダンプ"]}
{"number":"3.542","name":"change log","name_ja":"変更ログ","definitions":[{"text":"a comprehensive list of changes made during the project. This typically includes dates of the change and impacts in terms of time, cost, and risk","text_ja":"プロジェクト中に行われた変更の包括的なリスト。これは通常、変更の日付と時間、コスト、リスクの観点からの影響を含む","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.543","name":"change management","name_ja":"変更管理","definitions":[{"text":"judicious use of means to effect a change, or a proposed change, to a product or service","text_ja":"製品またはサービスへの変更または提案された変更を実現するための手段の賢明な使用"}],"confer":["configuration management"],"confer_ja":["構成管理"]}
{"number":"3.544","name":"change package","name_ja":"変更パッケージ","definitions":[{"text":"collection of objects that have been changed and approved and will be transferred to the production environment","text_ja":"変更され承認され、本番環境に転送されるオブジェクトの集合","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.10"}]}
{"number":"3.545","name":"change project function point count","name_ja":"変更プロジェクト機能ポイント数","definitions":[{"text":"a count that measures the work-output arising from modifications to an existing application that add, change or delete user functions delivered when the project is complete","text_ja":"プロジェクトが完了した時に提供されるユーザー機能を追加、変更、または削除する既存のアプリケーションへの修正から生じる作業出力を測定する数","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}]}
{"number":"3.546","name":"change record","name_ja":"変更記録","definitions":[{"text":"record containing details of which configuration items are affected and how they are affected by an authorized change","text_ja":"どの構成項目が影響を受け、承認された変更によってどのように影響を受けるかの詳細を含む記録"}]}
{"number":"3.547","name":"change request","name_ja":"変更要求","definitions":[{"text":"a formal proposal to modify any document, deliverable, or baseline","text_ja":"任意の文書、成果物、またはベースラインを修正する正式な提案","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"formal procedure for submitting a request for an adjustment of a configuration item","text_ja":"構成項目の調整の要求を提出するための正式な手順","reference":"ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.5"}],"confer":["modification request","request for change"],"confer_ja":["修正要求","変更要求"]}
{"number":"3.548","name":"change set","name_ja":"変更セット","definitions":[{"text":"collection of objects which can undergo change as the result of a release","text_ja":"リリースの結果として変更を受けることができるオブジェクトの集合","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.11"}]}
{"number":"3.549","name":"changeover system","name_ja":"切り替えシステム","definitions":[{"text":"temporary information processing system used to facilitate the transition from an operational system to its successor","text_ja":"運用システムからその後継システムへの移行を促進するために使用される一時的な情報処理システム","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.550","name":"channel","name_ja":"チャネル","definitions":[{"text":"approach to distributing products and services from the original supplier to the end-user organization","text_ja":"元の供給者からエンドユーザー組織に製品とサービスを配布するアプローチ","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.3"},{"text":"configuration of stubs, binders, protocol objects and interceptors providing a binding between a set of interfaces to basic engineering objects, through which interaction can occur","text_ja":"基本工学オブジェクトへのインターフェースの集合間の束縛を提供するスタブ、バインダー、プロトコルオブジェクト、インターセプタの構成で、それを通じて相互作用が生じうる","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.8"}],"alias":["distribution channel"],"alias_ja":["配布チャネル"],"note":"Typical channels for software include direct, VAR, OEM, reseller, and educational reseller. Bindings that require channels are referred to as distributed bindings in the engineering language; bindings between engineering objects that do not require channels (e.g. between engineering objects in the same cluster) are referred to as local bindings.","note_ja":"ソフトウェアの典型的なチャネルには、直接、VAR、OEM、リセラー、教育リセラーが含まれる。チャネルを必要とする束縛は工学言語では分散束縛と呼ばれ；チャネルを必要としない工学オブジェクト間の束縛（例：同じクラスタ内の工学オブジェクト間）はローカル束縛と呼ばれる。"}
{"number":"3.551","name":"channel capacity","name_ja":"チャネル容量","definitions":[{"text":"maximum amount of information that can be transferred on a given channel per unit of time; usually measured in bits per second or in baud.","text_ja":"与えられたチャネルで単位時間あたりに転送できる情報の最大量；通常は1秒あたりのビット数またはボーで測定される"}],"confer":["memory capacity","storage capacity"],"confer_ja":["メモリ容量","記憶容量"]}
{"number":"3.552","name":"channel partner","name_ja":"チャネルパートナー","definitions":[{"text":"person or entity working with a software licensor or another person/entity within the channel who facilitates the sale of software to the end-user","text_ja":"ソフトウェアライセンサーまたはチャネル内の他の人/実体と協働して、エンドユーザーへのソフトウェア販売を促進する人または実体","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.4"}],"example":"original equipment manufacturer (OEM), reseller, vendor","example_ja":"相手先商標製造業者（OEM）、リセラー、ベンダー"}
{"number":"3.553","name":"character","name_ja":"文字","definitions":[{"text":"letter, digit, or other symbol that is used to represent information","text_ja":"情報を表現するために使用される字母、数字、またはその他の記号"},{"text":"member of a set of elements that is used for the representation, organization, or control of data","text_ja":"データの表現、組織化、または制御に使用される要素の集合のメンバー","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.554","name":"character set","name_ja":"文字セット","definitions":[{"text":"collection of characters used in an encoding to represent terminal symbols","text_ja":"端末記号を表現するために符号化で使用される文字の集合","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"The character set used is significant in the encoding of text and string meta-attributes for a CDIF transfer","note_ja":"使用される文字セットは、CDIF転送のテキストと文字列メタ属性の符号化において重要である"}
{"number":"3.555","name":"character type","name_ja":"文字型","definitions":[{"text":"data type whose members can assume the values of specified characters and can be operated on by character operators, such as concatenation","text_ja":"そのメンバーが指定された文字の値を取ることができ、連結などの文字演算子によって操作できるデータ型"}],"confer":["enumeration type","integer type","logical type","real type"],"confer_ja":["列挙型","整数型","論理型","実数型"]}
{"number":"3.556","name":"characteristic entity","name_ja":"特性エンティティ","definitions":[{"text":"meta-entity that provides additional attribution for another meta-object","text_ja":"別のメタオブジェクトに追加の属性付けを提供するメタエンティティ","reference":"ISO/IEC 15474-1:2002 Informatio technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"Other common names for characteristic entity are attributive entity and dependent entity. Each instance of a characteristic meta-entity is logically only related to one instance of one other meta-object, therefore an importer coul incorporate the meta-attributes of a characteristic meta-entity with those of the 'owning' meta-object, where the owning m object is the one to which the characteristic meta-entity is related with a cardinality of 1:1","note_ja":"特性エンティティの他の一般的な名前は、属性エンティティと従属エンティティである。特性メタエンティティの各インスタンスは論理的に1つの他のメタオブジェクトの1つのインスタンスにのみ関連するため、インポータは特性メタエンティティのメタ属性を「所有する」メタオブジェクトのものと組み込むことができ、所有するメタオブジェクトは特性メタエンティティが1:1のカーディナリティで関連するものである"}
{"number":"3.557","name":"characteristic of FUR","name_ja":"FURの特性","definitions":[{"text":"a distinctive property of the FUR that is important for identifying the functional domain to which a specific set of FUR belongs","text_ja":"特定のFURの集合が属する機能ドメインを識別するために重要なFURの特徴的な特性","reference":"ISO/IEC TR 14143-5:2004 Information technology — Software measurement — Functional size measurement — Part 5: Determination of functional domains for use with functional size measurement, 3.1"}]}
{"number":"3.558","name":"chart of accounts","name_ja":"勘定科目表","definitions":[{"text":"numbering system used by a project or organization to identify costs by category, such as labor, supplies, materials, and equipment","text_ja":"労働、用品、材料、機器などのカテゴリ別にコストを識別するためにプロジェクトまたは組織によって使用される番号システム"}],"confer":["code of accounts"],"confer_ja":["勘定コード"]}
{"number":"3.559","name":"checklist analysis","name_ja":"チェックリスト分析","definitions":[{"text":"a technique for systematically reviewing materials using a list for accuracy and completeness","text_ja":"正確性と完全性のためにリストを使用して材料を体系的に審査する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.560","name":"checkout","name_ja":"チェックアウト","definitions":[{"text":"testing conducted in the operational or support environment to ensure that a software product performs as required after installation.","text_ja":"インストール後にソフトウェア製品が要求通りに動作することを確実にするために運用または支援環境で実施されるテスト"}]}
{"number":"3.561","name":"checkpoint","name_ja":"チェックポイント","definitions":[{"text":"point in a computer program at which program state, status, or results are checked or recorded","text_ja":"プログラムの状態、ステータス、または結果がチェックまたは記録されるコンピュータプログラム内の点"},{"text":"object template derived from the state and structure of an engineering object that can be used to instantiate another engineering object, consistent with the state of the original object at the time of checkpointing","text_ja":"工学オブジェクトの状態と構造から導出されるオブジェクトテンプレートで、チェックポイント時の元のオブジェクトの状態と一致する別の工学オブジェクトをインスタンス化するために使用できる","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.20"}]}
{"number":"3.562","name":"checkpointing","name_ja":"チェックポインティング","definitions":[{"text":"creating a checkpoint","text_ja":"チェックポイントを作成すること","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.21"}],"note":"Checkpoints can only be created when the engineering object involved satisfies a pre-condition stated in a checkpointing policy","note_ja":"チェックポイントは、関与する工学オブジェクトがチェックポインティング方針で述べられた前条件を満たす場合にのみ作成できる"}
{"number":"3.543","name":"change management","name_ja":"変更管理","definitions":[{"text":"judicious use of means to effect a change, or a proposed change, to a product or service","text_ja":"製品またはサービスに対する変更または提案された変更を実行するための手段の適切な使用"}],"confer":["configuration management"]}
{"number":"3.544","name":"change package","name_ja":"変更パッケージ","definitions":[{"text":"collection of objects that have been changed and approved and will be transferred to the production environment","text_ja":"変更され承認されたオブジェクトの集合で、本番環境に転送される予定のもの","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.10"}]}
{"number":"3.545","name":"change project function point count","name_ja":"変更プロジェクト機能ポイント数","definitions":[{"text":"a count that measures the work-output arising from modifications to an existing application that add, change or delete user functions delivered when the project is complete","text_ja":"既存アプリケーションの変更によって発生する作業出力を測定するカウントで、プロジェクト完了時に提供されるユーザー機能を追加、変更、または削除するもの","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}]}
{"number":"3.546","name":"change record","name_ja":"変更記録","definitions":[{"text":"record containing details of which configuration items are affected and how they are affected by an authorized change","text_ja":"承認された変更によってどの構成項目が影響を受けるか、およびどのように影響を受けるかの詳細を含む記録"}]}
{"number":"3.547","name":"change request","name_ja":"変更要求","definitions":[{"text":"a formal proposal to modify any document, deliverable, or baseline","text_ja":"文書、成果物、またはベースラインを変更する正式な提案","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"formal procedure for submitting a request for an adjustment of a configuration item","text_ja":"構成項目の調整要求を提出するための正式な手順","reference":"ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.5"}],"confer":["modification request","request for change"]}
{"number":"3.548","name":"change set","name_ja":"変更セット","definitions":[{"text":"collection of objects which can undergo change as the result of a release","text_ja":"リリースの結果として変更を受ける可能性のあるオブジェクトの集合","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.11"}]}
{"number":"3.549","name":"changeover system","name_ja":"切り替えシステム","definitions":[{"text":"temporary information processing system used to facilitate the transition from an operational system to its successor","text_ja":"運用システムからその後継システムへの移行を促進するために使用される一時的な情報処理システム","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.550","name":"channel","name_ja":"チャネル","definitions":[{"text":"approach to distributing products and services from the original supplier to the end-user organization","text_ja":"元の供給者からエンドユーザー組織への製品およびサービスの配布に対するアプローチ","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.3"},{"text":"configuration of stubs, binders, protocol objects and interceptors providing a binding between a set of interfaces to basic engineering objects, through which interaction can occur","text_ja":"基本エンジニアリングオブジェクトに対するインターフェースのセット間の結合を提供し、それを通じて相互作用が発生し得る、スタブ、バインダー、プロトコルオブジェクト、およびインターセプターの構成","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.8"}],"alias":["distribution channel"],"note":"Typical channels for software include direct, VAR, OEM, reseller, and educational reseller. Bindings that require channels are referred to as distributed bindings in the engineering language; bindings between engineering objects that do not require channels (e.g. between engineering objects in the same cluster) are referred to as local bindings."}
{"number":"3.551","name":"channel capacity","name_ja":"チャネル容量","definitions":[{"text":"maximum amount of information that can be transferred on a given channel per unit of time; usually measured in bits per second or in baud.","text_ja":"与えられたチャネルで単位時間当たりに転送できる情報の最大量。通常、ビット毎秒またはボーで測定される。"}],"confer":["memory capacity","storage capacity"]}
{"number":"3.552","name":"channel partner","name_ja":"チャネルパートナー","definitions":[{"text":"person or entity working with a software licensor or another person/entity within the channel who facilitates the sale of software to the end-user","text_ja":"ソフトウェアライセンサーまたはチャネル内の他の人/エンティティと協力して、エンドユーザーへのソフトウェア販売を促進する人またはエンティティ","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.4"}],"example":"original equipment manufacturer (OEM), reseller, vendor"}
{"number":"3.553","name":"character","name_ja":"文字","definitions":[{"text":"letter, digit, or other symbol that is used to represent information","text_ja":"情報を表現するために使用される文字、数字、またはその他の記号"},{"text":"member of a set of elements that is used for the representation, organization, or control of data","text_ja":"データの表現、組織化、または制御に使用される要素集合のメンバー","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.554","name":"character set","name_ja":"文字セット","definitions":[{"text":"collection of characters used in an encoding to represent terminal symbols","text_ja":"終端記号を表現するためにエンコーディングで使用される文字の集合","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"The character set used is significant in the encoding of text and string meta-attributes for a CDIF transfer"}
{"number":"3.555","name":"character type","name_ja":"文字型","definitions":[{"text":"data type whose members can assume the values of specified characters and can be operated on by character operators, such as concatenation","text_ja":"そのメンバーが指定された文字の値を取ることができ、連結などの文字演算子によって操作できるデータ型"}],"confer":["enumeration type","integer type","logical type","real type"]}
{"number":"3.556","name":"characteristic entity","name_ja":"特性エンティティ","definitions":[{"text":"meta-entity that provides additional attribution for another meta-object","text_ja":"他のメタオブジェクトに追加の属性を提供するメタエンティティ","reference":"ISO/IEC 15474-1:2002 Informatio technology — CDIF framework — Part 1: Overview, 4.2"}],"note":"Other common names for characteristic entity are attributive entity and dependent entity. Each instance of a characteristic meta-entity is logically only related to one instance of one other meta-object, therefore an importer coul incorporate the meta-attributes of a characteristic meta-entity with those of the owning meta-object, where the owning m object is the one to which the characteristic meta-entity is related with a cardinality of 1:1"}
{"number":"3.557","name":"characteristic of FUR","name_ja":"FURの特性","definitions":[{"text":"a distinctive property of the FUR that is important for identifying the functional domain to which a specific set of FUR belongs","text_ja":"特定のFURセットが属する機能ドメインを識別するために重要なFURの特徴的な性質","reference":"ISO/IEC TR 14143-5:2004 Information technology — Software measurement — Functional size measurement — Part 5: Determination of functional domains for use with functional size measurement, 3.1"}]}
{"number":"3.558","name":"chart of accounts","name_ja":"勘定科目表","definitions":[{"text":"numbering system used by a project or organization to identify costs by category, such as labor, supplies, materials, and equipment","text_ja":"プロジェクトまたは組織が労働、供給品、材料、設備などのカテゴリ別にコストを識別するために使用する番号体系"}],"confer":["code of accounts"]}
{"number":"3.559","name":"checklist analysis","name_ja":"チェックリスト分析","definitions":[{"text":"a technique for systematically reviewing materials using a list for accuracy and completeness","text_ja":"正確性と完全性のためにリストを使用して材料を系統的にレビューする技術","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.560","name":"checkout","name_ja":"チェックアウト","definitions":[{"text":"testing conducted in the operational or support environment to ensure that a software product performs as required after installation.","text_ja":"インストール後にソフトウェア製品が要求どおりに動作することを確認するために、運用環境またはサポート環境で実施されるテスト。"}]}
{"number":"3.561","name":"checkpoint","name_ja":"チェックポイント","definitions":[{"text":"point in a computer program at which program state, status, or results are checked or recorded","text_ja":"プログラムの状態、ステータス、または結果がチェックまたは記録されるコンピュータプログラム内のポイント"},{"text":"object template derived from the state and structure of an engineering object that can be used to instantiate another engineering object, consistent with the state of the original object at the time of checkpointing","text_ja":"エンジニアリングオブジェクトの状態と構造から派生したオブジェクトテンプレートで、チェックポイント時点での元のオブジェクトの状態と一致する別のエンジニアリングオブジェクトをインスタンス化するために使用できる","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.20"}]}
{"number":"3.562","name":"checkpointing","name_ja":"チェックポインティング","definitions":[{"text":"creating a checkpoint","text_ja":"チェックポイントを作成すること","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.21"}],"note":"Checkpoints can only be created when the engineering object involved satisfies a pre-condition stated in a checkpointing policy"}
{"number":"3.563","name":"checksheets","name_ja":"チェックシート","definitions":[{"text":"a tally sheet that can be used as a checklist when gathering data","text_ja":"データを収集する際にチェックリストとして使用できる集計シート","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.564","name":"chief programmer","name_ja":"チーフプログラマー","definitions":[{"text":"leader of a chief programmer team; a senior-level programmer whose responsibilities include producing key portions of the software assigned to the team, coordinating the activities of the team, reviewing the work of the other team members, and having an overall technical understanding of the software being developed","text_ja":"チーフプログラマーチームのリーダー。チームに割り当てられたソフトウェアの重要な部分の作成、チームの活動の調整、他のチームメンバーの作業のレビュー、および開発されるソフトウェアの全体的な技術的理解を持つ責任を負う上級レベルのプログラマー"}],"confer":["backup programmer","chief programmer team"]}
{"number":"3.565","name":"chief programmer team","name_ja":"チーフプログラマーチーム","definitions":[{"text":"software development group that consists of a chief programmer, a backup programmer, a secretary/librarian, and additional programmers and specialists as needed, and that employs procedures designed to enhance group communication and to make optimum use of each member's skills","text_ja":"チーフプログラマー、バックアッププログラマー、秘書/ライブラリアン、および必要に応じて追加のプログラマーと専門家で構成されるソフトウェア開発グループで、グループコミュニケーションを向上させ、各メンバーのスキルを最適に活用するように設計された手順を採用する"}],"confer":["backup programmer","chief programmer","egoless programming"]}
{"number":"3.566","name":"child box","name_ja":"子ボックス","definitions":[{"text":"box in a child diagram","text_ja":"子図内のボックス","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.27"}]}
{"number":"3.567","name":"child diagram","name_ja":"子図","definitions":[{"text":"decomposition diagram related to a specific box by exactly one child/parent relationship","text_ja":"正確に1つの子/親関係によって特定のボックスに関連する分解図","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.28"}]}
{"number":"3.568","name":"child entity","name_ja":"子エンティティ","definitions":[{"text":"entity in a specific relationship whose instances can be related to zero or one instance of the other entity (parent entity)","text_ja":"特定の関係においてそのインスタンスが他のエンティティ（親エンティティ）の0個または1個のインスタンスと関連付けられうるエンティティ","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.22"}],"note":"[key style]"}
{"number":"3.569","name":"child tag","name_ja":"子タグ","definitions":[{"text":"tag that has a subsidiary relationship to another tag","text_ja":"他のタグに対して従属関係を持つタグ"}],"example":"child entitlement tags created for allocation purposes"}
{"number":"3.570","name":"CI","name_ja":"CI","definitions":[{"text":"configuration item","text_ja":"構成項目"}]}
{"number":"3.571","name":"CIDL","name_ja":"CIDL","definitions":[{"text":"Component Implementation Definition Language","text_ja":"コンポーネント実装定義言語","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3"}]}
{"number":"3.572","name":"CIF","name_ja":"CIF","definitions":[{"text":"Component Implementation Framework","text_ja":"コンポーネント実装フレームワーク","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3"}]}
{"number":"3.573","name":"CIM","name_ja":"CIM","definitions":[{"text":"Computer Integrated Manufacturing","text_ja":"コンピュータ統合製造","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.574","name":"clabject","name_ja":"クラブジェクト","definitions":[{"text":"dual entity that is a class and an object at the same time","text_ja":"クラスとオブジェクトの両方である二重エンティティ","reference":"ISO/IEC 24744:2014 Software Engineering — Metamodel for development methodologies, 3.13"}],"note":"Because of their dual nature, clabjects exhibit a class facet and an object facet, and can work as either at any time. Instances of powertypes are usually viewed as clabjects, since they are objects (because they are instances of a type, the powertype) and also classes (subtypes of the partitioned type)."}
{"number":"3.575","name":"claim","name_ja":"クレーム","definitions":[{"text":"a request, demand, or assertion of rights by a seller against a buyer, or vice versa, for consideration, compensation, or payment under the terms of a legally binding contract, such as for a disputed change","text_ja":"争議のある変更などについて、法的拘束力のある契約の条項の下で、売り手が買い手に対して、またはその逆に、考慮、補償、または支払いのために行う要求、要求、または権利の主張","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"true-false statement about the limitations on the values of an unambiguously defined property — called the claim's property — and limitations on the uncertainty of the property's values falling within these limitations during the claim's duration of applicability under stated conditions","text_ja":"明確に定義された性質（クレームの性質と呼ばれる）の値の制限と、述べられた条件下でのクレームの適用期間中にこれらの制限内に入る性質の値の不確実性の制限についての真偽文","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.1.2"},{"text":"proposition representing a requirement of the system-of-interest that enables th system-of-interest to achieve tolerable risk if it were met","text_ja":"システムオブインタレストが満たされた場合に許容可能なリスクを達成することを可能にするシステムオブインタレストの要求を表す命題","reference":"ISO/IEC 15026-3:2015 Systems and software engineering — Systems and software assurance — Part 3: System integrity levels, 3.2"}],"note":"Claims usually relate to specified versions of a product. The statement of a claim does not mean that the only possible intent or desire is to show it is true. Sometimes claims are made for the purpose of evaluating whether they are true or false or undertaking an effort to establish what is true. In its entirety, a claim is an unambiguous declaration of an assertion with any associated conditionality, giving explicit details including limitations on values and uncertainty. It could be about the future, present, or past. A safety goal is an instance of a claim."}
{"number":"3.576","name":"claims administration","name_ja":"クレーム管理","definitions":[{"text":"the process of processing, adjudicating, and communicating contract claims","text_ja":"契約クレームの処理、裁定、および伝達のプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.577","name":"class","name_ja":"クラス","definitions":[{"text":"abstraction of the knowledge and behavior of a set of similar things","text_ja":"類似のものの集合の知識と行動の抽象化","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.23"},{"text":"static programming entity in an object-oriented program that contains a combination of functionality and data3. of <X>s, the set of all <X>s satisfying a type","text_ja":"機能とデータの組み合わせを含むオブジェクト指向プログラムの静的プログラミングエンティティ。<X>の、型を満たすすべての<X>の集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.10"}],"confer":["type"],"note":"Classes are used to represent the notion of "things whose knowledge or actions are relevant.""}
{"number":"3.578","name":"class hierarchy","name_ja":"クラス階層","definitions":[{"text":"ordering of classes, in which a subclass is a specialization of its superclass","text_ja":"サブクラスがそのスーパークラスの特殊化であるクラスの順序付け"}],"note":"A class inherits attributes and relationships from its superclass and can define additional attributes and relationships of its own."}
{"number":"3.579","name":"class-level attribute","name_ja":"クラスレベル属性","definitions":[{"text":"mapping from the class itself to the instances of a value class","text_ja":"クラス自体から値クラスのインスタンスへのマッピング","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.24"}]}
{"number":"3.580","name":"class-level operation","name_ja":"クラスレベル操作","definitions":[{"text":"mapping from the (cross product of the) class itself and the instances of the input argument types to the (cross product of the) instances of the other (output) argument types","text_ja":"クラス自体と入力引数型のインスタンスの（直積）から他の（出力）引数型のインスタンスの（直積）へのマッピング","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.25"}]}
{"number":"3.581","name":"class-level responsibility","name_ja":"クラスレベル責任","definitions":[{"text":"responsibility that represents some aspect of the knowledge, behavior, or rules of the class as a whole","text_ja":"クラス全体の知識、行動、またはルールの何らかの側面を表す責任","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.26"}],"confer":["instance-level responsibility"],"example":"The total registeredVoterCount would be a class-level property of the class registeredVoter; there would be only one value of registeredVoterCount for the class as a whole."}
{"number":"3.582","name":"classification","name_ja":"分類","definitions":[{"text":"manner in which the assets are organized for ease of search and extraction within a reuse library","text_ja":"再利用ライブラリ内での検索と抽出を容易にするために資産が組織化される方法","reference":"IEEE 1517- 2010 IEEE Standard for Information Technology — System and software life cycle processes — Reuse processes, 3"}]}
{"number":"3.583","name":"classification axis","name_ja":"分類軸","definitions":[{"text":"total range of a mapping of systems and software for categorizing them from a particular perspective","text_ja":"特定の観点からシステムとソフトウェアを分類するためのマッピングの全範囲","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.7"}]}
{"number":"3.584","name":"clear","name_ja":"クリア","definitions":[{"text":"to set a variable, register, or other storage location to zero, blank, or other null value","text_ja":"変数、レジスタ、またはその他のストレージ位置をゼロ、空白、またはその他のnull値に設定すること"}],"confer":["initialize","reset"]}
{"number":"3.585","name":"clear text file encoding","name_ja":"クリアテキストファイルエンコーディング","definitions":[{"text":"class of techniques for representing data based on first defining a human readable representation using some specific character repertoire and then defining an encoding for that repertoire","text_ja":"まず特定の文字レパートリーを使用して人間が読める表現を定義し、次にそのレパートリーのエンコーディングを定義することに基づいてデータを表現するための技術のクラス","reference":"ISO/IEC 15474-1:2002 Information technology — CDIF framework — Part 1: Overview, 4.1"}]}
{"number":"3.586","name":"client","name_ja":"クライアント","definitions":[{"text":"code or process that invokes an operation on an object","text_ja":"オブジェクトに対する操作を呼び出すコードまたはプロセス","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.2.3"},{"text":"of a service, any entity capable of requesting the service","text_ja":"サービスにおいて、サービスを要求することができる任意のエンティティ","reference":"ISO/IEC 19500-1:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 1: Interfaces, 5.3"},{"text":"for certification, the organization that is responsible to a certification body for ensuring certification requirements, including product requirements, are fulfilled","text_ja":"認証において、製品要求を含む認証要求が満たされることを認証機関に対して保証する責任を負う組織","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.19"}]}
{"number":"3.587","name":"client object","name_ja":"クライアントオブジェクト","definitions":[{"text":"object which requests that a service be performed by another object","text_ja":"他のオブジェクトによってサービスが実行されることを要求するオブジェクト","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 13.4.5"}]}
{"number":"3.588","name":"client-side","name_ja":"クライアント側","definitions":[{"text":"node, cluster or capsule, which: a) contains a basic engineering object corresponding to a computational client object; and b) contains, or is potentially capable of containing, stub, binder and protocol objects in a channel supporting operations involving the client object","text_ja":"ノード、クラスター、またはカプセルで、以下を満たすもの：a）計算クライアントオブジェクトに対応する基本エンジニアリングオブジェクトを含む；b）クライアントオブジェクトを含む操作をサポートするチャネル内のスタブ、バインダー、およびプロトコルオブジェクトを含むか、それらを含む潜在的能力がある","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.5"}]}
{"number":"3.589","name":"clock pulse generator (CPG)","name_ja":"クロックパルス発生器（CPG）","definitions":[{"text":"electronic unit to produce uniform timed signals","text_ja":"均一なタイミング信号を生成する電子ユニット"}],"example":"embedded in an MCU"}
{"number":"3.590","name":"cloning","name_ja":"クローニング","definitions":[{"text":"instantiating a cluster from a cluster checkpoint","text_ja":"クラスタチェックポイントからクラスタをインスタンス化すること","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.24"}]}
{"number":"3.591","name":"Close Procurements","name_ja":"調達終了","definitions":[{"text":"the process of completing each project procurement","text_ja":"各プロジェクト調達を完了するプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.592","name":"Close Project or Phase","name_ja":"プロジェクト・フェーズ終了","definitions":[{"text":"the process of finalizing all activities across all of the project management process groups to formally complete a project or phase","text_ja":"プロジェクトまたはフェーズを正式に完了するために、すべてのプロジェクト管理プロセス群にわたる全活動を最終化するプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.593","name":"closed loop","name_ja":"閉ループ","definitions":[{"text":"loop that has no exit and whose execution can be interrupted only by intervention from outside the computer program or procedure in which the loop is located","text_ja":"出口を持たず、ループが配置されているコンピュータプログラムまたは手順の外部からの介入によってのみ実行を中断できるループ"}],"confer":["UNTIL","WHILE"],"confer_ja":["UNTIL","WHILE"]}
{"number":"3.594","name":"closed procurements","name_ja":"完了調達","definitions":[{"text":"project contracts or other procurement agreements that have been formally acknowledged by the proper authorizing agent as being finalized and signed off","text_ja":"適切な承認者によって最終化され承認されたことが正式に確認されたプロジェクト契約またはその他の調達合意","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.595","name":"closed subroutine","name_ja":"閉サブルーチン","definitions":[{"text":"subroutine that is stored at one given location rather than being copied into a computer program at each place that it is called","text_ja":"呼び出される各場所でコンピュータプログラムにコピーされるのではなく、一つの指定された場所に格納されるサブルーチン"}],"confer":["open subroutine"],"confer_ja":["開サブルーチン"]}
{"number":"3.596","name":"closed term","name_ja":"閉項","definitions":[{"text":"term comprising constants and operators but no variables","text_ja":"定数と演算子を含むが変数を含まない項","reference":"ISO/IEC 15909-1:2004 Software and system engineering — High-level Petri nets — Part 1: Concepts, definitions and graphical notation, 2.1.24.1"}],"alias":["ground term"],"alias_ja":["基底項"]}
{"number":"3.597","name":"closing process group","name_ja":"終了プロセス群","definitions":[{"text":"those processes performed to finalize all activities across all Process Groups to formally close a project or phase","text_ja":"プロジェクトまたはフェーズを正式に終了するために、すべてのプロセス群にわたる全活動を最終化するために実行されるプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.598","name":"cluster","name_ja":"クラスタ","definitions":[{"text":"configuration of basic engineering objects forming a single unit for the purposes of deactivation, checkpointing, reactivation, recovery and migration","text_ja":"非活性化、チェックポイント、再活性化、回復、移行の目的で単一の単位を形成する基本エンジニアリングオブジェクトの構成","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.2"}],"example":"a segment of virtual memory containing objects","example_ja":"オブジェクトを含む仮想メモリのセグメント"}
{"number":"3.599","name":"cluster checkpoint","name_ja":"クラスタチェックポイント","definitions":[{"text":"cluster template containing checkpoints of the basic engineering objects in a cluster","text_ja":"クラスタ内の基本エンジニアリングオブジェクトのチェックポイントを含むクラスタテンプレート","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.22"}]}
{"number":"3.600","name":"cluster manager","name_ja":"クラスタマネージャ","definitions":[{"text":"engineering object which manages the basic engineering objects in a cluster","text_ja":"クラスタ内の基本エンジニアリングオブジェクトを管理するエンジニアリングオブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.3"}]}
{"number":"3.601","name":"cluster template","name_ja":"クラスタテンプレート","definitions":[{"text":"object template for a configuration of objects and any activity required to instantiate those objects and establish initial bindings","text_ja":"オブジェクトの構成とそれらのオブジェクトをインスタンス化し初期バインディングを確立するために必要な活動のためのオブジェクトテンプレート","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.19"}]}
{"number":"3.602","name":"CM","name_ja":"CM","definitions":[{"text":"configuration management","text_ja":"構成管理"}]}
{"number":"3.603","name":"CM service","name_ja":"CMサービス","definitions":[{"text":"abstract description of work done by CM tools","text_ja":"CMツールによって実行される作業の抽象的な記述","reference":"ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.8"}],"alias":["configuration management service"],"alias_ja":["構成管理サービス"]}
{"number":"3.604","name":"CM tool","name_ja":"CMツール","definitions":[{"text":"software product that can assist software engineers by providing automated support for configuration management activities","text_ja":"構成管理活動の自動化支援を提供することでソフトウェアエンジニアを支援できるソフトウェア製品","reference":"ISO/IEC TR 18018:2010 Information technology — Systems and software engineering — Guide for configuration management tool capabilities, 3.9"}],"alias":["configuration management tool"],"alias_ja":["構成管理ツール"]}
{"number":"3.605","name":"CMDB","name_ja":"CMDB","definitions":[{"text":"configuration management database","text_ja":"構成管理データベース","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.606","name":"CMIP","name_ja":"CMIP","definitions":[{"text":"Common Management Information Protocol","text_ja":"共通管理情報プロトコル","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.607","name":"CMIR","name_ja":"CMIR","definitions":[{"text":"client makes it right","text_ja":"クライアントが正しくする","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.608","name":"CMIS","name_ja":"CMIS","definitions":[{"text":"Common Management Information Service","text_ja":"共通管理情報サービス","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.609","name":"CMP","name_ja":"CMP","definitions":[{"text":"configuration management plan","text_ja":"構成管理計画","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.610","name":"CMS","name_ja":"CMS","definitions":[{"text":"configuration management system","text_ja":"構成管理システム","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.611","name":"CMT","name_ja":"CMT","definitions":[{"text":"container-managed transaction","text_ja":"コンテナ管理トランザクション","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3"}]}
{"number":"3.612","name":"CNCS","name_ja":"CNCS","definitions":[{"text":"Client Native Code Set","text_ja":"クライアントネイティブコードセット","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.613","name":"co-existence","name_ja":"共存性","definitions":[{"text":"degree to which a product can perform its required functions efficiently while sharing a common environment and resources with other products, without detrimental impact on any other product","text_ja":"製品が他の製品と共通の環境とリソースを共有しながら、他の製品に有害な影響を与えることなく、必要な機能を効率的に実行できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.3.1"}]}
{"number":"3.614","name":"code","name_ja":"コード","definitions":[{"text":"in software engineering, computer instructions and data definitions expressed in a programming language or in a form output by an assembler, compiler, or other translator","text_ja":"ソフトウェア工学において、プログラミング言語で表現された、またはアセンブラ、コンパイラ、その他の翻訳器によって出力された形式のコンピュータ命令とデータ定義"},{"text":"to express a computer program in a programming language","text_ja":"コンピュータプログラムをプログラミング言語で表現すること"},{"text":"character or bit pattern that is assigned a particular meaning","text_ja":"特定の意味が割り当てられた文字またはビットパターン"}],"confer":["source code","object code","machine code","micro code"],"confer_ja":["ソースコード","オブジェクトコード","機械コード","マイクロコード"],"example":"a status code","example_ja":"ステータスコード"}
{"number":"3.615","name":"code breakpoint","name_ja":"コードブレークポイント","definitions":[{"text":"breakpoint that is initiated upon execution of a given computer instruction","text_ja":"指定されたコンピュータ命令の実行時に開始されるブレークポイント"}],"alias":["control breakpoint"],"alias_ja":["制御ブレークポイント"],"confer":["data breakpoint","dynamic breakpoint","epilog breakpoint","programmable breakpoint","prolog breakpoint","static breakpoint"],"confer_ja":["データブレークポイント","動的ブレークポイント","エピログブレークポイント","プログラマブルブレークポイント","プロログブレークポイント","静的ブレークポイント"]}
{"number":"3.616","name":"code freeze","name_ja":"コードフリーズ","definitions":[{"text":"period during which non-critical changes to the code are not allowe","text_ja":"コードへの非重要な変更が許可されない期間"}]}
{"number":"3.617","name":"code generator","name_ja":"コードジェネレータ","definitions":[{"text":"software tool that accepts as input the requirements or design for a computer program and produces source code that implements the requirements or design generator","text_ja":"コンピュータプログラムの要件や設計を入力として受け入れ、要件や設計ジェネレータを実装するソースコードを生成するソフトウェアツール"}],"confer":["application"],"confer_ja":["アプリケーション"]}
{"number":"3.618","name":"code of accounts","name_ja":"勘定科目コード","definitions":[{"text":"a numbering system used to uniquely identify each component of the work breakdown structure (WBS)","text_ja":"作業分解構造（WBS）の各構成要素を一意に識別するために使用される番号体系","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["chart of accounts"],"confer_ja":["勘定科目表"]}
{"number":"3.619","name":"code of ethics standard","name_ja":"倫理規程標準","definitions":[{"text":"standard that describes the characteristics of a set of moral principles dealing with accepted standards of conduct by, within, and among professionals","text_ja":"専門職による、専門職内での、および専門職間の受け入れられた行動基準を扱う道徳原則の集合の特性を記述する標準"}]}
{"number":"3.620","name":"code review","name_ja":"コードレビュー","definitions":[{"text":"meeting at which software code is presented to project personnel, managers, users, customers, or other interested parties for comment or approval","text_ja":"ソフトウェアコードがプロジェクト要員、管理者、ユーザ、顧客、またはその他の関係者にコメントや承認のために提示される会議"}],"confer":["design review","formal qualification review","requirements review","test readiness review"],"confer_ja":["設計レビュー","正式適格性レビュー","要件レビュー","テスト準備レビュー"]}
{"number":"3.621","name":"code tuning","name_ja":"コードチューニング","definitions":[{"text":"process of making statement-level changes to a program to make it more efficient2. changes made to program source code for the purpose of optimizing performance, usually to increase speed or reduce memory usage","text_ja":"プログラムをより効率的にするために文レベルの変更を行うプロセス。通常は速度を向上させるかメモリ使用量を削減するために、性能を最適化する目的でプログラムソースコードに行われる変更"}]}
{"number":"3.622","name":"coding","name_ja":"コーディング","definitions":[{"text":"in software engineering, the process of expressing a computer program in a programming language","text_ja":"ソフトウェア工学において、コンピュータプログラムをプログラミング言語で表現するプロセス"},{"text":"transforming of logic and data from design specifications (design descriptions) into a programming language","text_ja":"設計仕様書（設計記述）からロジックとデータをプログラミング言語に変換すること"}]}
{"number":"3.623","name":"coerce","name_ja":"強制変換","definitions":[{"text":"to treat an object of one type as an object of another type by using a different object","text_ja":"異なるオブジェクトを使用してある型のオブジェクトを別の型のオブジェクトとして扱うこと","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.28"}],"confer":["cast"],"confer_ja":["キャスト"]}
{"number":"3.624","name":"cognitive level","name_ja":"認知レベル","definitions":[{"text":"qualitative assessment of an individual's familiarity with a given topic","text_ja":"特定のトピックに対する個人の習熟度の定性的評価","reference":"ISO/IEC 24773:2008 Software engineering -Certification of software engineering professionals -Comparison framework, 3.3"}]}
{"number":"3.625","name":"cohesion","name_ja":"結合度","definitions":[{"text":"manner and degree to which the tasks performed by a single software module are related to one another","text_ja":"単一のソフトウェアモジュールによって実行されるタスクが互いに関連している方法と程度"},{"text":"in software design, a measure of the strength of association of the elements within a module [ISO/IEC TR 19759:2016, Software Engineering — Guide to the Software Engineering Body of Knowledge (SWEBOK)], 2.1.4","text_ja":"ソフトウェア設計において、モジュール内の要素の結合の強さの尺度"}],"alias":["module strength"],"alias_ja":["モジュール強度"],"confer":["coupling"],"confer_ja":["結合"],"note":"Types include coincidental, communicational, functional, logical, procedural, sequential, and temporal.","note_ja":"タイプには偶発的、通信的、機能的、論理的、手続き的、順次的、時間的が含まれる。"}
{"number":"3.626","name":"coincidental cohesion","name_ja":"偶発的結合度","definitions":[{"text":"type of cohesion in which the tasks performed by a software module have no functional relationship to one another","text_ja":"ソフトウェアモジュールによって実行されるタスクが互いに機能的関係を持たない結合度のタイプ"}],"confer":["communicational cohesion","functional cohesion","logical cohesion","procedural cohesion","sequential cohesion","temporal cohesion"],"confer_ja":["通信的結合度","機能的結合度","論理的結合度","手続き的結合度","順次的結合度","時間的結合度"]}
{"number":"3.627","name":"collaboration","name_ja":"協調","definitions":[{"text":"cooperative exchange of requests among classes and instances in order to achieve some goal","text_ja":"何らかの目標を達成するためのクラスとインスタンス間の要求の協調的交換","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.29"}]}
{"number":"3.628","name":"collapse","name_ja":"折りたたみ","definitions":[{"text":"to terminate development on one branch by integrating it with another","text_ja":"あるブランチを他のブランチと統合することによって、そのブランチでの開発を終了すること"}]}
{"number":"3.629","name":"Collect Requirements","name_ja":"要件収集","definitions":[{"text":"the process of determining, documenting, and managing stakeholder needs and requirements to meet project objectives","text_ja":"プロジェクト目標を満たすためのステークホルダーのニーズと要件を決定し、文書化し、管理するプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.630","name":"collection","name_ja":"集合","definitions":[{"text":"unrestricted grouping of software behavior concept instances into a particular named subset","text_ja":"ソフトウェア動作概念インスタンスの特定の名前付きサブセットへの制限のないグループ化","reference":"IEEE 1175.3-2004 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying Software Behavior"}]}
{"number":"3.631","name":"collection cardinality","name_ja":"集合カーディナリティ","definitions":[{"text":"specification, for a collection-valued property, of how many members the value of the property, that is, the collection, can or is required to have for each instance","text_ja":"集合値プロパティについて、プロパティの値（すなわち集合）が各インスタンスについて持つことができる、または持つことが要求されるメンバー数の仕様","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.30"}],"confer":["cardinality constraint"],"confer_ja":["カーディナリティ制約"]}
{"number":"3.632","name":"collection class","name_ja":"集合クラス","definitions":[{"text":"class in which each instance is a group of instances of other classes","text_ja":"各インスタンスが他のクラスのインスタンスのグループであるクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.31"}]}
{"number":"3.633","name":"collection-valued","name_ja":"集合値","definitions":[{"text":"value that is complex","text_ja":"複雑な値","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.33"}],"confer":["scalar"],"confer_ja":["スカラー"],"note":"That is, having constituent parts.","note_ja":"すなわち、構成要素を持つ。"}
{"number":"3.634","name":"collection-valued class","name_ja":"集合値クラス","definitions":[{"text":"class in which each instance is a collection of values","text_ja":"各インスタンスが値の集合であるクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.34"}],"confer":["scalar-valued class"],"confer_ja":["スカラー値クラス"]}
{"number":"3.635","name":"collection-valued property","name_ja":"集合値プロパティ","definitions":[{"text":"property that maps to a collection class","text_ja":"集合クラスにマップするプロパティ","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.35"}],"alias":["collection property"],"alias_ja":["集合プロパティ"],"confer":["scalar-valued property"],"confer_ja":["スカラー値プロパティ"]}
{"number":"3.636","name":"colocation","name_ja":"コロケーション","definitions":[{"text":"an organizational placement strategy where the project team members are physically located close to one another in order to improve communication, working relationships, and productivity","text_ja":"コミュニケーション、作業関係、生産性を向上させるために、プロジェクトチームメンバーが物理的に互いに近くに配置される組織配置戦略","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.637","name":"comfort","name_ja":"快適性","definitions":[{"text":"degree to which the user is satisfied with physical comfort","text_ja":"ユーザが物理的快適性に満足している程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.1.3.4"}]}
{"number":"3.638","name":"command","name_ja":"コマンド","definitions":[{"text":"expression that can be input to a computer system to initiate an action or affect the execution of a computer program","text_ja":"動作を開始するかコンピュータプログラムの実行に影響を与えるためにコンピュータシステムに入力できる式"}],"example":"the 'logon' command to initiate a computer session","example_ja":"コンピュータセッションを開始するための'logon'コマンド"}
{"number":"3.639","name":"command language","name_ja":"コマンド言語","definitions":[{"text":"language used to express commands to a computer system","text_ja":"コンピュータシステムにコマンドを表現するために使用される言語"}],"confer":["command-driven"],"confer_ja":["コマンド駆動"]}
{"number":"3.640","name":"command-driven","name_ja":"コマンド駆動","definitions":[{"text":"pertaining to a system or mode of operation in which the user directs the system through commands","text_ja":"ユーザがコマンドを通じてシステムを指示するシステムまたは動作モードに関する"}],"confer":["menu-driven"],"confer_ja":["メニュー駆動"]}
{"number":"3.641","name":"comment","name_ja":"コメント","definitions":[{"text":"information embedded within a computer program, job control statements, or a set of data that provides clarification to human readers but does not affect machine interpretation","text_ja":"コンピュータプログラム、ジョブ制御文、またはデータ集合内に埋め込まれた、人間の読者に明確化を提供するが機械解釈に影響しない情報"}]}
{"number":"3.642","name":"commercial-off-the-shelf (COTS)","name_ja":"商用既製品（COTS）","definitions":[{"text":"[software] product available for purchase and use without the need to conduct development activities","text_ja":"開発活動を実施する必要なく購入して使用できる[ソフトウェア]製品","reference":"ISO/IEC 90003:2014 Software engineering — Guidelines for the application of ISO 9001:2008 to computer software, 3.4; ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.4"}],"confer":["software product"],"confer_ja":["ソフトウェア製品"],"note":"COTS software product includes the product description (including all cover information, data sheet, web site information, etc.), the user documentation (necessary to install and use the software), the software contained on a computer sensible media (disk, CD-ROM, internet downloadable, etc.). Software is mainly composed of programs and data. This definition applies also to product descriptions, user documentation and software which are produced and supported as separate manufactured goods, but for which typical commercial fees and licensing considerations do not apply.","note_ja":"COTSソフトウェア製品には、製品記述（すべてのカバー情報、データシート、ウェブサイト情報等を含む）、ユーザ文書（ソフトウェアのインストールと使用に必要）、コンピュータ可読媒体（ディスク、CD-ROM、インターネットダウンロード可能等）に含まれるソフトウェアが含まれる。ソフトウェアは主にプログラムとデータから構成される。この定義は、別個の製造商品として生産・サポートされるが、典型的な商用料金とライセンス考慮が適用されない製品記述、ユーザ文書、ソフトウェアにも適用される。"}
{"number":"3.643","name":"commercial-off-the-shelf software product","name_ja":"商用既製ソフトウェア製品","definitions":[{"text":"software product defined by a market-driven need, commercially available, and whose fitness for use has been demonstrated by a broad spectrum of commercial users","text_ja":"市場駆動ニーズによって定義され、商用で入手可能で、幅広い商用ユーザによって使用適合性が実証されたソフトウェア製品","reference":"ISO/IEC 25040:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation process, 4.6"}],"alias":["COTS software product"],"alias_ja":["COTSソフトウェア製品"]}
{"number":"3.644","name":"commit","name_ja":"コミット","definitions":[{"text":"to integrate the changes made to a developer's private view of the source code into a branch accessible through the version control system's repository","text_ja":"開発者のソースコードの私的ビューに行われた変更を、バージョン管理システムのリポジトリを通じてアクセス可能なブランチに統合すること"}]}
{"number":"3.645","name":"commit message","name_ja":"コミットメッセージ","definitions":[{"text":"explanatory message accompanying a commit","text_ja":"コミットに付随する説明メッセージ"}],"note":"often contains a brief description of the change and its rationale; names of contributors, reviewers, or approvers; a reference to third-party software from which the change was obtained; a schedule for integrating it to other branches; and a reference to the issue identifier associated with the change","note_ja":"しばしば変更の簡潔な説明とその根拠、貢献者・査読者・承認者の名前、変更が取得された第三者ソフトウェアへの参照、他のブランチへの統合スケジュール、変更に関連付けられた課題識別子への参照を含む"}
{"number":"3.646","name":"commit privileges","name_ja":"コミット権限","definitions":[{"text":"person's authority to commit changes","text_ja":"変更をコミットする人の権限"}],"note":"Sometimes privileges are associated with a specific part of the product (for example, artwork or documentation) or a specific branch.","note_ja":"時として権限は製品の特定部分（例えば、アートワークや文書）または特定のブランチに関連付けられる。"}
{"number":"3.647","name":"commit war","name_ja":"コミット戦争","definitions":[{"text":"series of conflicting and mutually reversing commits introduced by developers who disagree on how a particular element is being coded","text_ja":"特定の要素のコーディング方法について意見が分かれる開発者によって導入される、競合し相互に取り消すコミットの連続"}],"note":"sometimes starts with a hostile backout.","note_ja":"時として敵対的なバックアウトから始まる。"}
{"number":"3.648","name":"commit window","name_ja":"コミットウィンドウ","definitions":[{"text":"period during which commits are allowed for a specific branch","text_ja":"特定のブランチに対してコミットが許可される期間"}],"note":"In some development environments, commit windows for a maintenance branch might only open for short periods a few times a year.","note_ja":"一部の開発環境では、保守ブランチのコミットウィンドウは年に数回、短期間のみ開かれる場合がある。"}
{"number":"3.649","name":"commitment","name_ja":"コミットメント","definitions":[{"text":"action resulting in an obligation by one or more of the participants in the act to comply with a rule or perform a contract","text_ja":"行為の参加者の一人以上が規則に従うまたは契約を履行する義務をもたらす行為","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.6.2"}],"note":"The enterprise object(s) participating in an action of commitment can be parties or agents acting on behalf of a party or parties. In the case of an action of commitment by an agent, the principal becomes obligated.","note_ja":"コミットメント行為に参加するエンタープライズオブジェクトは、当事者または当事者の代理として行動するエージェントであり得る。エージェントによるコミットメント行為の場合、本人が義務を負う。"}
{"number":"3.650","name":"committer","name_ja":"コミッター","definitions":[{"text":"developer with commit privileges","text_ja":"コミット権限を持つ開発者"}]}
{"number":"3.651","name":"common ancestor constraint","name_ja":"共通祖先制約","definitions":[{"text":"constraint that involves two or more relationship paths to the same ancestor class and states either that a descendent instance must be related to the same ancestor instance through each path or that it must be related to a different ancestor instance through each path","text_ja":"同じ祖先クラスへの二つ以上の関係パスを含み、子孫インスタンスが各パスを通じて同じ祖先インスタンスに関連しなければならない、または各パスを通じて異なる祖先インスタンスに関連しなければならないことを述べる制約","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.36"}]}
{"number":"3.652","name":"common cause","name_ja":"共通原因","definitions":[{"text":"source of variation of a process that exists because of normal and expected interactions among components of a process","text_ja":"プロセスの構成要素間の正常で期待される相互作用のために存在するプロセスの変動の源泉"}],"alias":["random cause"],"alias_ja":["ランダム原因"],"confer":["special cause"],"confer_ja":["特殊原因"],"note":"On a control chart, it appears as part of the random process variation (i.e., variation from a process that would be considered normal or not unusual), and is indicated by a random pattern of points within the control limits.","note_ja":"管理図では、ランダムプロセス変動の一部として（すなわち、正常または異常でないと考えられるプロセスからの変動として）現れ、管理限界内の点のランダムパターンによって示される。"}
{"number":"3.653","name":"common storage","name_ja":"共通記憶領域","definitions":[{"text":"portion of main storage that can be accessed by two or more modules in a software system","text_ja":"ソフトウェアシステム内の二つ以上のモジュールによってアクセスできる主記憶装置の部分"}],"alias":["common area","common block"],"alias_ja":["共通領域","共通ブロック"],"confer":["global data"],"confer_ja":["大域データ"]}
{"number":"3.654","name":"common-environment coupling","name_ja":"共通環境結合","definitions":[{"text":"type of coupling in which two software modules access a common data area","text_ja":"二つのソフトウェアモジュールが共通データ領域にアクセスする結合のタイプ"}],"alias":["common coupling"],"alias_ja":["共通結合"],"confer":["content coupling","control coupling","data coupling","hybrid coupling","pathological coupling"],"confer_ja":["内容結合","制御結合","データ結合","ハイブリッド結合","病理的結合"]}
{"number":"3.655","name":"commonality","name_ja":"共通性","definitions":[{"text":"set of functional and non-functional characteristics that is shared by all applications belonging to the product line","text_ja":"製品ラインに属するすべてのアプリケーションによって共有される機能的および非機能的特性の集合","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.9"}]}
{"number":"3.656","name":"communication constraints","name_ja":"コミュニケーション制約","definitions":[{"text":"restrictions on the content, timing, audience, or individual who will deliver a communication usually stemming from specific legislation or regulation, technology, or organizational policies","text_ja":"特定の法律や規制、技術、または組織方針に起因することが多い、コミュニケーションの内容、タイミング、対象者、または配信する個人に対する制限","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.657","name":"communication interface","name_ja":"通信インターフェイス","definitions":[{"text":"interface of a protocol object that can be bound to an interface of either an interceptor object or another protocol object at an interworking reference point","text_ja":"相互動作参照点において、インターセプタオブジェクトまたは他のプロトコルオブジェクトのインターフェイスにバインドできるプロトコルオブジェクトのインターフェイス","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.14"}]}
{"number":"3.658","name":"communication management","name_ja":"通信管理","definitions":[{"text":"management of objects which support the communication between objects within an ODP system","text_ja":"ODPシステム内のオブジェクト間の通信を支援するオブジェクトの管理","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 14.2"}]}
{"number":"3.659","name":"communication management plan","name_ja":"コミュニケーション管理計画","definitions":[{"text":"a component of the project, program, or portfolio management plan that describes how, when, and by whom information about the project will be administered and disseminated","text_ja":"プロジェクトに関する情報がどのように、いつ、誰によって管理され配布されるかを記述するプロジェクト、プログラム、またはポートフォリオ管理計画の構成要素","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.660","name":"communication methods","name_ja":"コミュニケーション方法","definitions":[{"text":"a systematic procedure, technique, or process used to transfer information among project stakeholders","text_ja":"プロジェクト利害関係者間で情報を伝達するために使用される体系的手順、技法、またはプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.661","name":"communication models","name_ja":"コミュニケーションモデル","definitions":[{"text":"a description, analogy or schematic used to represent how the communication process will be performed for the project","text_ja":"プロジェクトのコミュニケーションプロセスがどのように実行されるかを表現するために使用される記述、類推、または図式","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.662","name":"communication requirements analysis","name_ja":"コミュニケーション要求分析","definitions":[{"text":"an analytical technique to determine the information needs of the project stakeholders through interviews, workshops, study of lessons learned from previous projects, etc.","text_ja":"インタビュー、ワークショップ、過去のプロジェクトからの教訓の研究等を通じて、プロジェクト利害関係者の情報ニーズを決定する分析技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.663","name":"communication technology (CT)","name_ja":"コミュニケーション技術（CT）","definitions":[{"text":"specific tools, systems, computer programs, etc., used to transfer information among project stakeholders","text_ja":"プロジェクト利害関係者間で情報を伝達するために使用される特定のツール、システム、コンピュータプログラム等","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.664","name":"communicational cohesion","name_ja":"通信的結合度","definitions":[{"text":"type of cohesion in which the tasks performed by a software module use the same input data or contribute to producing the same output data","text_ja":"ソフトウェアモジュールによって実行されるタスクが同じ入力データを使用するか、同じ出力データの生成に貢献する結合度のタイプ"}],"confer":["coincidental cohesion","functional cohesion","logical cohesion","procedural cohesion","sequential cohesion","temporal cohesion"],"confer_ja":["偶発的結合度","機能的結合度","論理的結合度","手続き的結合度","順次的結合度","時間的結合度"]}
{"number":"3.665","name":"communications domain","name_ja":"通信ドメイン","definitions":[{"text":"set of protocol objects capable of interworking","text_ja":"相互動作が可能なプロトコルオブジェクトの集合","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.13"}]}
{"number":"3.666","name":"communications planning","name_ja":"コミュニケーション計画","definitions":[{"text":"process of defining how to meet the information and communication needs of the stakeholders: who needs what information, when they need it, and how it will be given to them","text_ja":"利害関係者の情報とコミュニケーションのニーズをどのように満たすかを定義するプロセス：誰がどの情報を必要とし、いつそれを必要とし、どのようにそれが提供されるか"}]}
{"number":"3.667","name":"community","name_ja":"コミュニティ","definitions":[{"text":"configuration of objects formed to meet an objective","text_ja":"目的を満たすために形成されたオブジェクトの構成","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 5.1.1"}],"note":"The objective is expressed as a contract which specifies how the objective can be met.","note_ja":"目的は、その目的がどのように満たされるかを指定する契約として表現される。"}
{"number":"3.668","name":"community object","name_ja":"コミュニティオブジェクト","definitions":[{"text":"composite enterprise object that represents a community","text_ja":"コミュニティを表現する複合エンタープライズオブジェクト","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.2.2"}],"note":"Components of a community object are objects of the community represented","note_ja":"コミュニティオブジェクトの構成要素は、表現されるコミュニティのオブジェクトである"}
{"number":"3.669","name":"compact disc read only memory (CD-ROM)","name_ja":"コンパクトディスク読み取り専用メモリ（CD-ROM）","definitions":[{"text":"optical disk which can be read, but not erased or rewritten","text_ja":"読み取りは可能であるが、消去や再書き込みができない光ディスク"}]}
{"number":"3.670","name":"compaction","name_ja":"コンパクション","definitions":[{"text":"in microprogramming, the process of converting a microprogram into a functionally equivalent microprogram that is faster or shorter than the original","text_ja":"マイクロプログラミングにおいて、マイクロプログラムを元のものより高速または短い機能的に等価なマイクロプログラムに変換するプロセス"}],"confer":["local compaction","global compaction"],"confer_ja":["局所コンパクション","大域コンパクション"]}
{"number":"3.671","name":"comparator","name_ja":"比較器","definitions":[{"text":"software tool that compares two computer programs, files, or sets of data to identify commonalities or differences","text_ja":"二つのコンピュータプログラム、ファイル、またはデータ集合を比較して共通点や相違点を識別するソフトウェアツール"}],"note":"Typical objects of comparison are similar versions of source code, object code, database files, or test results.","note_ja":"典型的な比較対象は、ソースコード、オブジェクトコード、データベースファイル、またはテスト結果の類似バージョンである。"}
{"number":"3.672","name":"compatibility","name_ja":"互換性","definitions":[{"text":"degree to which a product, system or component can exchange information with other products, systems or components, or perform its required functions, while sharing the same hardware or software environment","text_ja":"製品、システム、またはコンポーネントが、同じハードウェアまたはソフトウェア環境を共有しながら、他の製品、システム、またはコンポーネントと情報を交換したり、必要な機能を実行したりできる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.3"},{"text":"ability of two or more systems or components to exchange information","text_ja":"二つ以上のシステムまたはコンポーネントが情報を交換する能力"},{"text":"capability of a functional unit to meet the requirements of a specified interface without appreciable modification","text_ja":"機能単位が、顕著な修正なしに指定されたインターフェイスの要求を満たす能力","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.673","name":"compatibility testing","name_ja":"互換性テスト","definitions":[{"text":"type of testing that measures the degree to which a test item can function satisfactorily alongside other independent products in a shared environment (co-existence), and where necessary, exchanges information with other systems or components (interoperability).","text_ja":"テスト項目が共有環境において他の独立した製品と共に満足に機能できる程度（共存性）、および必要に応じて他のシステムやコンポーネントと情報を交換する程度（相互運用性）を測定するテストのタイプ","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.6"}]}
{"number":"3.674","name":"compensatory decision technique","name_ja":"補償的決定技法","definitions":[{"text":"multiple-attribute decision technique that allows better performance in some of the attributes to compensate for lower performance in one or more of the other attributes; use of trade-off","text_ja":"一つ以上の他の属性におけるより低い性能を補償するために、いくつかの属性におけるより良い性能を許可する多属性決定技法；トレードオフの使用"}],"confer":["noncompensatory decision technique","additive weighting","analytic hierarchy process","nondimensional scaling"],"confer_ja":["非補償的決定技法","加算重み付け","階層分析手法","無次元スケーリング"]}
{"number":"3.675","name":"compensatory model","name_ja":"補償モデル","definitions":[{"text":"multiple-criteria decision-making model, in which a composite measure is composed of individually weighte terms and where criteria (also referred to as attribute terms) with a high value can compensate for those of a low value in proportion to each weight","text_ja":"個別に重み付けされた項で構成される複合尺度を持ち、高い値を持つ基準（属性項とも呼ばれる）が各重みに比例して低い値の基準を補償できる多基準意思決定モデル","reference":"ISO/IEC 33003:2015 Information technology — Process assessment — Requirements for process measurement frameworks, 3.2"}],"note":"A compensatory model suggests that improving the more important measures (those with a higher weighting) is more likely to increase or improve the overall composite value than improving the less important ones. This model assumes that the weight (influence level) of criteria remains the same regardless of the measured level of the criteria.","note_ja":"補償モデルは、より重要な尺度（より高い重み付けを持つもの）を改善することが、重要度の低いものを改善するよりも全体的な複合値を増加または改善する可能性が高いことを示唆している。このモデルは、基準の重み（影響レベル）が基準の測定レベルに関係なく同じままであることを仮定している。"}
{"number":"3.676","name":"competence","name_ja":"能力","definitions":[{"text":"demonstrated ability to apply knowledge and skills, and relevant personal attributes, as defined in the certification scheme","text_ja":"認証スキームで定義された、知識とスキル、および関連する個人的属性を適用する実証された能力","reference":"ISO/IEC TR 29154:2013, Software engineering — Guide for the application of ISO/IEC 24773:2008 (Certification of software engineering professionals — Comparison framework), 3.3"}],"confer":["competent"],"confer_ja":["有能な"]}
{"number":"3.677","name":"competent","name_ja":"有能な","definitions":[{"text":"having the combination of knowledge, formal and informal skills, training, experience, and behavioral attributes required to perform a task or role","text_ja":"タスクや役割を実行するために必要な知識、正式および非正式なスキル、訓練、経験、および行動属性の組み合わせを持つ"}],"confer":["competence"],"confer_ja":["能力"]}
{"number":"3.678","name":"competent assessor","name_ja":"有能な評価者","definitions":[{"text":"assessor who has demonstrated the competencies to conduct an assessment and to monitor and verify the conformance of a process assessment [ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.19],","text_ja":"評価を実施し、プロセス評価の適合性を監視・検証する能力を実証した評価者","reference":"ISO/IEC 33001:2015 Information technology — Process assessment — Concepts and terminology, 3.2.12"}],"alias":["lead assessor"],"alias_ja":["主任評価者"]}
{"number":"3.679","name":"compile","name_ja":"コンパイル","definitions":[{"text":"to translate a computer program expressed in a high-order language into its machine language equivalen","text_ja":"高水準言語で表現されたコンピュータプログラムをその機械語等価物に翻訳すること"}],"confer":["assemble","decompile","interpret"],"confer_ja":["アセンブル","逆コンパイル","解釈"]}
{"number":"3.680","name":"compile-and-go","name_ja":"コンパイル・アンド・ゴー","definitions":[{"text":"operating technique in which there are no stops between the compiling, linking, loading, and execution of a computer program","text_ja":"コンピュータプログラムのコンパイル、リンク、ローディング、実行の間に停止がない動作技法"}]}
{"number":"3.681","name":"compiler","name_ja":"コンパイラ","definitions":[{"text":"computer program that translates programs expressed in a high-order language into their machine language equivalents","text_ja":"高水準言語で表現されたプログラムをその機械語等価物に翻訳するコンピュータプログラム"}],"confer":["assembler","interpreter","cross-compiler","incremental compiler","root compiler"],"confer_ja":["アセンブラ","インタープリタ","クロスコンパイラ","増分コンパイラ","ルートコンパイラ"]}
{"number":"3.682","name":"compiler code","name_ja":"コンパイラコード","definitions":[{"text":"computer instructions and data definitions expressed in a form that can be recognized and processed by a compiler","text_ja":"コンパイラによって認識・処理できる形式で表現されたコンピュータ命令とデータ定義"}],"confer":["assembly code","interpretive code","machine code"],"confer_ja":["アセンブリコード","解釈的コード","機械コード"]}
{"number":"3.683","name":"compiler directive source statement","name_ja":"コンパイラディレクティブソース文","definitions":[{"text":"source statement that defines macros, or labels, or directs the compiler to insert external source statements (for example, an include statement), or directs conditional compilation, or is not described by one of the other type attributes","text_ja":"マクロやラベルを定義するか、コンパイラに外部ソース文の挿入を指示する（例えば、include文）か、条件付きコンパイルを指示するか、または他のタイプ属性のいずれによっても記述されないソース文"}]}
{"number":"3.684","name":"compiler generator","name_ja":"コンパイラジェネレータ","definitions":[{"text":"translator or interpreter used to construct part or all of a compiler","text_ja":"コンパイラの一部または全部を構築するために使用される翻訳器またはインタープリタ"}],"alias":["compiler compiler","metacompiler"],"alias_ja":["コンパイラコンパイラ","メタコンパイラ"]}
{"number":"3.685","name":"complaint","name_ja":"苦情","definitions":[{"text":"record of perceived non-compliance with a service level agreement or customer dissatisfaction with servic","text_ja":"サービスレベル合意への認識された非準拠またはサービスに対する顧客不満の記録","reference":"ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.2"}]}
{"number":"3.686","name":"complete","name_ja":"完全","definitions":[{"text":"<documentation> including all critical information and any necessary, relevant information for the intended audience","text_ja":"<文書> 意図された読者にとってのすべての重要情報および必要で関連する情報を含む","reference":"ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.2; ISO/IEC/IEEE 26511:2011 Systems and software engineering — Requirements for managers of user documentation, 4.2"}]}
{"number":"3.687","name":"complete ICOM code","name_ja":"完全ICOMコード","definitions":[{"text":"diagram feature reference in which dot notation joins an ICOM code to a diagram reference","text_ja":"ドット記法がICOMコードを図参照に結合する図機能参照","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.29"}]}
{"number":"3.688","name":"complete procedure","name_ja":"完全手順","definitions":[{"text":"all those activities which commence with entry to the procedure and conclude with exit from the procedure","text_ja":"手順への入力から開始し、手順からの出力で終了するすべての活動"}]}
{"number":"3.689","name":"complete table","name_ja":"完全表","definitions":[{"text":"decision table where for all combinations of condition entries there exists a satisfying rule","text_ja":"条件エントリのすべての組み合わせに対して満足する規則が存在する決定表","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.17"}],"note":"In practical terms extended entry tables include limited entries and are therefore mixed entry tables. Any extended or mixed entry table can be transformed into a limited entry table.","note_ja":"実際的には、拡張エントリ表は制限エントリを含むため、混合エントリ表である。任意の拡張または混合エントリ表は制限エントリ表に変換できる。"}{"number":"3.690","name":"completion code","name_ja":"完了コード","definitions":[{"text":"code communicated to a job stream processor by a batch program to influence the execution of succeeding steps in the input stream","text_ja":"バッチプログラムによってジョブストリームプロセッサに通信され、入力ストリーム内の後続ステップの実行に影響を与えるコード"}]}
{"number":"3.691","name":"completion criteria","name_ja":"完了基準","definitions":[{"text":"conditions under which the testing activities are considered complete","text_ja":"テスト活動が完了したと見なされる条件","reference":"ISO/IEC/IEEE 29119-2:2013 Software and systems engineering — Software testing — Part 2: Test processes, 4.2"}]}
{"number":"3.692","name":"completion time theorem","name_ja":"完了時間定理","definitions":[{"text":"real-time scheduling theorem","text_ja":"リアルタイムスケジューリング定理"}],"note":"For a set of independent periodic tasks, if each task meets its first deadline when all tasks start at the same time, the deadlines will be met for any combination of start times.","note_ja":"独立した周期的タスクの集合について、すべてのタスクが同時に開始される場合に各タスクが最初のデッドラインを満たすならば、任意の開始時間の組み合わせに対してデッドラインが満たされる。"}
{"number":"3.693","name":"complex programmable logic device (CPLD)","name_ja":"複合プログラマブル論理デバイス（CPLD）","definitions":[{"text":"hardware component with a fully programmable AND/OR gate array","text_ja":"完全にプログラマブルなAND/ORゲートアレイを持つハードウェアコンポーネント"}]}
{"number":"3.694","name":"complexity","name_ja":"複雑さ","definitions":[{"text":"degree to which a system's design or code is difficult to understand because of numerous components or relationships among components","text_ja":"多数のコンポーネントまたはコンポーネント間の関係のために、システムの設計またはコードが理解困難である程度"},{"text":"pertaining to any of a set of structure-based metrics that measure the attribute in (1)","text_ja":"(1)の属性を測定する構造ベースメトリクスの集合のいずれかに関する"},{"text":"degree to which a system or component has a design or implementation that is difficult to understand and verify","text_ja":"システムまたはコンポーネントが理解と検証が困難な設計または実装を持つ程度"}],"confer":["simplicity"],"confer_ja":["単純さ"]}
{"number":"3.695","name":"complexity matrix","name_ja":"複雑度マトリックス","definitions":[{"text":"a table used to allocate a weight to a function type","text_ja":"機能タイプに重みを割り当てるために使用される表","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"}],"note":"The matrix allocates this weight on the basis of the number of data element types in combination with the number of record types or file types referenced.","note_ja":"このマトリックスは、参照されるレコードタイプまたはファイルタイプの数と組み合わせたデータ要素タイプの数に基づいてこの重みを割り当てる。"}
{"number":"3.696","name":"complexity of a function","name_ja":"機能の複雑度","definitions":[{"text":"the weight allocated to a function on the basis of which a number of function points is assigned to the function","text_ja":"機能に機能ポイント数が割り当てられる基準となる、機能に割り当てられた重み","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"}]}
{"number":"3.697","name":"compliance","name_ja":"準拠","definitions":[{"text":"doing what has been asked or ordered, as required by rule or law","text_ja":"規則または法律によって要求される通り、要求または命令されたことを行うこと","reference":"IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2"},{"text":"a general concept of conforming to a rule, standard, law, or requirement such that the assessment of compliance results in a binomial result stated as \"compliant\" or \"noncompliant\"","text_ja":"規則、標準、法律、または要求に適合するという一般的概念で、準拠の評価が「準拠」または「非準拠」として述べられる二項結果をもたらす","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"example":"comply with a regulation","example_ja":"規制に準拠する"}
{"number":"3.698","name":"component","name_ja":"コンポーネント","definitions":[{"text":"entity with discrete structure, such as an assembly or software module, within a system considered at a particular level of analysis","text_ja":"特定の分析レベルで考慮されるシステム内の、アセンブリやソフトウェアモジュールなどの離散構造を持つエンティティ","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.3.3"},{"text":"one of the parts that make up a system","text_ja":"システムを構成する部品の一つ","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"},{"text":"object that encapsulates its own template, so that the template can be interrogated by interaction with the component","text_ja":"自分自身のテンプレートをカプセル化するオブジェクトで、コンポーネントとの相互作用によってテンプレートを問い合わせることができる","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.26"},{"text":"specific, named collection of features that can be described by an IDL component definition or a corresponding structure in an interface repository","text_ja":"IDLコンポーネント定義またはインターフェイスリポジトリ内の対応する構造によって記述できる、特定の名前付き機能の集合","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1"},{"text":"functionally or logically distinct part of a system","text_ja":"システムの機能的または論理的に明確な部分","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}],"confer":["element","unit"],"confer_ja":["要素","単位"],"note":"A component can be hardware or software and can be subdivided into other components. Component refers to a part of a whole, such as a component of a software product or a component of a software identification tag. The terms module, component, and unit are often used interchangeably or defined to be subelements of one another in different ways depending upon the context. The relationship of these terms is not standardized. A component can be independently managed or not, from the end-user or administrator's point of view","note_ja":"コンポーネントはハードウェアまたはソフトウェアであり得、他のコンポーネントに細分化できる。コンポーネントは、ソフトウェア製品のコンポーネントやソフトウェア識別タグのコンポーネントなど、全体の一部を指す。モジュール、コンポーネント、単位という用語は、文脈に応じて互換的に使用されるか、異なる方法で相互のサブ要素として定義されることが多い。これらの用語の関係は標準化されていない。コンポーネントは、エンドユーザまたは管理者の観点から、独立して管理される場合もされない場合もある"}
{"number":"3.699","name":"component home","name_ja":"コンポーネントホーム","definitions":[{"text":"meta-type that acts as a manager for instances of a specified component type","text_ja":"指定されたコンポーネントタイプのインスタンスのマネージャとして機能するメタタイプ","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1"}],"note":"Component home interfaces provide operations to manage component life cycles, and optionally, to manage associations between component instances and primary key values.","note_ja":"コンポーネントホームインターフェイスは、コンポーネントライフサイクルを管理する操作を提供し、オプションで、コンポーネントインスタンスと主キー値の間の関連を管理する。"}
{"number":"3.700","name":"component integration test","name_ja":"コンポーネント統合テスト","definitions":[{"text":"testing of groups of related components.","text_ja":"関連するコンポーネントのグループのテスト"}]}
{"number":"3.701","name":"component standard","name_ja":"コンポーネント標準","definitions":[{"text":"standard that describes the characteristics of data or program components subdivided into other components","text_ja":"他のコンポーネントに細分化されたデータまたはプログラムコンポーネントの特性を記述する標準"}]}
{"number":"3.702","name":"component testing","name_ja":"コンポーネントテスト","definitions":[{"text":"testing of individual hardware or software components [IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1;","text_ja":"個々のハードウェアまたはソフトウェアコンポーネントのテスト"}]}
{"number":"3.703","name":"component-aware client","name_ja":"コンポーネント対応クライアント","definitions":[{"text":"client that is defined using the IDL extensions in the component model","text_ja":"コンポーネントモデルのIDL拡張を使用して定義されたクライアント","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1"}]}
{"number":"3.704","name":"composite key","name_ja":"複合キー","definitions":[{"text":"key comprising of two or more attributes","text_ja":"二つ以上の属性から構成されるキー","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.38"}],"note":"[key style]","note_ja":"[キースタイル]"}
{"number":"3.705","name":"composite measure","name_ja":"複合尺度","definitions":[{"text":"variable derived from a set of operations of a construct's multi-item measures defined according to a construct specification (either reflective or formative) that is the way in which the latent variable representing the construct of interest is linked to its measures","text_ja":"構成概念の仕様（反映的または形成的のいずれか）に従って定義された構成概念の多項目尺度の操作集合から導出される変数で、関心のある構成概念を表す潜在変数がその尺度にリンクされる方法である","reference":"ISO/IEC 33003:2015 Information technology — Process assessment — Requirements for process measurement frameworks, 3.4"}]}
{"number":"3.706","name":"composite object","name_ja":"複合オブジェクト","definitions":[{"text":"object expressed as a composition","text_ja":"合成として表現されるオブジェクト","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.2"}]}
{"number":"3.707","name":"composite task","name_ja":"複合タスク","definitions":[{"text":"task containing nested objects","text_ja":"ネストされたオブジェクトを含むタスク"}]}
{"number":"3.708","name":"composite type","name_ja":"複合型","definitions":[{"text":"data type each of whose members is composed of multiple data items","text_ja":"各メンバーが複数のデータ項目で構成されるデータ型"}],"confer":["atomic type"],"confer_ja":["原子型"],"example":"a data type called PAIRS whose members are ordered pairs (x,y)","example_ja":"メンバーが順序対(x,y)であるPAIRSと呼ばれるデータ型"}
{"number":"3.709","name":"composition","name_ja":"合成","definitions":[{"text":"combination of two or more objects yielding a new object, at a different level of abstraction","text_ja":"異なる抽象化レベルで新しいオブジェクトを生成する二つ以上のオブジェクトの組み合わせ","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.1.a"},{"text":"combination of two or more behaviors yielding a new behavior","text_ja":"新しい行動を生成する二つ以上の行動の組み合わせ","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.1.b"},{"text":"both the set of artifacts that constitute the unit of component implementation, and the definition of this aggregate entity","text_ja":"コンポーネント実装の単位を構成する成果物の集合と、この集約エンティティの定義の両方","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group — Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.1"}],"confer":["decomposition"],"confer_ja":["分解"]}
{"number":"3.710","name":"computation data use","name_ja":"計算データ使用","definitions":[{"text":"use of the value of a variable in any type of statement","text_ja":"任意のタイプの文における変数の値の使用","reference":"ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.4"}],"alias":["c-us"],"alias_ja":["c-us"]}
{"number":"3.711","name":"computational component","name_ja":"計算コンポーネント","definitions":[{"text":"component specified in a computational viewpoint that has a control interface and declared sets of (a) operation interfaces in which it plays a server role (facets), (b) operation interfaces in which it plays a client role (receptacles), (c) operation interfaces originating announcements carrying notifications of typed events (event sources), (d) operation interfaces consuming announcements carrying notifications of typed events (event sinks), (e) operation interfaces supporting accessors and mutators for attributes (attributes)","text_ja":"計算視点で指定されるコンポーネントで、制御インターフェイスと以下の宣言された集合を持つ：(a) サーバ役割を果たす操作インターフェイス（ファセット）、(b) クライアント役割を果たす操作インターフェイス（レセプタクル）、(c) 型付きイベントの通知を運ぶアナウンスを発信する操作インターフェイス（イベントソース）、(d) 型付きイベントの通知を運ぶアナウンスを消費する操作インターフェイス（イベントシンク）、(e) 属性のアクセサとミューテータをサポートする操作インターフェイス（属性）","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.16"}]}
{"number":"3.712","name":"computational container","name_ja":"計算コンテナ","definitions":[{"text":"container for a declared set of computational component types that has a management interface at which it can be requested to create a computational component of one of the types and add it to the container's content, delete a computational component from the container, list the computational components it currently contains, and list the computational factories it provides","text_ja":"宣言された計算コンポーネントタイプの集合のためのコンテナで、そのタイプの一つの計算コンポーネントを作成してコンテナの内容に追加する、コンテナから計算コンポーネントを削除する、現在含む計算コンポーネントをリストする、提供する計算ファクトリをリストすることを要求できる管理インターフェイスを持つ","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.17"}]}
{"number":"3.713","name":"computational factory","name_ja":"計算ファクトリ","definitions":[{"text":"factory that returns an interface reference to the computational object it creates","text_ja":"作成する計算オブジェクトへのインターフェイス参照を返すファクトリ","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.15"}]}
{"number":"3.714","name":"computational interface template","name_ja":"計算インターフェイステンプレート","definitions":[{"text":"interface template for either a signal interface, a stream interface, or an operation interface","text_ja":"信号インターフェイス、ストリームインターフェイス、または操作インターフェイスのためのインターフェイステンプレート","reference":"ISO/IEC 10746- 3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.10"}],"note":"A computational interface template comprises a signal, a stream or an operation interface signature as appropriate, a behavior specification and an environment contract specification.","note_ja":"計算インターフェイステンプレートは、適切な信号、ストリーム、または操作インターフェイスシグネチャ、行動仕様、環境契約仕様で構成される。"}
{"number":"3.715","name":"computational object template","name_ja":"計算オブジェクトテンプレート","definitions":[{"text":"object template which comprises a set of computational interface templates which the object template can instantiate, a behavior specification, and an environment contract specification","text_ja":"オブジェクトテンプレートがインスタンス化できる計算インターフェイステンプレートの集合、行動仕様、環境契約仕様で構成されるオブジェクトテンプレート","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.9"}]}
{"number":"3.716","name":"computational viewpoint","name_ja":"計算視点","definitions":[{"text":"viewpoint on an ODP system and its environment which enables distribution through functional decomposition of the system into objects which interact at interfaces","text_ja":"インターフェイスで相互作用するオブジェクトへのシステムの機能分解を通じて分散を可能にするODPシステムとその環境に関する視点","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.1.1.3"}]}
{"number":"3.717","name":"computer","name_ja":"コンピュータ","definitions":[{"text":"functional unit that can perform substantial computations, including numerous arithmetic operations and logic operations without human intervention","text_ja":"人間の介入なしに、多数の算術演算と論理演算を含む実質的な計算を実行できる機能単位","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["computing device"],"confer_ja":["計算デバイス"],"note":"A computer can consist of a stand-alone unit or several interconnected units","note_ja":"コンピュータは単独の単位または複数の相互接続された単位で構成され得る"}
{"number":"3.718","name":"computer center","name_ja":"コンピュータセンタ","definitions":[{"text":"facility that includes personnel, hardware, and software, organized to provide information processing services","text_ja":"情報処理サービスを提供するために組織された人員、ハードウェア、ソフトウェアを含む施設","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"alias":["data processing center"],"alias_ja":["データ処理センタ"]}
{"number":"3.719","name":"computer crime","name_ja":"コンピュータ犯罪","definitions":[{"text":"crime committed through the use, modification, or destruction of hardware, software, or data","text_ja":"ハードウェア、ソフトウェア、またはデータの使用、修正、または破壊を通じて犯される犯罪","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.720","name":"computer generation","name_ja":"コンピュータ世代","definitions":[{"text":"category in a historical classification of computers based mainly on the technology used in their manufacture","text_ja":"主にその製造に使用される技術に基づくコンピュータの歴史的分類におけるカテゴリ","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"example":"first generation based on relays or vacuum tube, the second on transistors, the third on integrated circuits","example_ja":"リレーまたは真空管に基づく第1世代、トランジスタに基づく第2世代、集積回路に基づく第3世代"}
{"number":"3.721","name":"computer graphics","name_ja":"コンピュータグラフィックス","definitions":[{"text":"methods and techniques for converting data to or from graphic displays via computers","text_ja":"コンピュータを介してデータをグラフィック表示に変換する、またはグラフィック表示からデータに変換する方法と技法","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.722","name":"computer instruction","name_ja":"コンピュータ命令","definitions":[{"text":"instruction that can be recognized by the processing unit of a computer for which it is designed","text_ja":"それが設計されたコンピュータの処理装置によって認識できる命令","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"alias":["machine instruction"],"alias_ja":["機械命令"]}
{"number":"3.723","name":"computer network","name_ja":"コンピュータネットワーク","definitions":[{"text":"network in which at least one of the devices is a computer","text_ja":"デバイスの少なくとも一つがコンピュータであるネットワーク","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.724","name":"computer operation","name_ja":"コンピュータ操作","definitions":[{"text":"operation executed by a computer","text_ja":"コンピュータによって実行される操作","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.725","name":"computer operator","name_ja":"コンピュータオペレータ","definitions":[{"text":"person who operates a computer","text_ja":"コンピュータを操作する人","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.726","name":"computer program","name_ja":"コンピュータプログラム","definitions":[{"text":"sequence of instructions suitable for processing by a computer. Processing may include the use of an assembler, a compiler, an interpreter, or a translator to prepare the program for execution as well as to execute it","text_ja":"コンピュータによる処理に適した命令の列。処理には、プログラムを実行の準備をし、実行するためのアセンブラ、コンパイラ、インタープリタ、または翻訳器の使用が含まれる場合がある","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"alias":["program"],"alias_ja":["プログラム"]}
{"number":"3.727","name":"computer science","name_ja":"コンピュータサイエンス","definitions":[{"text":"field of knowledge that comprises the study of the systematic and algorithmic methods and tools used for the representation, storage, processing, access, and transmission of information, as well as the design and application of computational systems that perform these operations","text_ja":"情報の表現、記憶、処理、アクセス、送信に使用される体系的かつアルゴリズム的方法とツール、およびこれらの操作を実行する計算システムの設計と応用の研究を含む知識分野","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.728","name":"computer security","name_ja":"コンピュータセキュリティ","definitions":[{"text":"protection of computer hardware, software, and data against unauthorized access, use, disclosure, disruption, modification, or destruction","text_ja":"不正なアクセス、使用、開示、破壊、修正、または破壊に対するコンピュータハードウェア、ソフトウェア、データの保護","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.729","name":"computer system","name_ja":"コンピュータシステム","definitions":[{"text":"functional unit, consisting of one or more computers and associated software, that uses common storage for all or part of a program and for all or part of the data necessary for the execution of the program; executes user-written or user-designated programs; performs user-designated data manipulation, including arithmetic operations and logic operations; and can execute programs that modify themselves during their execution","text_ja":"一つ以上のコンピュータと関連ソフトウェアで構成される機能単位で、プログラムの全部または一部およびプログラム実行に必要なデータの全部または一部に共通記憶装置を使用し、ユーザが作成またはユーザが指定したプログラムを実行し、算術演算と論理演算を含むユーザ指定のデータ操作を実行し、実行中に自分自身を修正するプログラムを実行できる","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"note":"A computer system may be a stand-alone unit or may consist of several interconnected units.","note_ja":"コンピュータシステムは単独の単位であるか、複数の相互接続された単位で構成される場合がある。"}
{"number":"3.730","name":"computer virus","name_ja":"コンピュータウイルス","definitions":[{"text":"computer program that can copy itself and infect a computer without permission or knowledge of the user","text_ja":"自分自身をコピーし、ユーザの許可や知識なしにコンピュータに感染できるコンピュータプログラム","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"note":"A virus might corrupt or delete data on a computer, use an email program to spread itself to other computers, or even delete everything on a hard disk.","note_ja":"ウイルスは、コンピュータ上のデータを破損または削除し、電子メールプログラムを使用して他のコンピュータに拡散し、またはハードディスク上のすべてを削除する場合がある。"}
{"number":"3.731","name":"computer word","name_ja":"コンピュータワード","definitions":[{"text":"sequence of bits or bytes that is the normal unit in which information may be stored, transmitted, or operated upon within a given computer","text_ja":"指定されたコンピュータ内で情報が記憶、送信、または操作される通常の単位であるビットまたはバイトの列","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"alias":["machine word","word"],"alias_ja":["機械ワード","ワード"]}
{"number":"3.732","name":"computer-aided design (CAD)","name_ja":"コンピュータ支援設計（CAD）","definitions":[{"text":"technique of using a computer to assist in the design process","text_ja":"設計プロセスを支援するためにコンピュータを使用する技法","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.733","name":"computer-based training (CBT)","name_ja":"コンピュータベース訓練（CBT）","definitions":[{"text":"training provided through the use of a computer","text_ja":"コンピュータの使用を通じて提供される訓練","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.734","name":"computing","name_ja":"コンピューティング","definitions":[{"text":"activity of using and developing computer technology, computer hardware and software","text_ja":"コンピュータ技術、コンピュータハードウェア、ソフトウェアを使用し開発する活動","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.735","name":"computing device","name_ja":"計算デバイス","definitions":[{"text":"device that performs computations, including arithmetic and logic operations, without intervention of a human operator during a run","text_ja":"実行中に人間のオペレータの介入なしに、算術演算と論理演算を含む計算を実行するデバイス","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["computer"],"confer_ja":["コンピュータ"]}
{"number":"3.736","name":"concatenation","name_ja":"連結","definitions":[{"text":"operation that joins character strings or data items to form a longer character string or data structure","text_ja":"文字列またはデータ項目を結合して、より長い文字列またはデータ構造を形成する操作","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.737","name":"concept","name_ja":"概念","definitions":[{"text":"unit of knowledge created by a unique combination of characteristics","text_ja":"特性の一意な組み合わせによって作成される知識の単位","reference":"ISO/IEC/IEEE 26511:2011 Systems and software engineering — Requirements for managers of user documentation, 4.1"}],"note":"Concepts exist in the mind as abstract entities which are independent of language.","note_ja":"概念は言語に依存しない抽象的エンティティとして心の中に存在する。"}
{"number":"3.738","name":"concept of operations (ConOps)","name_ja":"運用概念（ConOps）","definitions":[{"text":"verbal and graphic statement of assumptions and intent used to provide an overall picture of an operation","text_ja":"操作の全体像を提供するために使用される仮定と意図の口頭およびグラフィック記述","reference":"IEEE 1362-1998 (R2007) IEEE Guide for Information Technology - System Definition - Concept of Operations (ConOps) Document, 3.1"}],"note":"The concept of operations is also called the operational concept, ops concept, or ConOps. In the acquisition domain, it is frequently called the operational requirements document or mission needs statement.","note_ja":"運用概念は、運用概念、ops概念、またはConOpsとも呼ばれる。取得ドメインでは、運用要求文書またはミッション要求記述と呼ばれることが多い。"}
{"number":"3.739","name":"conceptual data model","name_ja":"概念データモデル","definitions":[{"text":"representation of data requirements of an enterprise that is independent of storage and access considerations","text_ja":"記憶とアクセスの考慮から独立した企業のデータ要求の表現","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.39"}]}
{"number":"3.740","name":"conceptual schema","name_ja":"概念スキーマ","definitions":[{"text":"description of conceptual data model in terms of particular data definition language","text_ja":"特定のデータ定義言語による概念データモデルの記述","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.40"}]}
{"number":"3.741","name":"concurrency","name_ja":"並行性","definitions":[{"text":"expression of the potential for two or more activities to execute in parallel either because there are multiple threads of control, or multiple processors, or some combination","text_ja":"複数の制御スレッド、複数のプロセッサ、またはそれらの組み合わせがあるため、二つ以上の活動が並列に実行される可能性の表現","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}]}
{"number":"3.742","name":"concurrency control","name_ja":"並行性制御","definitions":[{"text":"collection of rules, methods, design decisions, and management techniques required to maintain consistency in systems with potential concurrency","text_ja":"並行性の可能性があるシステムにおいて一貫性を維持するために必要な規則、方法、設計決定、管理技法の集合","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}]}
{"number":"3.743","name":"concurrent execution","name_ja":"並行実行","definitions":[{"text":"execution of several programs or tasks at the same time","text_ja":"複数のプログラムまたはタスクの同時実行","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.744","name":"condition","name_ja":"条件","definitions":[{"text":"logical expression composed of operands, logical operators, and relational operators","text_ja":"オペランド、論理演算子、関係演算子で構成される論理式","reference":"ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.1"},{"text":"logical clause that can be evaluated to TRUE or FALSE","text_ja":"TRUEまたはFALSEに評価できる論理節","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.3"},{"text":"Boolean expression containing no Boolean operators","text_ja":"論理演算子を含まない論理式","reference":"ISO/IEC/IEEE 29119-4:2015 Software and systems engineering — Software testing — Part 4: Test techniques, 4.1"}]}
{"number":"3.745","name":"condition coverage","name_ja":"条件カバレッジ","definitions":[{"text":"percentage of condition outcomes that have been exercised by a test suite","text_ja":"テストスイートによって実行された条件結果の割合","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.7"}]}
{"number":"3.746","name":"condition entry","name_ja":"条件エントリ","definitions":[{"text":"indication of the relevance of a condition to a particular rule","text_ja":"特定の規則に対する条件の関連性の表示","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.4"}]}
{"number":"3.747","name":"condition outcome","name_ja":"条件結果","definitions":[{"text":"evaluation of a condition to TRUE or FALSE","text_ja":"条件のTRUEまたはFALSEへの評価","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.8"}]}
{"number":"3.748","name":"condition stub","name_ja":"条件スタブ","definitions":[{"text":"list of all the conditions to be considered in the solution of a problem","text_ja":"問題の解決において考慮すべきすべての条件のリスト","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.6"}]}
{"number":"3.749","name":"conditional","name_ja":"条件付き","definitions":[{"text":"adjective applied to a statement, variable, expression, or other language unit to indicate that it is executed, evaluated, or takes effect only when a certain condition is satisfied","text_ja":"特定の条件が満たされたときにのみ実行、評価、または効力を持つことを示すために、文、変数、式、またはその他の言語単位に適用される形容詞"}]}
{"number":"3.750","name":"conditional branch","name_ja":"条件分岐","definitions":[{"text":"branch that occurs when a certain condition is satisfied","text_ja":"特定の条件が満たされたときに発生する分岐"}],"alias":["conditional jump"],"alias_ja":["条件ジャンプ"],"confer":["unconditional branch"],"confer_ja":["無条件分岐"]}
{"number":"3.751","name":"conditional statement","name_ja":"条件文","definitions":[{"text":"statement that is executed only if a certain condition is satisfied at the time the statement is encountered during program execution","text_ja":"プログラム実行中に文に遭遇した時点で特定の条件が満たされている場合にのみ実行される文"}],"confer":["unconditional statement"],"confer_ja":["無条件文"]}
{"number":"3.752","name":"cone of uncertainty","name_ja":"不確実性のコーン","definitions":[{"text":"graphic depiction of the uncertainty in software project estimates as the project progresses","text_ja":"プロジェクトの進行に伴うソフトウェアプロジェクト見積りの不確実性のグラフィック描写","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}],"note":"Uncertainty decreases as the project progresses and more becomes known about the project.","note_ja":"プロジェクトの進行とプロジェクトについてより多くのことが知られるにつれて、不確実性は減少する。"}
{"number":"3.753","name":"conference","name_ja":"会議","definitions":[{"text":"meeting of participants at different sites through a telecommunications system","text_ja":"通信システムを通じた異なるサイトの参加者の会議","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.754","name":"confidentiality","name_ja":"機密性","definitions":[{"text":"degree to which a product or system ensures that data are accessible only to those authorized to have access","text_ja":"製品またはシステムがデータをアクセス権限を持つ者のみがアクセスできることを保証する程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.6.1"}]}
{"number":"3.755","name":"config spec","name_ja":"構成仕様","definitions":[{"text":"configuration specification","text_ja":"構成仕様"}]}
{"number":"3.756","name":"configuration","name_ja":"構成","definitions":[{"text":"functional and physical characteristics of hardware or software as set forth in technical documentation or achieved in a product","text_ja":"技術文書に定められた、または製品で達成されたハードウェアまたはソフトウェアの機能的および物理的特性","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"},{"text":"collection of components organized to accomplish a specific function or set of functions","text_ja":"特定の機能または機能の集合を達成するために組織化されたコンポーネントの集合","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"},{"text":"aggregation of a set of interrelated configuration items that satisfy an end use function","text_ja":"最終使用機能を満たす相互関連する構成項目の集合の集約","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 3.3; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.6"}]}
{"number":"3.757","name":"configuration audit","name_ja":"構成監査","definitions":[{"text":"independent examination of configuration management activities to assess compliance with the configuration management plan and applicable configuration management procedures and standards","text_ja":"構成管理計画および適用可能な構成管理手順と標準への準拠を評価するための構成管理活動の独立した検査","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.758","name":"configuration baseline","name_ja":"構成ベースライン","definitions":[{"text":"aggregate of configuration items that comprises a baseline","text_ja":"ベースラインを構成する構成項目の集約","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.759","name":"configuration control","name_ja":"構成制御","definitions":[{"text":"element of configuration management, consisting of the evaluation, coordination, approval or disapproval, and implementation of changes to configuration items after formal establishment of their configuration identification","text_ja":"構成項目の構成識別が正式に確立された後の、構成項目への変更の評価、調整、承認または不承認、実装で構成される構成管理の要素","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.760","name":"configuration control board (CCB)","name_ja":"構成制御委員会（CCB）","definitions":[{"text":"group of people responsible for evaluating and approving or disapproving proposed changes to configuration items, and for ensuring implementation of approved changes","text_ja":"構成項目への提案変更の評価と承認または不承認、および承認された変更の実装の確保に責任を負う人々のグループ","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.761","name":"configuration identification","name_ja":"構成識別","definitions":[{"text":"element of configuration management, consisting of selecting the configuration items for a system and recording their functional and physical characteristics in technical documentation","text_ja":"システムの構成項目を選択し、技術文書にその機能的および物理的特性を記録することで構成される構成管理の要素","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.762","name":"configuration item (CI)","name_ja":"構成項目（CI）","definitions":[{"text":"aggregation of work products that is designated for configuration management and treated as a single entity in the configuration management process","text_ja":"構成管理のために指定され、構成管理プロセスにおいて単一のエンティティとして扱われる作業成果物の集約","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"},{"text":"entity within a configuration that satisfies an end use function and that can be uniquely identified at a given reference point","text_ja":"最終使用機能を満たし、指定された参照点で一意に識別できる構成内のエンティティ","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 3.4; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.7"}],"note":"A configuration item can consist of hardware, software, or both. The end use function of a configuration item is not necessarily the same as its operation, use, or support function.","note_ja":"構成項目はハードウェア、ソフトウェア、またはその両方で構成できる。構成項目の最終使用機能は、必ずしもその操作、使用、またはサポート機能と同じではない。"}
{"number":"3.763","name":"configuration item control","name_ja":"構成項目制御","definitions":[{"text":"process of formally controlling the evolution of a configuration item","text_ja":"構成項目の進化を正式に制御するプロセス"}]}
{"number":"3.764","name":"configuration library","name_ja":"構成ライブラリ","definitions":[{"text":"controlled collection of software and documentation maintained for incorporation into one or more baselines of a project, system, or software application","text_ja":"プロジェクト、システム、またはソフトウェアアプリケーションの一つ以上のベースラインへの組み込みのために維持される、ソフトウェアと文書の制御された集合"}]}
{"number":"3.765","name":"configuration management (CM)","name_ja":"構成管理（CM）","definitions":[{"text":"discipline applying technical and administrative direction and surveillance to identify and document the functional and physical characteristics of a configuration item, control changes to those characteristics, record and report change processing and implementation status, and verify compliance with specified requirements","text_ja":"構成項目の機能的および物理的特性を識別し文書化し、それらの特性への変更を制御し、変更処理と実装状況を記録・報告し、指定要求への準拠を検証するための技術的および管理的指導と監視を適用する規律","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.766","name":"configuration management database (CMDB)","name_ja":"構成管理データベース（CMDB）","definitions":[{"text":"database that contains records of all configuration items and their relationships within the scope of configuration management","text_ja":"構成管理の範囲内のすべての構成項目とその関係の記録を含むデータベース","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.767","name":"configuration management plan (CMP)","name_ja":"構成管理計画（CMP）","definitions":[{"text":"document establishing how configuration management will be performed for a specific project","text_ja":"特定のプロジェクトに対して構成管理がどのように実行されるかを確立する文書","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.768","name":"configuration management system (CMS)","name_ja":"構成管理システム（CMS）","definitions":[{"text":"collection of procedures and tools for performing configuration management","text_ja":"構成管理を実行するための手順とツールの集合","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.769","name":"configuration specification","name_ja":"構成仕様","definitions":[{"text":"in software engineering, a document that specifies which variant of each component to include in a given variant of a system"}],"alias":["config spec"],"alias_ja":["構成仕様"]}
{"number":"3.770","name":"configuration status accounting","name_ja":"構成状況会計","definitions":[{"text":"element of configuration management consisting of the recording and reporting of information needed to manage a configuration effectively, including a listing of the approved configuration identification, the status of proposed changes to the configuration, and the implementation status of approved changes","text_ja":"承認された構成識別のリスト、構成への提案変更の状況、承認された変更の実装状況を含む、構成を効果的に管理するために必要な情報の記録と報告で構成される構成管理の要素","reference":"IEEE 828-2012 IEEE Standard for Configuration Management in Systems and Software Engineering, 2.2"}]}
{"number":"3.771","name":"configuration unit","name_ja":"構成単位","definitions":[{"text":"entity of hardware, software, or both, that satisfies an end-use function and is designated by the acquirer, or organization, for separate configuration management","text_ja":"最終使用機能を満たし、取得者または組織によって個別の構成管理のために指定されるハードウェア、ソフトウェア、またはその両方のエンティティ","reference":"ISO/IEC/IEEE 26515:2011 Systems and software engineering — Developing user documentation in an agile environment, 4.1"}]}
{"number":"3.772","name":"congruence testing","name_ja":"適合性テスト","definitions":[{"text":"testing to determine whether a system or component is equivalent to another system or component","text_ja":"システムまたはコンポーネントが他のシステムまたはコンポーネントと等価であるかどうかを判定するテスト"}]}
{"number":"3.773","name":"connect Time","name_ja":"接続時間","definitions":[{"text":"in networks, the amount of time a user is connected to the system","text_ja":"ネットワークにおいて、ユーザがシステムに接続されている時間の量"}]}
{"number":"3.774","name":"connection","name_ja":"接続","definitions":[{"text":"association established between functional units for conveying information","text_ja":"情報を伝達するために機能単位間で確立される関連","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.775","name":"connection-oriented","name_ja":"接続指向","definitions":[{"text":"characteristic of data communication in which a communication session or semi-permanent connection is established before data transmission begins","text_ja":"データ送信が開始される前に通信セッションまたは半永続的接続が確立されるデータ通信の特性","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["connectionless"],"confer_ja":["非接続"]}
{"number":"3.776","name":"connectionless","name_ja":"非接続","definitions":[{"text":"characteristic of data communication in which a communication session or semi-permanent connection is not established before data transmission begins","text_ja":"データ送信が開始される前に通信セッションまたは半永続的接続が確立されないデータ通信の特性","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["connection-oriented"],"confer_ja":["接続指向"]}
{"number":"3.777","name":"connectivity","name_ja":"接続性","definitions":[{"text":"degree to which a product or system can connect to other products or systems","text_ja":"製品またはシステムが他の製品またはシステムに接続できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.3.2"}]}
{"number":"3.778","name":"conservative estimate","name_ja":"保守的見積り","definitions":[{"text":"estimate using conservative assumptions. Conservative estimates for software development are usually high estimates for effort, cost, and schedule","text_ja":"保守的仮定を使用した見積り。ソフトウェア開発の保守的見積りは通常、労力、コスト、スケジュールの高い見積りである"}]}
{"number":"3.779","name":"consistency","name_ja":"一貫性","definitions":[{"text":"degree to which a product, system or component performs specified functions under specified conditions for a specified period of time","text_ja":"製品、システム、またはコンポーネントが指定された期間にわたって指定された条件下で指定された機能を実行する程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.1.1"},{"text":"(data) adherence of data to specified data integrity constraints","text_ja":"（データ）指定されたデータ整合性制約へのデータの遵守","reference":"ISO/IEC 24744:2014 Software engineering — Metamodel for development methodologies, 3.9"},{"text":"degree of uniformity, standardization, and freedom from contradiction among the documents or parts of a system or component","text_ja":"システムまたはコンポーネントの文書または部分間の統一性、標準化、矛盾からの自由の程度","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}]}
{"number":"3.780","name":"console","name_ja":"コンソール","definitions":[{"text":"functional unit used by an operator for communication with a computer system, enabling the operator to monitor and control the operation of the system","text_ja":"オペレータがコンピュータシステムとの通信に使用する機能単位で、オペレータがシステムの動作を監視し制御することを可能にする","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.781","name":"constant","name_ja":"定数","definitions":[{"text":"value that does not change during execution of a program","text_ja":"プログラムの実行中に変化しない値","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"confer":["variable"],"confer_ja":["変数"]}
{"number":"3.782","name":"constant dollar analysis","name_ja":"一定ドル分析","definitions":[{"text":"addressing inflation or deflation by using cash-flow amounts that have been adjusted to remove the effects of inflation and that represent constant purchasing power","text_ja":"インフレーションの影響を除去するために調整され、一定の購買力を表すキャッシュフロー額を使用することによってインフレーションまたはデフレーションに対処すること"}],"confer":["actual dollar analysis"],"confer_ja":["実際ドル分析"]}
{"number":"3.783","name":"constraint","name_ja":"制約","definitions":[{"text":"limiting factor that affects the execution of a project, program, portfolio, or process","text_ja":"プロジェクト、プログラム、ポートフォリオ、またはプロセスの実行に影響する制限要因","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"expression of some condition that must hold in the design or implementation of a system or system component","text_ja":"システムまたはシステムコンポーネントの設計または実装において成立しなければならない何らかの条件の表現"},{"text":"rule intended to preserve the consistency or integrity of data in a database or other repository","text_ja":"データベースまたはその他のリポジトリ内のデータの一貫性または整合性を保持することを意図した規則"},{"text":"restriction on the degree of freedom in providing a solution","text_ja":"解決策を提供する際の自由度に対する制限","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 3.6; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.8"}]}
{"number":"3.784","name":"construct","name_ja":"構成体","definitions":[{"text":"language unit of a specified syntactic type together with its particular syntactic structure","text_ja":"その特定の構文構造と共に指定された構文タイプの言語単位"}],"example":"a compound statement in Pascal, an expression in FORTRAN, a paragraph in COBOL","example_ja":"Pascalの複合文、FORTRANの式、COBOLの段落"}
{"number":"3.785","name":"construction","name_ja":"構築","definitions":[{"text":"detailed creation of a working, meaningful system through a combination of coding, verification, unit testing, integration testing, and debugging","text_ja":"コーディング、検証、単体テスト、統合テスト、デバッグの組み合わせによる、動作する意味のあるシステムの詳細な創造","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.786","name":"constructive cost model (CoCoMo)","name_ja":"構築的コストモデル（CoCoMo）","definitions":[{"text":"algorithmic cost estimation model based on source lines of code or function points","text_ja":"ソースコード行数または機能ポイントに基づくアルゴリズム的コスト見積りモデル"}]}
{"number":"3.787","name":"consultant","name_ja":"コンサルタント","definitions":[{"text":"person who provides expert advice in a particular area","text_ja":"特定の分野で専門的助言を提供する人","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.788","name":"container","name_ja":"コンテナ","definitions":[{"text":"entity that has a management interface and contains zero or more contents","text_ja":"管理インターフェイスを持ち、ゼロ以上の内容を含むエンティティ","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 6.1.2"}]}
{"number":"3.789","name":"container-managed transaction (CMT)","name_ja":"コンテナ管理トランザクション（CMT）","definitions":[{"text":"transaction whose boundaries are defined by an EJB container","text_ja":"EJBコンテナによって境界が定義されるトランザクション","reference":"ISO/IEC 19500-3:2012 Information technology — Object Management Group Common Architecture Request Broker Architecture (CORBA) — Part 3: Components, 4.3"}]}