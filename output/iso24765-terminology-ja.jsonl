{"number":"3.1","name":"1GL","name_ja":"第1世代言語","definitions":[{"text":"first-generation language","text_ja":"第1世代言語"}],"confer":["machine language"],"confer_ja":["機械語"]}
{"number":"3.2","name":"2GL","name_ja":"第2世代言語","definitions":[{"text":"second-generation language","text_ja":"第2世代言語"}],"confer":["assembly language"],"confer_ja":["アセンブリ言語"]}
{"number":"3.3","name":"3D","name_ja":"3次元","definitions":[{"text":"three-dimensional","text_ja":"3次元","reference":"ISO/IEC/IEEE 23026:2015 Systems and software engineering — Engineering and management of websites for systems, software, and services information"}]}
{"number":"3.4","name":"3GL","name_ja":"第3世代言語","definitions":[{"text":"third-generation language","text_ja":"第3世代言語"}],"confer":["high-order language"],"confer_ja":["高水準言語"]}
{"number":"3.5","name":"4GL","name_ja":"第4世代言語","definitions":[{"text":"fourth-generation language","text_ja":"第4世代言語"}]}
{"number":"3.6","name":"5GL","name_ja":"第5世代言語","definitions":[{"text":"fifth-generation language","text_ja":"第5世代言語"}]}
{"number":"3.7","name":"<Viewpoint> language","name_ja":"<視点>言語","definitions":[{"text":"definitions of concepts and rules for the specification of an ODP system from the <viewpoint> viewpoint","text_ja":"<視点>の観点からODPシステムの仕様を記述するための概念と規則の定義","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.2.1.1"}],"note":"Thus, engineering language: definitions of concepts and rules for the specification of an ODP system from the engineering viewpoint.","note_ja":"したがって、工学言語：工学的観点からODPシステムの仕様を記述するための概念と規則の定義。"}
{"number":"3.8","name":"<X> domain","name_ja":"<X>ドメイン","definitions":[{"text":"set of objects, each of which is related by a characterizing relationship <X> to a controlling object","text_ja":"それぞれが制御オブジェクトに対して特徴的関係<X>により関連付けられたオブジェクトの集合","reference":"ISO/IEC 10746 2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 10.3"}]}
{"number":"3.9","name":"<X> federation","name_ja":"<X>フェデレーション","definitions":[{"text":"community of <x> domains","text_ja":"<x>ドメインのコミュニティ","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 5.1.2"}]}
{"number":"3.10","name":"<X> group","name_ja":"<X>グループ","definitions":[{"text":"set of objects with a particular characterizing relationship <X>","text_ja":"特定の特徴的関係<X>を持つオブジェクトの集合","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 10.1"}]}
{"number":"3.11","name":"<x> interceptor","name_ja":"<x>インターセプタ","definitions":[{"text":"engineering object in a channel, placed at a boundary between <x> domains","text_ja":"<x>ドメイン間の境界に配置されたチャネル内の工学オブジェクト","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 8.1.11"}],"note":"An <x> interceptor performs checks to enforce or monitor policies on permitted interactions between basic engineering objects in different domains; performs transformations to mask differences in interpretation of data by basic engineering objects in different domains. An inter-subnetwork relay is an example of an interceptor","note_ja":"<x>インターセプタは、異なるドメインの基本工学オブジェクト間で許可された相互作用に関するポリシーを強制または監視するためのチェックを実行し、異なるドメインの基本工学オブジェクトによるデータ解釈の差異を隠蔽するための変換を実行する。サブネットワーク間中継は、インターセプタの例である。"}
{"number":"3.12","name":"<x> pattern","name_ja":"<x>パターン","definitions":[{"text":"abstract specification of a composition of objects that results in any instance of the composition having a given property, named by <X>","text_ja":"<X>により名付けられた特定の属性を持つ合成のすべてのインスタンスをもたらすオブジェクトの合成の抽象的仕様","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.8"}]}
{"number":"3.13","name":"A-0 context diagram","name_ja":"A-0コンテキスト図","definitions":[{"text":"the only context diagram that is required for a valid IDEF0 model, the A-0 diagram contains one box, which represents the top-level function being modeled, the inputs, controls, outputs, and mechanisms attached to this box, the full model name, the model name abbreviation, the model's purpose statement, and the model's viewpoint statement","text_ja":"有効なIDEF0モデルに必要な唯一のコンテキスト図であり、A-0図は、モデル化される最上位機能を表す1つのボックス、このボックスに付与された入力、制御、出力、メカニズム、完全なモデル名、モデル名の略語、モデルの目的文、およびモデルの視点文を含む","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0"}]}
{"number":"3.14","name":"A-profile","name_ja":"Aプロファイル","definitions":[{"text":"Application profile","text_ja":"アプリケーションプロファイル","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.15","name":"ABC","name_ja":"ABC","definitions":[{"text":"activity-based costing","text_ja":"活動基準原価計算"}]}
{"number":"3.16","name":"abend","name_ja":"異常終了","definitions":[{"text":"abnormal end","text_ja":"異常終了"}]}
{"number":"3.17","name":"abnormal end (abend)","name_ja":"異常終了（abend）","definitions":[{"text":"termination of a process prior to completion","text_ja":"プロセスの完了前の終了"}],"confer":["abort","exception"],"confer_ja":["アボート","例外"]}
{"number":"3.18","name":"abort","name_ja":"アボート","definitions":[{"text":"to terminate a process prior to completion","text_ja":"プロセスを完了前に終了させる"}],"confer":["abend","exception"],"confer_ja":["異常終了","例外"]}
{"number":"3.19","name":"absolute address","name_ja":"絶対アドレス","definitions":[{"text":"address that is permanently assigned to a device or storage location and that identifies the device or location without the need for translation or calculation","text_ja":"デバイスまたは記憶位置に永続的に割り当てられ、変換や計算を必要とせずにデバイスまたは位置を識別するアドレス"}],"alias":["explicit address","specific address"],"alias_ja":["明示的アドレス","特定アドレス"],"confer":["relative address","relocatable address","symbolic address","absolute assembler","absolute code","absolute instruction"],"confer_ja":["相対アドレス","再配置可能アドレス","記号アドレス","絶対アセンブラ","絶対コード","絶対命令"]}
{"number":"3.20","name":"absolute assembler","name_ja":"絶対アセンブラ","definitions":[{"text":"assembler that produces absolute code","text_ja":"絶対コードを生成するアセンブラ"}],"confer":["relocating assembler"],"confer_ja":["再配置アセンブラ"]}
{"number":"3.21","name":"absolute code","name_ja":"絶対コード","definitions":[{"text":"code in which all addresses are absolute addresses","text_ja":"すべてのアドレスが絶対アドレスであるコード"}],"alias":["specific code"],"alias_ja":["特定コード"],"confer":["relocatable code"],"confer_ja":["再配置可能コード"]}
{"number":"3.22","name":"absolute instruction","name_ja":"絶対命令","definitions":[{"text":"computer instruction in which all addresses are absolute addresses","text_ja":"すべてのアドレスが絶対アドレスであるコンピュータ命令"}],"confer":["direct instruction","effective instruction","immediate instruction","indirect instruction"],"confer_ja":["直接命令","実効命令","即値命令","間接命令"]}
{"number":"3.23","name":"absolute loader","name_ja":"絶対ローダ","definitions":[{"text":"loader that reads absolute machine code into main memory, beginning at the initial address assigned to the code by the assembler or compiler, and performs no address adjustments on the code","text_ja":"アセンブラまたはコンパイラによってコードに割り当てられた初期アドレスから開始して、絶対機械コードを主記憶装置に読み込み、コードに対してアドレス調整を行わないローダ"}],"confer":["relocating loader"],"confer_ja":["再配置ローダ"]}
{"number":"3.24","name":"abstract class","name_ja":"抽象クラス","definitions":[{"text":"class that cannot be instantiated independently","text_ja":"独立してインスタンス化できないクラス","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.1"}],"note":"That is, instantiation must be accomplished via a subclass. A class for which every instance must also be an instance of a subclass in the cluster (a total cluster) is called an abstract class with respect to that cluster.","note_ja":"すなわち、インスタンス化はサブクラスを介して行われなければならない。クラスタ内のすべてのインスタンスがサブクラスのインスタンスでもなければならないクラス（完全なクラスタ）は、そのクラスタに関して抽象クラスと呼ばれる。"}
{"number":"3.25","name":"abstract data type","name_ja":"抽象データ型","definitions":[{"text":"data type for which only the properties of the data and the operations to be performed on the data are specified, without concern for how the data will be represented or how the operations will be implemented","text_ja":"データの表現方法や操作の実装方法に関係なく、データの属性とデータに対して実行される操作のみが指定されるデータ型"}]}
{"number":"3.26","name":"abstract design","name_ja":"抽象設計","definitions":[{"text":"generic form that needs specialization (further design work) to produce concrete designs2. design aimed at producing designs","text_ja":"具体的な設計を生成するために特殊化（さらなる設計作業）を必要とする汎用形式2. 設計を生成することを目的とした設計"}]}
{"number":"3.27","name":"abstraction","name_ja":"抽象化","definitions":[{"text":"view of an object that focuses on the information relevant to a particular purpose and ignores the remainder of the information","text_ja":"特定の目的に関連する情報に焦点を当て、残りの情報を無視するオブジェクトの見方","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"},{"text":"process of formulating a view","text_ja":"見方を策定するプロセス"},{"text":"process of suppressing irrelevant detail to establish a simplified model, or the result of that process","text_ja":"簡略化されたモデルを確立するために無関係な詳細を抑制するプロセス、またはそのプロセスの結果","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 6.3"}],"confer":["data abstraction"],"confer_ja":["データ抽象化"]}
{"number":"3.28","name":"AC","name_ja":"AC","definitions":[{"text":"actual cost","text_ja":"実際コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.29","name":"acceptability","name_ja":"受容性","definitions":[{"text":"exposure to loss (financial or otherwise) that an organization is willing to tolerate from a risk","text_ja":"組織がリスクから許容することを望む損失（金銭的またはその他）への暴露"}],"note":"Risk acceptability can apply to an individual risk or to a collection of risks, such as the totality of risks confronting a project or enterprise. Acceptability can differ for different categories of risk and can depend on the cost of treatment or other factors.","note_ja":"リスクの受容性は、個別のリスクまたはリスクの集合（プロジェクトや企業が直面するリスクの全体など）に適用できる。受容性はリスクのカテゴリによって異なる場合があり、処理のコストやその他の要因に依存する場合がある。"}
{"number":"3.30","name":"acceptability criteria","name_ja":"受容性基準","definitions":[{"text":"documented set of characteristics of a program's work products that if satisfied, forms a sufficient basis for judging each product's content to be acceptable to support a successful review or audit","text_ja":"満たされた場合に、成功する審査や監査を支援するために各製品の内容が受容可能であると判断する十分な根拠を形成する、プログラムの作業成果物の特性に関する文書化された集合","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.1"}]}
{"number":"3.31","name":"acceptable","name_ja":"受容可能","definitions":[{"text":"meeting stakeholder expectations that can be shown to be reasonable or merited","text_ja":"合理的または相当であることが示すことができる利害関係者の期待を満たすこと"}]}
{"number":"3.32","name":"acceptance criteria","name_ja":"受入基準","definitions":[{"text":"criteria that a system or component must satisfy in order to be accepted by a user, customer, or other authorized entity","text_ja":"ユーザ、顧客、またはその他の承認されたエンティティによって受け入れられるために、システムまたはコンポーネントが満たさなければならない基準"},{"text":"a set of conditions that is required to be met before deliverables are accepted","text_ja":"成果物が受け入れられる前に満たされることが要求される条件の集合","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["requirement","test criteria"],"confer_ja":["要求事項","テスト基準"]}
{"number":"3.33","name":"acceptance test","name_ja":"受入テスト","definitions":[{"text":"test of a system or functional unit usually performed by the purchaser on his premises after installation with the participation of the vendor to ensure that the contractual requirements are met","text_ja":"契約要求事項が満たされることを確保するために、インストール後に購入者が自身の施設で、通常はベンダーの参加を得て実行するシステムまたは機能単位のテスト","reference":"ISO/IEC 2382:2015, Information technology -— Vocabulary"}],"confer":["acceptance testing","validation test"],"confer_ja":["受入テスト","妥当性確認テスト"]}
{"number":"3.34","name":"acceptance testing","name_ja":"受入テスト","definitions":[{"text":"testing conducted to determine whether a system satisfies its acceptance criteria and to enable the customer to determine whether to accept the system","text_ja":"システムが受入基準を満たしているかどうかを判定し、顧客がシステムを受け入れるかどうかを決定できるようにするために実施されるテスト"},{"text":"formal testing conducted to enable a user, customer, or other authorized entity to determine whether to accept a system or component","text_ja":"ユーザ、顧客、またはその他の承認されたエンティティがシステムまたはコンポーネントを受け入れるかどうかを決定できるようにするために実施される正式なテスト","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}],"confer":["acceptance test","validation test"],"confer_ja":["受入テスト","妥当性確認テスト"]}
{"number":"3.35","name":"accepted deliverables","name_ja":"受領成果物","definitions":[{"text":"products, results, or capabilities produced by a project and validated by the project customer or sponsors as meeting their specified acceptance criteria","text_ja":"プロジェクトによって作成され、指定された受入基準を満たすものとしてプロジェクトの顧客またはスポンサーによって妥当性確認された製品、結果、または能力","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.36","name":"access","name_ja":"アクセス","definitions":[{"text":"to obtain the use of a resource","text_ja":"リソースの使用を取得すること","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.37","name":"access facility","name_ja":"アクセス機能","definitions":[{"text":"set of service primitives that allow a stub objects to negotiate the abstract and transfer syntax to be used for the operation data to be transmitted over the channel","text_ja":"スタブオブジェクトがチャネル上で送信される操作データに使用される抽象構文と転送構文を交渉することを可能にするサービスプリミティブの集合","reference":"ISO/IEC 14752:2000 Information technology — Open Distributed Processing — Protocol support for computational interactions, 3.3.1"}]}
{"number":"3.38","name":"access method","name_ja":"アクセス方式","definitions":[{"text":"technique to obtain the use of data, the use of storage in order to read or write data, or the use of an input-output channel to transfer data","text_ja":"データの使用、データを読み書きするための記憶装置の使用、またはデータを転送するための入出力チャネルの使用を取得する技法","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.39","name":"access routine","name_ja":"アクセスルーチン","definitions":[{"text":"routine that provides access to a data structure that is hidden, usually because it is a global variable or used in an abstract data type.","text_ja":"通常はグローバル変数であるか抽象データ型で使用されるために隠蔽されているデータ構造へのアクセスを提供するルーチン"}]}
{"number":"3.40","name":"access transparency","name_ja":"アクセス透過性","definitions":[{"text":"distribution transparency which masks differences in data representation and invocation mechanisms to enable interworking between objects","text_ja":"オブジェクト間の相互動作を可能にするためにデータ表現と呼び出し機構の差異を隠蔽する分散透過性","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 4.4.1.1"}]}
{"number":"3.41","name":"accessibility","name_ja":"アクセシビリティ","definitions":[{"text":"extent to which products, systems, services, environments and facilities can be used by people from a population with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use","text_ja":"指定された使用状況において指定された目標を達成するために、最も広範囲の特性と能力を持つ人々によって製品、システム、サービス、環境、設備が使用できる程度","reference":"ISO/IEC 25064:2013 Systems and software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: User needs report, 4.1"},{"text":"degree to which a product or system can be used by people with the widest range of characteristics and capabilities to achieve a specified goal in a specified context of use","text_ja":"指定された使用状況において指定された目標を達成するために、最も広範囲の特性と能力を持つ人々によって製品またはシステムが使用できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.4.6"},{"text":"usability of a product, service, environment or facility by people with the widest range of capabilities","text_ja":"最も広範囲の能力を持つ人々による製品、サービス、環境、または設備の使用性","reference":"ISO/IEC 25062:2006 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability test reports, 4.1; ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.1"}],"note":"Although \"accessibility\" typically addresses users who have disabilities, the concept is not limited to disability issues. The range of capabilities includes disabilities associated with age. Accessibility for people with disabilities can be specified or measured either as the extent to which a product or system can be used by users with specified disabilities to achieve specified goals with effectiveness, efficiency, freedom from risk and satisfaction in a specified context of use, or by the presence of product properties that support accessibility. Context of use includes direct use or use supported by assistive technologies. [SOURCE: ISO 9241-171:2008","note_ja":"「アクセシビリティ」は通常、障害を持つユーザに対処するが、この概念は障害の問題に限定されない。能力の範囲には年齢に関連する障害も含まれる。障害を持つ人々のアクセシビリティは、指定された使用状況において、有効性、効率性、リスクからの自由、満足とともに指定された目標を達成するために、指定された障害を持つユーザによって製品またはシステムが使用できる程度、またはアクセシビリティを支援する製品特性の存在によって規定または測定できる。使用状況には、直接使用または支援技術によって支援される使用が含まれる。[出典：ISO 9241-171:2008"}
{"number":"3.42","name":"accessibility testing","name_ja":"アクセシビリティテスト","definitions":[{"text":"type of usability testing used to measure the degree to which a test item can be operated by users with the widest possible range of characteristics and capabilities","text_ja":"可能な限り広範囲の特性と能力を持つユーザによってテスト項目が操作できる程度を測定するために使用される使用性テストの種類","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.1"}]}
{"number":"3.43","name":"accident","name_ja":"事故","definitions":[{"text":"unplanned event or series of events that results in death, injury, illness, environmental damage, or damage to or loss of equipment or property","text_ja":"死亡、傷害、疾病、環境損害、または機器や財産の損傷や損失をもたらす計画外の事象または一連の事象","reference":"IEEE 1228-1994 (R2002) IEEE Standard for Software Safety Plans, 3.1.1"}]}
{"number":"3.44","name":"accountability","name_ja":"説明責任","definitions":[{"text":"degree to which the actions of an entity can be traced uniquely to the entity","text_ja":"エンティティの行為がそのエンティティに一意に追跡できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.6.4"}]}
{"number":"3.45","name":"accuracy","name_ja":"正確性","definitions":[{"text":"qualitative assessment of correctness, or freedom from error","text_ja":"正しさの質的評価、または誤りからの自由"},{"text":"quantitative measure of the magnitude of error","text_ja":"誤りの大きさの定量的測定"},{"text":"Within the quality management system, accuracy is an assessment of correctness","text_ja":"品質管理システムにおいて、正確性は正しさの評価である","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["precision"],"confer_ja":["精度"]}
{"number":"3.46","name":"accuracy of measurement","name_ja":"測定の正確性","definitions":[{"text":"the closeness of the agreement between the result of a measurement and the true value of the measurand","text_ja":"測定結果と被測定量の真の値との間の一致の近さ","reference":"ISO/IEC TR 14143-3:2003 Information technology — Software measurement — Functional size measurement — Part 3: Verification of functional size measurement methods, 3.1"}],"note":"Accuracy is a qualitative concept. The term precision is not a synonym for \"accuracy\". A true value is a value consistent with the definition of a given particular quantity and this is a value that would be obtained by a perfect measurement. In contexts where perfect measurement is not practically feasible, a conventional true value is a value attributed to a particular quantity and accepted, sometimes by convention, as having an uncertainty appropriate for a given purpose. 'Conventional true value', in the same reference, is sometimes called assigned value, best estimate of the value, conventional value or reference value. The accuracy can be expressed in terms of the Mean magnitude of relative error. [SOURCE: ISO/IEC Guide 99:2007 International vocabulary of metrology — Basic and general concepts and associated terms]","note_ja":"正確性は質的概念である。「精度」という用語は「正確性」の同義語ではない。真の値は、与えられた特定の量の定義と一致する値であり、これは完全な測定によって得られる値である。完全な測定が実際には不可能な文脈では、慣用真値は特定の量に起因する値であり、時には慣例により、与えられた目的に適切な不確かさを持つものとして受け入れられる。同じ参考文献における「慣用真値」は、時として付与値、値の最良推定値、慣用値、または参照値と呼ばれる。正確性は相対誤差の平均大きさの観点から表現できる。[出典：ISO/IEC Guide 99:2007 International vocabulary of metrology — Basic and general concepts and associated terms]"}
{"number":"3.47","name":"ACIA","name_ja":"ACIA","definitions":[{"text":"asynchronous communication interface adapter","text_ja":"非同期通信インターフェイスアダプタ"}]}
{"number":"3.48","name":"ACID","name_ja":"ACID","definitions":[{"text":"Atomicity Consistency Isolation Durability","text_ja":"原子性一貫性分離性永続性","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.49","name":"ACQ","name_ja":"ACQ","definitions":[{"text":"acquirer","text_ja":"取得者","reference":"ISO/IEC TR 29110-5-6-2:2014 Systems and software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 5-6-2: Systems engineering — Management and engineering guide: Generic profile group: Basic profile, 4.2"}]}
{"number":"3.50","name":"acquire project team","name_ja":"プロジェクトチーム獲得","definitions":[{"text":"the process of confirming human resource availability and obtaining the team necessary to complete project activities","text_ja":"人的資源の利用可能性を確認し、プロジェクト活動を完了するために必要なチームを獲得するプロセス","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.51","name":"acquirer","name_ja":"取得者","definitions":[{"text":"stakeholder that acquires or procures a product or service from a supplier","text_ja":"供給者から製品またはサービスを取得または調達する利害関係者","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes, 4.1; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.1; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.1"},{"text":"person or organization that acquires or procures a system, software product, or software service (which can be part of a system) from a supplier","text_ja":"供給者からシステム、ソフトウェア製品、またはソフトウェアサービス（システムの一部であり得る）を取得または調達する個人または組織","reference":"ISO/IEC TR 12182:2015 Systems and software engineering — Framework for categorization of IT systems and software, and guide for applying it, 3.13"},{"text":"individual or organization that acquires or procures a system, software product or software service from a supplier","text_ja":"供給者からシステム、ソフトウェア製品、またはソフトウェアサービスを取得または調達する個人または組織","reference":"ISO/IEC 25040:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — Evaluation process, 4.1"}],"alias":["owner","purchaser"],"alias_ja":["所有者","購入者"],"note":"The acquirer can be internal or external to the supplier organization. Acquisition of a software product can involve, but does not necessarily require, a legal contract or a financial transaction between the acquirer and supplier.","note_ja":"取得者は供給者組織の内部または外部である場合がある。ソフトウェア製品の取得は、取得者と供給者の間の法的契約や金銭的取引を含む場合があるが、必ずしも必要ではない。"}
{"number":"3.52","name":"acquisition","name_ja":"取得","definitions":[{"text":"process of obtaining a system, product, or service","text_ja":"システム、製品、またはサービスを獲得するプロセス","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 3.2; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.2"},{"text":"obtaining human and material resources necessary to perform project activities. Acquisition implies a cost of resources, and is not necessarily financial","text_ja":"プロジェクト活動を実行するために必要な人的資源と物的資源を獲得すること。取得は資源のコストを含意し、必ずしも金銭的ではない","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.53","name":"acquisition strategy","name_ja":"取得戦略","definitions":[{"text":"specific approach to acquiring products and services that is based on considerations of supply sources, acquisition methods, requirements specification types, contract or agreement types, and related acquisition risks","text_ja":"供給源、取得方法、要求事項仕様の種類、契約や合意の種類、および関連する取得リスクの考慮に基づく製品とサービスを取得するための具体的なアプローチ"}]}
{"number":"3.54","name":"action","name_ja":"動作","definitions":[{"text":"element of a step that a user performs during a procedure","text_ja":"ユーザが手順中に実行するステップの要素","reference":"ISO/IEC 26514:2008 Systems and software engineering — requirements for designers and developers of user documentation, 4.2"},{"text":"description of an operation to be taken in the formulation of a solution","text_ja":"解の策定において取られるべき操作の記述","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.7"},{"text":"something which happens","text_ja":"起こる何か","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 8.3"},{"text":"user behavior that a system accepts as a request for a particular operation","text_ja":"システムが特定の操作の要求として受け入れるユーザの行動","reference":"ISO/IEC TR 25060:2010 Systems and software engineering — Systems and software product Quality Requirements and Evaluation (SQuaRE) — Common Industry Format (CIF) for usability: General framework for usability-related information, 2.2"},{"text":"process of transformation that operates upon data or other types of inputs to create data, produce outputs, or change the state or condition of the subject software","text_ja":"データまたはその他の種類の入力に対して動作し、データを作成し、出力を生成し、または対象ソフトウェアの状態や条件を変更する変換プロセス","reference":"IEEE 1175.3-2004 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying Software Behavior"},{"text":"statement of causal and affective relationships in a behavior model linking particular stimulus interactions to particular response interactions and changes within a unit under a certain set of conditions on a unit's lifeline","text_ja":"単位のライフライン上の特定の条件セットの下で、特定の刺激相互作用を特定の応答相互作用および単位内の変化に結び付ける行動モデルにおける因果関係と情動関係の記述","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.1"}]}
{"number":"3.55","name":"action entry","name_ja":"動作エントリ","definitions":[{"text":"indication of the relevance of an action to a particular rule","text_ja":"特定の規則に対する動作の関連性の表示","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.9"}]}
{"number":"3.56","name":"action of interest","name_ja":"注目動作","definitions":[{"text":"action in a transaction which leads to a state change of significance to the transaction","text_ja":"トランザクションにとって重要な状態変化をもたらすトランザクション内の動作","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 13.7.1.2"}]}
{"number":"3.57","name":"action signature","name_ja":"動作シグネチャ","definitions":[{"text":"specification of an action that comprises the name for the action, the number, names and types of its parameters, and an indication of the causality of the object that instantiates the action template","text_ja":"動作の名前、そのパラメータの数、名前、型、および動作テンプレートをインスタンス化するオブジェクトの因果性の表示を含む動作の仕様","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 9.14"}]}
{"number":"3.58","name":"action stub","name_ja":"動作スタブ","definitions":[{"text":"list of all the actions to be taken in the solution of a problem","text_ja":"問題の解決において取られるべきすべての動作のリスト","reference":"ISO 5806:1984 Information processing — Specification of single-hit decision tables, 3.11"}]}
{"number":"3.59","name":"activation","name_ja":"活性化","definitions":[{"text":"one occurrence of a function's transformation of some subset of its inputs into some subset of its outputs","text_ja":"機能がその入力の一部の部分集合をその出力の一部の部分集合に変換する1回の発生","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.3"}]}
{"number":"3.60","name":"activation constraint","name_ja":"活性化制約","definitions":[{"text":"function's requirement for the presence of a non-empty object set in a particular arrow role as a precondition for some activation of the function","text_ja":"機能のある活性化の前提条件として、特定の矢印役割における空でないオブジェクト集合の存在に対する機能の要求","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.4"}]}
{"number":"3.61","name":"active area","name_ja":"アクティブ領域","definitions":[{"text":"(on-screen documentation) area that responds to user input","text_ja":"（画面上文書）ユーザ入力に応答する領域"}],"example":"a window, icon or text field","example_ja":"ウィンドウ、アイコン、またはテキストフィールド"}
{"number":"3.62","name":"active enterprise object","name_ja":"能動的エンタープライズオブジェクト","definitions":[{"text":"enterprise object that is able to fill an action role","text_ja":"動作役割を果たすことができるエンタープライズオブジェクト","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.3.1"}]}
{"number":"3.63","name":"active interconnection","name_ja":"能動的相互接続","definitions":[{"text":"physical interaction mechanism allowing the action of one thing to cause a change or to stimulate an action in another thing","text_ja":"一つのものの動作が他のものに変化を引き起こしたり、動作を刺激したりすることを可能にする物理的相互作用機構","reference":"IEEE 1175.2-2006 IEEE Recommended Practice for CASE Tool Interconnection — Characterization of Interconnections, 3.1"}]}
{"number":"3.64","name":"active redundancy","name_ja":"能動的冗長性","definitions":[{"text":"in fault tolerance, the use of redundant elements operating simultaneously to prevent, or permit recovery from, failures","text_ja":"耐障害性において、障害を防止したり、障害からの回復を可能にしたりするために同時に動作する冗長要素の使用"}],"confer":["standby redundancy"],"confer_ja":["待機冗長性"]}
{"number":"3.65","name":"active text","name_ja":"アクティブテキスト","definitions":[{"text":"text displayed on the screen that responds to user input","text_ja":"ユーザ入力に応答する画面に表示されるテキスト"}]}
{"number":"3.66","name":"active white space","name_ja":"アクティブ空白","definitions":[{"text":"area around textual or graphical elements, not including margins, which breaks up text, separates topic and subtopic groupings, indicates hierarchical and topical relationships, highlights information, or makes text easier to read","text_ja":"余白を含まない、テキストまたはグラフィック要素の周りの領域で、テキストを分割し、トピックとサブトピックのグループ分けを分離し、階層的およびトピック的関係を示し、情報を強調し、またはテキストを読みやすくする"}]}
{"number":"3.67","name":"activity","name_ja":"活動","definitions":[{"text":"set of cohesive tasks of a process","text_ja":"プロセスの結合したタスクの集合","reference":"ISO/IEC 12207:2008 Systems and software engineering — Software life cycle processes; ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.3; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.3"},{"text":"a distinct, scheduled portion of work performed during the course of a project","text_ja":"プロジェクトの過程で実行される明確で計画された作業の部分","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"},{"text":"order submitted to the system under test (SUT) by a user or an emulated user demanding the execution of a data processing operation according to a defined algorithm to produce specific output data from specific input data and (if requested) stored data","text_ja":"特定の入力データと（要求された場合）格納データから特定の出力データを生成するために、定義されたアルゴリズムに従ってデータ処理操作の実行を要求する、ユーザまたはエミュレートされたユーザによってテスト対象システム（SUT）に提出される命令","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.1"},{"text":"defined body of work to be performed, including its required input information and output information","text_ja":"実行すべき定義された作業体で、必要な入力情報と出力情報を含む"},{"text":"set of cohesive tasks of a process, which transforms inputs into outputs","text_ja":"入力を出力に変換するプロセスの結合したタスクの集合","reference":"IEEE 730-2014 IEEE Standard for Software Quality Assurance Processes, 3.2"},{"text":"element of work performed during the implementation of a process","text_ja":"プロセスの実装中に実行される作業の要素"},{"text":"set of actions that consume time and resources and whose performance is necessary to achieve, or contribute to, the realization of one or more outcomes","text_ja":"時間と資源を消費し、一つ以上の成果の実現を達成するか、それに貢献するために実行が必要な動作の集合","reference":"ISO/IEC TR 24766:2009 Information technology — Systems and software engineering — Guide for requirements engineering tool capabilities, 3.1"},{"text":"single-headed directed acyclic graph of actions, where occurrence of each action in the graph is made possible by the occurrence of all immediately preceding actions (i.e., by all adjacent actions which are closer to the head)","text_ja":"グラフ内の各動作の発生が、すべての直前の動作（すなわち、頭部により近いすべての隣接する動作）の発生によって可能になる、単一方向の有向非環式動作グラフ","reference":"ISO/IEC 10746-2:2009 Information technology — Open Distributed Processing — Reference Model: Foundations, 8.6"}],"note":"An activity normally has an expected duration, cost, and resource requirements. Activities are often subdivided into tasks.","note_ja":"活動は通常、期待される期間、コスト、および資源要求を持つ。活動はしばしばタスクに細分される。"}
{"number":"3.68","name":"activity attributes","name_ja":"活動属性","definitions":[{"text":"multiple attributes associated with each schedule activity that can be included within the activity list. Activity attributes include activity codes, predecessor activities, successor activities, logical relationships, leads and lags, resource requirements, imposed dates, constraints, and assumptions","text_ja":"活動リストに含めることができる各スケジュール活動に関連付けられた複数の属性。活動属性には、活動コード、先行活動、後続活動、論理関係、リードとラグ、資源要求、課せられた日付、制約、および仮定が含まれる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.69","name":"activity code","name_ja":"活動コード","definitions":[{"text":"one or more numerical or text values that identify characteristics of the work or in some way categorize the schedule activity that allows filtering and ordering of activities within reports","text_ja":"作業の特性を識別するか、何らかの方法でスケジュール活動を分類し、レポート内での活動のフィルタリングと順序付けを可能にする一つ以上の数値またはテキスト値","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.70","name":"activity cost estimates","name_ja":"活動コスト見積り","definitions":[{"text":"the projected cost of the schedule activity that includes the cost for all resources required to perform and complete the activity, including all cost types and cost components","text_ja":"すべてのコストタイプとコスト構成要素を含む、活動を実行し完了するために必要なすべての資源のコストを含むスケジュール活動の予測コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.71","name":"activity duration","name_ja":"活動期間","definitions":[{"text":"the time in calendar units between the start and finish of a schedule activity","text_ja":"スケジュール活動の開始と終了の間のカレンダー単位での時間","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["duration"],"confer_ja":["期間"]}
{"number":"3.72","name":"activity duration estimate","name_ja":"活動期間見積り","definitions":[{"text":"a quantitative assessment of the likely amount or outcome for the duration of an activity","text_ja":"活動の期間に対する可能性のある量または結果の定量的評価","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.73","name":"activity group","name_ja":"活動グループ","definitions":[{"text":"set of related activities.","text_ja":"関連する活動の集合"}]}
{"number":"3.74","name":"activity identifier","name_ja":"活動識別子","definitions":[{"text":"a short, unique numeric or text identification assigned to each schedule activity to differentiate that project activity from other activities. Typically unique within any one project schedule network diagram","text_ja":"そのプロジェクト活動を他の活動から区別するために各スケジュール活動に割り当てられる短い一意の数値またはテキスト識別子。通常、任意の一つのプロジェクトスケジュールネットワーク図内で一意である","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.75","name":"activity list","name_ja":"活動リスト","definitions":[{"text":"a documented tabulation of schedule activities that shows the activity description, activity identifier, and a sufficiently detailed scope of work description so project team members understand what work is to be performed","text_ja":"活動記述、活動識別子、およびプロジェクトチームメンバーが実行すべき作業を理解できるように十分に詳細な作業範囲記述を示すスケジュール活動の文書化された集計","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.76","name":"activity resource requirements","name_ja":"活動資源要求","definitions":[{"text":"the types and quantities of resources required for each activity in a work package","text_ja":"作業パッケージ内の各活動に必要な資源の種類と量","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.77","name":"activity type","name_ja":"活動型","definitions":[{"text":"classification of activities defined by the execution of the same algorithm","text_ja":"同じアルゴリズムの実行によって定義される活動の分類","reference":"ISO/IEC 14756:1999 Information technology — Measurement and rating of performance of computer-based software systems, 4.2"}]}
{"number":"3.78","name":"activity-based costing (ABC)","name_ja":"活動基準原価計算（ABC）","definitions":[{"text":"cost accounting method that allocates overhead costs based on specific production activities rather than allocating from a single overhead pool","text_ja":"単一の間接費プールから配分するのではなく、特定の生産活動に基づいて間接費を配分する原価計算方法"}]}
{"number":"3.79","name":"activity-oriented WBS","name_ja":"活動指向WBS","definitions":[{"text":"a work breakdown structure in which activities and tasks are denoted by verbs that indicate work to be accomplished. Each task name includes the work product or work products to be produced by that task","text_ja":"達成すべき作業を示す動詞によって活動とタスクが表記される作業分解構造。各タスク名には、そのタスクによって生成される作業成果物または作業成果物が含まれる","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.80","name":"actor","name_ja":"アクタ","definitions":[{"text":"role (with respect to that action) in which the enterprise object fulfilling the role participates in the action","text_ja":"役割を果たすエンタープライズオブジェクトが動作に参加する（その動作に関しての）役割","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.3.2"},{"text":"organization or CASE tool that supplies or acquires SEE services","text_ja":"SEEサービスを提供または取得する組織またはCASEツール","reference":"ISO/IEC 15940:2013 Systems and software engineering — Software Engineering Environment Services, 2.10"},{"text":"in UML, someone or something outside the system that interacts with the system","text_ja":"UMLにおいて、システムと相互作用するシステム外の誰かまたは何か"}],"note":"It can be of interest to specify which actor initiates that action.","note_ja":"どのアクタがその動作を開始するかを指定することは有用である場合がある。"}
{"number":"3.81","name":"actual cost (AC)","name_ja":"実際コスト（AC）","definitions":[{"text":"the realized cost incurred for the work performed on an activity during a specific time period","text_ja":"特定の期間中に活動で実行された作業に対して発生した実現コスト","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"alias":["actual cost of work performed (ACWP)"],"alias_ja":["実行作業の実際コスト（ACWP）"],"confer":["earned value management","earned value technique"],"confer_ja":["出来高管理","出来高技法"]}
{"number":"3.82","name":"actual depreciation","name_ja":"実際減価償却","definitions":[{"text":"true loss in value of an asset, determined only when the asset is sold","text_ja":"資産が売却された時にのみ決定される、資産の価値の真の損失"}]}
{"number":"3.83","name":"actual dollar analysis","name_ja":"実際ドル分析","definitions":[{"text":"addressing inflation or deflation by using cash-flow amounts that represent actual amounts of money at the time of the cash flow","text_ja":"キャッシュフローの時点での実際の金額を表すキャッシュフロー額を使用することによってインフレーションまたはデフレーションに対処すること"}],"confer":["constant dollar analysis"],"confer_ja":["一定ドル分析"]}
{"number":"3.84","name":"actual duration","name_ja":"実際期間","definitions":[{"text":"the time in calendar units between the actual start date of the schedule activity and either the data date of the project schedule if the schedule activity is in progress or the actual finish date if the schedule activity is complete","text_ja":"スケジュール活動の実際開始日と、スケジュール活動が進行中の場合はプロジェクトスケジュールのデータ日付、またはスケジュール活動が完了している場合は実際終了日との間のカレンダー単位での時間","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.85","name":"actual results","name_ja":"実際結果","definitions":[{"text":"set of behaviors or conditions of a test item, or set of conditions of associated data or the test environment, observed as a result of test execution","text_ja":"テスト実行の結果として観察される、テスト項目の行動または条件の集合、または関連データやテスト環境の条件の集合","reference":"ISO/IEC/IEEE 29119-1:2013 Software and systems engineering — Software testing — Part 1: Concepts and definitions, 4.2"}],"example":"outputs to hardware, changes to data, reports, and communication messages sent","example_ja":"ハードウェアへの出力、データの変更、レポート、および送信された通信メッセージ"}
{"number":"3.86","name":"ACWP","name_ja":"ACWP","definitions":[{"text":"actual cost of work performed","text_ja":"実行作業の実際コスト"}]}
{"number":"3.87","name":"adaptability","name_ja":"適応性","definitions":[{"text":"degree to which a product or system can effectively and efficiently be adapted for different or evolving hardware, software or other operational or usage environments","text_ja":"製品またはシステムが異なるまたは進化するハードウェア、ソフトウェア、またはその他の運用環境や使用環境に効果的かつ効率的に適応できる程度","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.8.1"}],"confer":["flexibility"],"confer_ja":["柔軟性"],"note":"Adaptability includes the scalability of internal capacity, such as screen fields, tables, transaction volumes, and report formats. Adaptations include those carried out by specialized support staff, business or operational staff, or end users. If the system is to be adapted by the end user, adaptability corresponds to suitability for individualization as defined in ISO 9241 110.","note_ja":"適応性には、画面フィールド、表、トランザクション量、レポート形式などの内部容量のスケーラビリティが含まれる。適応には、専門サポートスタッフ、業務または運用スタッフ、またはエンドユーザによって実行されるものが含まれる。システムがエンドユーザによって適応される場合、適応性はISO 9241 110で定義されている個別化への適合性に対応する。"}
{"number":"3.88","name":"adaptation data","name_ja":"適応データ","definitions":[{"text":"data used to adapt a program to a given installation site or to given conditions in its operational environment","text_ja":"プログラムを特定のインストールサイトまたはその運用環境における特定の条件に適応させるために使用されるデータ"}]}
{"number":"3.89","name":"adaptation parameter","name_ja":"適応パラメータ","definitions":[{"text":"variable that is given a specific value to adapt a program to a given installation site or to given conditions in its operational environment","text_ja":"プログラムを特定のインストールサイトまたはその運用環境における特定の条件に適応させるために特定の値が与えられる変数"}],"example":"the variable Installation_Site_Latitude","example_ja":"変数Installation_Site_Latitude"}
{"number":"3.90","name":"adapter","name_ja":"アダプタ","definitions":[{"text":"object adapter","text_ja":"オブジェクトアダプタ","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.2.1"}]}
{"number":"3.91","name":"adaptive life cycle","name_ja":"適応型ライフサイクル","definitions":[{"text":"a project life cycle, also known as change-driven or agile methods, that is intended to facilitate change and require a high degree of ongoing stakeholder involvement. Adaptive life cycles are also iterative and incremental, but differ in that iterations are very rapid (usually 2-4 weeks in length) and are fixed in time and resources","text_ja":"変更駆動型またはアジャイル手法としても知られる、変更を促進することを意図し、高度な継続的利害関係者関与を必要とするプロジェクトライフサイクル。適応型ライフサイクルも反復的で漸進的であるが、反復が非常に高速（通常2-4週間の長さ）で、時間と資源が固定されている点で異なる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.92","name":"adaptive maintenance","name_ja":"適応保守","definitions":[{"text":"modification of a software product, performed after delivery, to keep a software product usable in a changed or changing environment","text_ja":"変化したまたは変化する環境においてソフトウェア製品を使用可能に保つために、引き渡し後に実行されるソフトウェア製品の修正","reference":"IEEE 14764-2006 Software Engineering - Software Life Cycle Processes - Maintenance, 3.1"}],"example":"The operating system is upgraded and some changes are made to accommodate the new operating system.","example_ja":"オペレーティングシステムがアップグレードされ、新しいオペレーティングシステムに対応するためにいくつかの変更が行われる。","note":"Adaptive maintenance provides enhancements necessary to accommodate changes in the environment in which a software product must operate. These changes are those that must be made to keep pace with the changing environment.","note_ja":"適応保守は、ソフトウェア製品が動作しなければならない環境の変化に対応するために必要な拡張を提供する。これらの変更は、変化する環境に歩調を合わせるために行われなければならないものである。"}
{"number":"3.93","name":"added source statements","name_ja":"追加ソース文","definitions":[{"text":"count of source statements that were created specifically for the software product","text_ja":"ソフトウェア製品のために特別に作成されたソース文の数"}]}
{"number":"3.94","name":"additional quality planning tools","name_ja":"追加品質計画ツール","definitions":[{"text":"a set of tools used to define the quality requirements and to plan effective quality management activities. They include, but are not limited to: brainstorming, force field analysis, nominal group techniques and quality management and control tools","text_ja":"品質要求事項を定義し、効果的な品質管理活動を計画するために使用されるツールの集合。これには、ブレインストーミング、フォースフィールド分析、名目グループ技法、品質管理制御ツールが含まれるが、これらに限定されない","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.95","name":"additive weighting","name_ja":"加算重み付け","definitions":[{"text":"assignment of different values to increase the importance of selected decision attributes","text_ja":"選択された決定属性の重要性を増すために異なる値を割り当てること"}],"confer":["compensatory decision technique","nondimensional scaling","analytic hierarchy process"],"confer_ja":["補償的決定技法","無次元スケーリング","階層分析手法"]}
{"number":"3.96","name":"address","name_ja":"アドレス","definitions":[{"text":"number, character, or group of characters that identifies a given device or storage location","text_ja":"特定のデバイスまたは記憶位置を識別する数、文字、または文字群"},{"text":"to refer to a device or storage location by an identifying number, character, or group of characters3. to deal with, to take into consideration; (specifically) to decide whether and when a defined documentation topic is to be included, either directly or by reference to another document; to decide whether an item is to be recorded prior to the test execution (in a tool or not in a tool), recorded during the test execution, recorded post-test execution, not recorded (addressed by the process), or excluded.","text_ja":"識別番号、文字、または文字群によってデバイスまたは記憶位置を参照すること3. 対処する、考慮に入れる；（具体的には）定義された文書トピックを直接的にまたは他の文書への参照によって含めるかどうかおよびいつ含めるかを決定すること；項目をテスト実行前に（ツール内またはツール外で）記録するか、テスト実行中に記録するか、テスト実行後に記録するか、記録しない（プロセスによって対処される）か、または除外するかを決定すること"}]}
{"number":"3.97","name":"address field","name_ja":"アドレスフィールド","definitions":[{"text":"field of a computer instruction that contains addresses, information necessary to derive addresses, or values of operands","text_ja":"アドレス、アドレスを導出するために必要な情報、またはオペランドの値を含むコンピュータ命令のフィールド"}],"alias":["address part"],"alias_ja":["アドレス部"],"confer":["operation field"],"confer_ja":["操作フィールド"]}
{"number":"3.98","name":"address format","name_ja":"アドレス形式","definitions":[{"text":"number and arrangement of address fields in a computer instruction","text_ja":"コンピュータ命令におけるアドレスフィールドの数と配置"},{"text":"number and arrangement of elements within an address, such as the elements needed to identify a particular channel, device, disk sector, and record in magnetic disk storage","text_ja":"磁気ディスク記憶装置における特定のチャネル、デバイス、ディスクセクタ、およびレコードを識別するために必要な要素など、アドレス内の要素の数と配置"}],"confer":["n-address instruction","n-plus-one address instruction"],"confer_ja":["nアドレス命令","nプラス1アドレス命令"]}
{"number":"3.99","name":"address modification","name_ja":"アドレス修正","definitions":[{"text":"arithmetic, logical, or syntactic operation performed on an address","text_ja":"アドレスに対して実行される算術的、論理的、または構文的操作"}],"confer":["effective address","indexed address","relative address","relocatable address"],"confer_ja":["実効アドレス","インデックスアドレス","相対アドレス","再配置可能アドレス"]}
{"number":"3.100","name":"address space","name_ja":"アドレス空間","definitions":[{"text":"addresses that a computer program can access","text_ja":"コンピュータプログラムがアクセスできるアドレス"},{"text":"number of memory locations that a central processing unit can address","text_ja":"中央処理装置がアドレス指定できるメモリ位置の数"}],"note":"In some systems, this is the set of physical storage locations that a program can access, disjoint from other programs, together with the set of virtual addresses referring to those storage locations, which are accessible by other programs.","note_ja":"一部のシステムでは、これは他のプログラムと分離された、プログラムがアクセスできる物理記憶位置の集合と、他のプログラムからアクセス可能なそれらの記憶位置を参照する仮想アドレスの集合である。"}
{"number":"3.101","name":"addressing exception","name_ja":"アドレス指定例外","definitions":[{"text":"exception that occurs when a program calculates an address outside the bounds of the storage available to it","text_ja":"プログラムが利用可能な記憶装置の境界外のアドレスを計算した時に発生する例外"}],"confer":["data exception","operation exception","overflow exception","protection exception","underflow exception"],"confer_ja":["データ例外","操作例外","オーバーフロー例外","保護例外","アンダーフロー例外"]}
{"number":"3.102","name":"addressing mode","name_ja":"アドレス指定モード","definitions":[{"text":"method to search operand position in the instruction set architecture for a central processing unit","text_ja":"中央処理装置の命令セットアーキテクチャにおいてオペランド位置を検索する方法"}]}
{"number":"3.103","name":"addressing range","name_ja":"アドレス指定範囲","definitions":[{"text":"address space specified and used by the instruction system of a computer","text_ja":"コンピュータの命令システムによって指定され使用されるアドレス空間"}],"note":"An addressing range depends on the bits of address lines and addressing mode.","note_ja":"アドレス指定範囲は、アドレス線のビット数とアドレス指定モードに依存する。"}{"number":"3.103","name":"addressing range","name_ja":"アドレス範囲","definitions":[{"text":"address space specified and used by the instruction system of a computer","text_ja":"コンピュータの命令システムによって指定され使用されるアドレス空間"}],"note":"An addressing range depends on the bits of address lines and addressing mode.","note_ja":"アドレス範囲は、アドレスライン数とアドレシングモードに依存する"}
{"number":"3.104","name":"adjusted size","name_ja":"調整サイズ","definitions":[{"text":"a size based on the functional size multiplied by the technical complexity adjustment","text_ja":"機能サイズに技術的複雑性調整を乗じた値に基づくサイズ","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"}],"note":"This measure does not represent functional size.","note_ja":"この測度は機能サイズを表すものではない"}
{"number":"3.105","name":"adjusting leads and lags","name_ja":"リードとラグの調整","definitions":[{"text":"a technique used to find ways to bring project activities that are behind into alignment with plan during project execution","text_ja":"プロジェクト実行中に遅れているプロジェクト活動を計画に合わせる方法を見つけるために使用される技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.106","name":"ADM","name_ja":"ADM","definitions":[{"text":"architecture-driven modernization","text_ja":"アーキテクチャ駆動型モダナイゼーション","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}]}
{"number":"3.107","name":"adoption process","name_ja":"採用プロセス","definitions":[{"text":"set of activities by which an organization brings CASE tools into widespread use","text_ja":"組織がCASEツールを広く使用するための活動の集合","reference":"ISO/IEC TR 14471:2007 Information technology — Software engineering — Guidelines for the adoption of CASE tools, 2.1.2"}]}
{"number":"3.108","name":"ADT","name_ja":"ADT","definitions":[{"text":"Abstract Data Type","text_ja":"抽象データ型","reference":"ISO/IEC 19500-2:2012 Information technology — Object Management Group — Common Object Request Broker Architecture (CORBA) — Part 2: Interoperability, 3.3"}]}
{"number":"3.109","name":"advanced profile","name_ja":"上級プロファイル","definitions":[{"text":"profile targeted at very small enterprises (VSEs) which want to sustain and grow as an independent competitive system or software development business","text_ja":"独立した競争力のあるシステムまたはソフトウェア開発事業として維持・成長を望む超小規模企業（VSE）を対象とするプロファイル","reference":"ISO/IEC 29110-2-1:2015 — Software engineering — Lifecycle profiles for Very Small Entities (VSEs) — Part 2-1: Framework and taxonomy, 4.3"}]}
{"number":"3.110","name":"adverse consequence","name_ja":"有害な結果","definitions":[{"text":"undesirable consequence associated with a loss","text_ja":"損失に関連する望ましくない結果","reference":"ISO/IEC 15026-1:2013 Systems and software engineering — Systems and software assurance — Part 1: Concepts and vocabulary, 3.4.2"},{"text":"consequence that results in a specified level of loss","text_ja":"指定されたレベルの損失をもたらす結果","reference":"ISO/IEC 15026-3:2015 Systems and software engineering — Systems and software assurance — Part 3: System integrity levels, 3.1"}],"confer":["risk"],"confer_ja":["リスク"],"note":"An adverse consequence results from the system-of-interest being in a dangerous condition combined with th environment of the system being in its worst-case state (relative to the adverse consequence). The concept of adverse consequences covers not only harm in the safety context, but also other losses, such as loss of assets in the security context.","note_ja":"有害な結果は、対象システムが危険な状態にあることと、システムの環境が最悪の状態にあることの組み合わせから生じる。有害な結果の概念は、安全性の文脈における害だけでなく、セキュリティの文脈における資産の損失などの他の損失も含む"}
{"number":"3.111","name":"AE(I)","name_ja":"AE(I)","definitions":[{"text":"Application Entity (Invocation)","text_ja":"アプリケーション・エンティティ（呼び出し）","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.112","name":"affective relationship","name_ja":"影響関係","definitions":[{"text":"functional dependency between prior input interaction occurrences and later output interaction occurrences in a behavior pattern","text_ja":"行動パターンにおける先行する入力相互作用発生と後続する出力相互作用発生の間の機能的依存関係","reference":"IEEE 1175.4-2008 IEEE Standard for CASE Tool Interconnections - Reference Model for Specifying System Behavior, 3.2"}]}
{"number":"3.113","name":"afferent","name_ja":"求心性","definitions":[{"text":"pertaining to a flow of data or control from a subordinate module to a superordinate module in a software system","text_ja":"ソフトウェアシステムにおいて下位モジュールから上位モジュールへのデータまたは制御の流れに関する"}],"confer":["efferent"],"confer_ja":["遠心性"]}
{"number":"3.114","name":"affinity diagram","name_ja":"親和図","definitions":[{"text":"a group creativity technique that allows large numbers of ideas to be classified into groups for review and analysis","text_ja":"大量のアイデアを分類してグループ化し、レビューと分析を行うことができるグループ創造技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.115","name":"agent","name_ja":"エージェント","definitions":[{"text":"active enterprise object that has been delegated something (authorization, responsibility, provision of a service, etc.) by, and acts for, a party (in exercising the authorization, carrying out the responsibility, providing the service, etc.)","text_ja":"当事者から何か（認可、責任、サービスの提供など）を委譲され、当事者のために行動する（認可の行使、責任の実行、サービスの提供など）活動的な企業オブジェクト","reference":"ISO/IEC 15414:2015 Information technology — Open distributed processing — Reference model — Enterprise language, 6.6.8"}],"note":"An agent can be a party or can be the ODP system or one of its components. Another system in the environment of the ODP system can also be an agent. The delegation can have been direct, by a party, or indirect, by an agent of the party having authorization from the party to so delegate.","note_ja":"エージェントは当事者である場合もあれば、ODPシステムまたはそのコンポーネントの1つである場合もある。ODPシステムの環境内の別のシステムもエージェントとなりうる。委譲は、当事者による直接的なものか、当事者から委譲する認可を得た当事者のエージェントによる間接的なものかのいずれかである"}
{"number":"3.116","name":"aggregate responsibility","name_ja":"集約責任","definitions":[{"text":"broadly stated responsibility that is eventually refined as specific properties and constraints","text_ja":"最終的に具体的な特性と制約として洗練される、広く述べられた責任","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.3"}]}
{"number":"3.117","name":"aggregation","name_ja":"集約","definitions":[{"text":"derived relationship between two elements that are groups of other elements that represents all individual relationships between the grouped elements of the two groups","text_ja":"他の要素のグループである2つの要素間の派生関係で、2つのグループのグループ化された要素間の全ての個別関係を表現する","reference":"ISO/IEC 19506:2012 Information technology — Object Management Group Architecture-Driven Modernization (ADM) — Knowledge Discovery Meta-Model (KDM), 4"}]}
{"number":"3.118","name":"aggregation method","name_ja":"集約方法","definitions":[{"text":"method that combines a set of measurement values to create a composite value","text_ja":"測定値の集合を組み合わせて複合値を作成する方法","reference":"ISO/IEC 33003:2015 Information technology — Process assessment — Requirements for process measurement frameworks, 3.1"}],"note":"Aggregation methods are based on compensatory or non-compensatory models","note_ja":"集約方法は代償的または非代償的モデルに基づく"}
{"number":"3.119","name":"agile development","name_ja":"アジャイル開発","definitions":[{"text":"software development approach based on iterative development, frequent inspection and adaptation, and incremental deliveries, in which requirements and solutions evolve through collaboration in cross-functional teams and through continuous stakeholder feedback","text_ja":"反復開発、頻繁な検査と適応、および段階的な納品に基づくソフトウェア開発アプローチで、要求と解決策が機能横断チームでの協力と継続的なステークホルダーフィードバックを通じて進化する","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.4; ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.1"}]}
{"number":"3.120","name":"agile environment","name_ja":"アジャイル環境","definitions":[{"text":"organization or team implementing agile development methods and approaches","text_ja":"アジャイル開発手法とアプローチを実装する組織またはチーム","reference":"ISO/IEC/IEEE 26515: 2011 Systems and software engineering: Developing user documentation in an agile environment, 4.2"}]}
{"number":"3.121","name":"agreement","name_ja":"合意","definitions":[{"text":"mutual acknowledgment of terms and conditions under which a working relationship is conducted","text_ja":"作業関係が実施される条件の相互承認","reference":"ISO/IEC TS 24748-1:2016 Systems and software engineering — Life cycle management — Part 1: Guide for life cycle management, 2.5; ISO/IEC/IEEE 15288:2015 Systems and software engineering — System life cycle processes, 4.1.4"},{"text":"any document or communication that defines the initial intentions of a project. This can take the form of a contract, memorandum of understanding (MOU), letters of agreement, verbal agreements, email, etc.","text_ja":"プロジェクトの初期意図を定義する文書または通信。これは、契約、覚書（MOU）、合意書、口頭合意、電子メールなどの形式を取ることができる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["contract"],"confer_ja":["契約"]}
{"number":"3.122","name":"AHP","name_ja":"AHP","definitions":[{"text":"analytic hierarchy process","text_ja":"階層分析法"}]}
{"number":"3.123","name":"algebraic language","name_ja":"代数言語","definitions":[{"text":"programming language that permits the construction of statements resembling algebraic expressions, such as Y = X + 5","text_ja":"Y = X + 5 のような代数式に似た文を構築することを可能にするプログラミング言語"}],"confer":["algorithmic language","list processing language","logic programming language"],"confer_ja":["アルゴリズム言語","リスト処理言語","論理プログラミング言語"],"example":"FORTRAN"}
{"number":"3.124","name":"algorithm","name_ja":"アルゴリズム","definitions":[{"text":"finite set of well-defined rules for the solution of a problem in a finite number of steps","text_ja":"有限の手順で問題を解決するための明確に定義された規則の有限集合"},{"text":"sequence of operations for performing a specific task","text_ja":"特定のタスクを実行するための操作の順序"},{"text":"finite ordered set of well-defined rules for the solution of a problem","text_ja":"問題を解決するための明確に定義された規則の有限順序集合","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"example":"a complete specification of a sequence of arithmetic operations for evaluating sine x to a given precision"}
{"number":"3.125","name":"algorithmic language","name_ja":"アルゴリズム言語","definitions":[{"text":"programming language designed for expressing algorithms","text_ja":"アルゴリズムを表現するために設計されたプログラミング言語"}],"confer":["algebraic language","list processing language","logic programming language"],"confer_ja":["代数言語","リスト処理言語","論理プログラミング言語"],"example":"ALGOL"}
{"number":"3.126","name":"alias","name_ja":"別名","definitions":[{"text":"alternate name for an IDEF1X model construct (class, responsibility, entity, or domain)","text_ja":"IDEF1Xモデル構成要素（クラス、責任、エンティティ、またはドメイン）の代替名","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.4"}]}
{"number":"3.127","name":"allocated baseline","name_ja":"割り当てベースライン","definitions":[{"text":"approved requirements for a product, subsystem or component, describing the functional, performance, interoperability, and interface requirements that are allocated from higher-level requirements and the verifications required to demonstrate achievement of those requirements, as established at a specific point in time and documented in the allocated configuration documentation","text_ja":"製品、サブシステム、またはコンポーネントの承認された要求で、上位レベルの要求から割り当てられた機能、性能、相互運用性、およびインターフェース要求と、それらの要求の達成を実証するために必要な検証を記述し、特定の時点で確立され、割り当て構成文書に文書化されたもの","reference":"IEEE 15288.1:2014 IEEE Standard for Application of Systems Engineering on Defense Programs, 3.1"}],"confer":["developmental configuration","functional baseline","product baseline","allocated configuration identification"],"confer_ja":["開発構成","機能ベースライン","製品ベースライン","割り当て構成識別"]}
{"number":"3.128","name":"allocated configuration identification","name_ja":"割り当て構成識別","definitions":[{"text":"in configuration management, the current approved specifications governing the development of configuration items that are part of a higher-level configuration ite","text_ja":"構成管理において、上位レベルの構成項目の一部である構成項目の開発を管理する現在承認された仕様"}],"confer":["functional configuration identification","product configuration identification","allocated baseline"],"confer_ja":["機能構成識別","製品構成識別","割り当てベースライン"],"note":"Each specification defines the functional characteristics that are allocated from those of the higher-level configuration item, establishes the tests required to demonstrate achievement of its allocated functional characteristics, delineates necessary interface requirements with other associated configuration items, and establishes design constraints, if any.","note_ja":"各仕様は、上位レベルの構成項目から割り当てられた機能特性を定義し、その割り当てられた機能特性の達成を実証するために必要なテストを確立し、他の関連する構成項目との必要なインターフェース要求を明確にし、設計制約があれば確立する"}
{"number":"3.129","name":"allocated requirement","name_ja":"割り当て要求","definitions":[{"text":"requirement that levies all or part of the performance and functionality of a higher- -level requirement on a lowe level architectural element or design component","text_ja":"上位レベルの要求の性能と機能の全てまたは一部を下位レベルのアーキテクチャ要素または設計コンポーネントに課す要求"}]}
{"number":"3.130","name":"allocation","name_ja":"割り当て","definitions":[{"text":"process of distributing requirements, resources, or other entities among the components of a system or program","text_ja":"システムまたはプログラムのコンポーネント間で要求、リソース、またはその他のエンティティを分配するプロセス"},{"text":"result of the distribution of requirements, resources, or other entities among the components of a system or program","text_ja":"システムまたはプログラムのコンポーネント間での要求、リソース、またはその他のエンティティの分配の結果"}],"note":"Allocation can be made entirely to hardware, software, or humans, or to some combination to be resolved upon further functional decomposition.","note_ja":"割り当ては、ハードウェア、ソフトウェア、または人間に完全に行うか、さらなる機能分解によって解決される組み合わせに行うことができる"}
{"number":"3.131","name":"allocation of an entitlement","name_ja":"資格の割り当て","definitions":[{"text":"process of assigning some or all of a given entitlement to a subsidiary or other associated organizational unit which manages its own entitlement schema library","text_ja":"与えられた資格の一部または全てを、独自の資格スキーマライブラリを管理する子会社または他の関連組織単位に割り当てるプロセス","reference":"ISO/IEC 19770-3:2016, Information technology — IT asset management — Part 3: Entitlement schema, 3.1.1"}],"note":"The entitlement schema enables the recording of entitlement allocations.","note_ja":"資格スキーマは資格割り当ての記録を可能にする"}
{"number":"3.132","name":"alpha testing","name_ja":"アルファテスト","definitions":[{"text":"first stage of testing before a product is considered ready for commercial or operational use","text_ja":"製品が商用または運用使用の準備ができていると見なされる前のテストの第一段階"}],"confer":["beta testing"],"confer_ja":["ベータテスト"],"note":"often performed only by users within the organization developing the software","note_ja":"多くの場合、ソフトウェアを開発している組織内のユーザーのみによって実行される"}
{"number":"3.133","name":"alphanumeric","name_ja":"英数字","definitions":[{"text":"pertaining to data that consists of letters, digits, and usually other characters, such as punctuation marks, as well as to processes and functional units that use the data","text_ja":"文字、数字、および通常は句読点などの他の文字で構成されるデータ、ならびにそのデータを使用するプロセスおよび機能単位に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.134","name":"ALS","name_ja":"ALS","definitions":[{"text":"Application Layer Structure","text_ja":"アプリケーション層構造","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.135","name":"alternate flow","name_ja":"代替フロー","definitions":[{"text":"part of a use case that describes its alternative implementations","text_ja":"ユースケースの代替実装を記述する部分"}],"alias":["alternate path"],"alias_ja":["代替パス"],"note":"It is also used to describe error conditions, since errors can be considered a kind of alternative.","note_ja":"エラーは一種の代替と見なすことができるため、エラー条件を記述するためにも使用される"}
{"number":"3.136","name":"alternate key","name_ja":"代替キー","definitions":[{"text":"candidate key of an entity other than the primary key","text_ja":"主キー以外のエンティティの候補キー","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language tax and Semantics for IDEF1X97 (IDEFobject), 3.1.5"}],"note":"[key style]"}
{"number":"3.137","name":"alternative analysis","name_ja":"代替案分析","definitions":[{"text":"a technique used to evaluate identified options in order to select which options or approaches to use to execute and perform the work of the project","text_ja":"プロジェクトの作業を実行し遂行するために使用するオプションまたはアプローチを選択するために、特定されたオプションを評価する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.138","name":"alternatives generation","name_ja":"代替案生成","definitions":[{"text":"a technique used to develop as many potential options as possible in order to identify different approaches to execute and perform the work of the project","text_ja":"プロジェクトの作業を実行し遂行するための異なるアプローチを識別するために、可能な限り多くの潜在的オプションを開発する技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.139","name":"analog","name_ja":"アナログ","definitions":[{"text":"pertaining to continuously variable physical quantities or to data presented in a continuous form, as well as to processes and functional units that use the data","text_ja":"連続的に変化する物理量または連続形式で提示されるデータ、ならびにそのデータを使用するプロセスおよび機能単位に関する","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}]}
{"number":"3.140","name":"analog computer","name_ja":"アナログコンピュータ","definitions":[{"text":"computer whose operations are analogous to the behavior of another system and that accepts, processes, and produces analog data","text_ja":"他のシステムの動作と類似した動作を行い、アナログデータを受け取り、処理し、生成するコンピュータ","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"}],"example":"an abacus"}
{"number":"3.141","name":"analogous estimating","name_ja":"類推見積り","definitions":[{"text":"a technique for estimating the duration or cost of an activity or a project using historical data from a similar activity or project","text_ja":"類似した活動またはプロジェクトからの履歴データを使用して、活動またはプロジェクトの期間またはコストを見積る技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.142","name":"analysis","name_ja":"分析","definitions":[{"text":"process of studying a system by partitioning the system into parts (functions, components, or objects) and determining how the parts relate to each other2. investigation and collection phase of development that aims to specify types of users and their information needs","text_ja":"システムを部分（機能、コンポーネント、またはオブジェクト）に分割し、部分間の関係を決定することによってシステムを研究するプロセス。ユーザーの種類とその情報ニーズを特定することを目的とした開発の調査・収集段階","reference":"ISO/IEC/IEEE 26512:2011 Systems and software engineering — Requirements for acquirers and suppliers of user documentation, 4.2"}],"example":"test"}
{"number":"3.143","name":"analyst","name_ja":"アナリスト","definitions":[{"text":"member of the technical community who is skilled and trained to define problems and to analyze, develop, and express algorithms","text_ja":"問題を定義し、アルゴリズムを分析、開発、表現するために熟練し訓練された技術コミュニティのメンバー"}],"example":"systems engineer, business analyst"}
{"number":"3.144","name":"analytic hierarchy process (AHP)","name_ja":"階層分析法（AHP）","definitions":[{"text":"use of matrixes to manage pair-wise relationships in decision-making","text_ja":"意思決定における一対比較関係を管理するためのマトリックスの使用"}],"confer":["additive weighting","nondimensional scaling","compensatory decision technique"],"confer_ja":["加算重み付け","無次元スケーリング","代償的意思決定技法"]}
{"number":"3.145","name":"analytical techniques","name_ja":"分析技法","definitions":[{"text":"various techniques used to evaluate, analyze, or forecast potential outcomes based on possible variations of project or environmental variables and their relationships with other variables","text_ja":"プロジェクトまたは環境変数の可能な変動とその他の変数との関係に基づいて、潜在的な結果を評価、分析、または予測するために使用される様々な技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.146","name":"analyzability","name_ja":"分析性","definitions":[{"text":"degree of effectiveness and efficiency with which it is possible to assess the impact on a product or system of an intended change to one or more of its parts, or to diagnose a product for deficiencies or causes of failures, or to identify parts to be modified","text_ja":"製品またはシステムの一つ以上の部分への意図された変更の影響を評価する、または製品の欠陥や故障の原因を診断する、または修正すべき部分を特定することが可能である効果性と効率性の度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.7.3"}],"confer":["modifiability"],"confer_ja":["修正性"],"note":"Implementation can include providing mechanisms for the product or system to analyze its own faults and provide reports before or after a failure or other event.","note_ja":"実装には、製品またはシステムが自身の故障を分析し、故障やその他のイベントの前後にレポートを提供するメカニズムを提供することが含まれる場合がある"}
{"number":"3.147","name":"ancestor (of a class)","name_ja":"祖先（クラスの）","definitions":[{"text":"generic ancestor of the class or a parent of the class or an ancestor of a parent of the class","text_ja":"クラスの汎用祖先、またはクラスの親、またはクラスの親の祖先","reference":"IEEE 1320.2-1998 (R2004) IEEE Standard for Conceptual Modeling Language Syntax and Semantics for IDEF1X97 (IDEFobject), 3.1.6"}],"confer":["generic ancestor","reflexive ancestor"],"confer_ja":["汎用祖先","反射祖先"]}
{"number":"3.148","name":"ancestral box","name_ja":"祖先ボックス","definitions":[{"text":"box related to a specific diagram by a hierarchically consecutive sequence of one or more parent/child relationships","text_ja":"一つ以上の親子関係の階層的連続シーケンスによって特定の図に関連するボックス","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.6"}]}
{"number":"3.149","name":"ancestral diagram","name_ja":"祖先図","definitions":[{"text":"diagram that contains an ancestral box","text_ja":"祖先ボックスを含む図","reference":"IEEE 1320.1-1998 (R2004) IEEE Standard for Functional Modeling Language - Syntax and Semantics for IDEF0, 2.1.7"}]}
{"number":"3.150","name":"anchor point","name_ja":"アンカーポイント","definitions":[{"text":"a milestone in software scheduling at which a major project life cycle transition occurs","text_ja":"主要なプロジェクトライフサイクル移行が発生するソフトウェアスケジューリングのマイルストーン","reference":"Software Extension to the PMBOK® Guide Fifth Edition"}]}
{"number":"3.151","name":"annotate","name_ja":"注釈付け","definitions":[{"text":"command used for listing the latest version of each programs source code line, along with the date, the file version it was introduced, and the person who committed it","text_ja":"各プログラムのソースコード行の最新バージョンを、導入された日付、ファイルバージョン、およびコミットした人と共にリストアップするために使用されるコマンド"}]}
{"number":"3.152","name":"annotation","name_ja":"注釈","definitions":[{"text":"further documentation accompanying a requirement","text_ja":"要求に付随するさらなる文書"},{"text":"label represented as text near to the object it is associated with","text_ja":"関連するオブジェクトの近くにテキストとして表現されるラベル","reference":"ISO/IEC 15909-2:2011 Software and system engineering — High-level Petri nets — Part 2: Transfer format, 4.1.1"}],"example":"background information or descriptive material"}
{"number":"3.153","name":"announcement","name_ja":"通知","definitions":[{"text":"interaction (invocation) initiated by a client object, resulting in the conveyance of information from that client object to a server object, requesting a function to be performed by that server object","text_ja":"クライアントオブジェクトによって開始される相互作用（呼び出し）で、そのクライアントオブジェクトからサーバーオブジェクトへの情報の伝達をもたらし、そのサーバーオブジェクトによって機能の実行を要求する","reference":"ISO/IEC 10746-3:2009 Information technology — Open Distributed Processing — Reference Model: Architecture, 7.1.3"}],"example":"the initiation of the sending of a message in a messaging system"}
{"number":"3.154","name":"annual equivalent","name_ja":"年間等価","definitions":[{"text":"representation of a cash flow as a series of equal annual payments (at a stated interest rate) over the planning horizon.","text_ja":"計画期間にわたって（指定された利率での）等しい年間支払いの系列としてのキャッシュフローの表現"}],"alias":["AE(i)"],"confer":["future worth","present worth"],"confer_ja":["将来価値","現在価値"]}
{"number":"3.155","name":"annual percentage rate (APR)","name_ja":"年利率（APR）","definitions":[{"text":"nominal annual interest rate","text_ja":"名目年利率"}]}
{"number":"3.156","name":"annuity","name_ja":"年金","definitions":[{"text":"amount of a series of equal payments at regular intervals over a planning horizon","text_ja":"計画期間にわたって定期的な間隔で行われる等しい支払いの系列の金額"}]}
{"number":"3.157","name":"anomaly","name_ja":"異常","definitions":[{"text":"condition that deviates from expectations, based on requirements specifications, design documents, user documents, or standards, or from someones perceptions or experiences","text_ja":"要求仕様、設計文書、ユーザー文書、または標準、あるいは誰かの認識や経験に基づく期待から逸脱する状態","reference":"IEEE 1028-2008 IEEE Standard for Software Reviews and Audits, 3.1"},{"text":"anything observed in the documentation or operation of a system that deviates from expectations based on previously verified system, software, or hardware products or reference documents","text_ja":"以前に検証されたシステム、ソフトウェア、またはハードウェア製品や参照文書に基づく期待から逸脱する、システムの文書化または動作において観察されるもの","reference":"IEEE 1012-2012 IEEE Standard for System and Software Verification and Validation, 3.1"}]}
{"number":"3.158","name":"ANSI","name_ja":"ANSI","definitions":[{"text":"American National Standards Institute.","text_ja":"米国国家規格協会"}]}
{"number":"3.159","name":"anticipatory buffering","name_ja":"先行バッファリング","definitions":[{"text":"buffering technique in which data are stored in a buffer in anticipation of a need for the data","text_ja":"データの必要性を予測してデータをバッファに格納するバッファリング技法"}],"confer":["dynamic buffering","simple buffering"],"confer_ja":["動的バッファリング","単純バッファリング"]}
{"number":"3.160","name":"anticipatory paging","name_ja":"先行ページング","definitions":[{"text":"storage allocation technique in which pages are transferred from auxiliary storage to main storage in anticipation of a need for those pages","text_ja":"それらのページの必要性を予測してページを補助記憶装置から主記憶装置に転送する記憶割り当て技法"}],"confer":["demand paging"],"confer_ja":["要求ページング"]}
{"number":"3.161","name":"AOA","name_ja":"AOA","definitions":[{"text":"analysis of alternatives","text_ja":"代替案分析","reference":"IEEE 15288.2:2014 IEEE Standard for Technical Reviews and Audits on Defense Programs, 3.2"}]}
{"number":"3.162","name":"AON","name_ja":"AON","definitions":[{"text":"Activity-on-No","text_ja":"アクティビティ・オン・ノード"}]}
{"number":"3.163","name":"AP(I)","name_ja":"AP(I)","definitions":[{"text":"Application Process (Invocation)","text_ja":"アプリケーションプロセス（呼び出し）","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.164","name":"aperiodic task","name_ja":"非周期タスク","definitions":[{"text":"task activated on demand","text_ja":"要求時に活性化されるタスク"}],"alias":["asynchronous task"],"alias_ja":["非同期タスク"]}
{"number":"3.165","name":"API","name_ja":"API","definitions":[{"text":"Application Program Interface","text_ja":"アプリケーションプログラムインターフェース","reference":"ISO/IEC 10746-1:1998 Information technology — Open Distributed Processing — Reference model: Overview"}]}
{"number":"3.166","name":"applicability to a functional domain","name_ja":"機能ドメインへの適用性","definitions":[{"text":"the ability of an FSM method to take into account the characteristics of functional user requirements (FUR) which are pertinent to FSM in a functional domain","text_ja":"機能ドメインにおいてFSMに関連する機能ユーザー要求（FUR）の特性を考慮するFSM手法の能力","reference":"ISO/IEC TR 14143-3:2003 Information technology — Software measurement — Functional size measurement — Part 3: Verification of functional size measurement methods, 3.2"}]}
{"number":"3.167","name":"application","name_ja":"アプリケーション","definitions":[{"text":"system for collecting, saving, processing, and presenting data by means of a computer","text_ja":"コンピュータを用いてデータを収集、保存、処理、および提示するシステム","reference":"ISO/IEC 19770-5:2015 Information technology — IT asset management — Part 5: Overview and vocabulary, 3.1; ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"},{"text":"a coherent collection of automated procedures and data supporting a business objective","text_ja":"ビジネス目標を支援する自動化された手順とデータの一貫した集合","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"},{"text":"cohesive collection of automated procedures and data supporting a business objective, consisting of one or more components, modules, or subsystems","text_ja":"ビジネス目標を支援する自動化された手順とデータの結合性のある集合で、一つ以上のコンポーネント、モジュール、またはサブシステムから構成される","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.2"}],"alias":["application system"],"alias_ja":["アプリケーションシステム"],"confer":["information system"],"confer_ja":["情報システム"],"example":"accounts payable, accounts receivable, payroll, procurement, shop production, assembly line control, air search radar, target tracking, weapons firing, flight line scheduling and passenger reservations","note":"The term application is generally used when referring to a component of software that can be executed. It consists of one or more components, modules, or subsystems.","note_ja":"アプリケーションという用語は、実行可能なソフトウェアのコンポーネントを指すときに一般的に使用される。一つ以上のコンポーネント、モジュール、またはサブシステムから構成される"}
{"number":"3.168","name":"application administration function","name_ja":"アプリケーション管理機能","definitions":[{"text":"functions performed by users which include installation, configuration, application backup, maintenance (patching and upgrading) and de-installation","text_ja":"インストール、設定、アプリケーションバックアップ、保守（パッチ適用とアップグレード）、およびアンインストールを含む、ユーザーによって実行される機能","reference":"ISO/IEC 25051:2014 Software engineering — Software product Quality Requirements and Evaluation (SQuaRE) — Requirements for quality of Ready to Use Software Product (RUSP) and instructions for testing, 4.1.3"}]}
{"number":"3.169","name":"application architecture","name_ja":"アプリケーションアーキテクチャ","definitions":[{"text":"architecture including the architectural structure and rules (e.g. common rules and constraints) that constrains a specific member product within a product line","text_ja":"プロダクトライン内の特定のメンバー製品を制約するアーキテクチャ構造と規則（例：共通規則と制約）を含むアーキテクチャ","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.1"}],"note":"The application architecture captures the high-level design of a specific member product of a product line","note_ja":"アプリケーションアーキテクチャは、プロダクトラインの特定のメンバー製品の高レベル設計を捉える"}
{"number":"3.170","name":"application area","name_ja":"応用分野","definitions":[{"text":"a category of projects that have common components significant in such projects, but are not needed or present in all projects. Application areas are usually defined in terms of either the product (i.e., by similar technologies or production methods) or the type of customer (i.e., internal versus external, government versus commercial) or industry sector (i.e., utilities, automotive, aerospace, information technologies, etc.) Application areas can overlap.","text_ja":"そのようなプロジェクトで重要な共通コンポーネントを持つが、すべてのプロジェクトで必要または存在するわけではないプロジェクトのカテゴリ。応用分野は通常、製品（すなわち、類似技術または生産方法による）、顧客のタイプ（すなわち、内部対外部、政府対商業）、または産業部門（すなわち、公益事業、自動車、航空宇宙、情報技術など）の観点で定義される。応用分野は重複することができる","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.171","name":"application asset","name_ja":"アプリケーション資産","definitions":[{"text":"output of a specific application engineering process (e.g. application realization) that can be exploited in other lifecycle processes of application engineering and can be adapted as a domain asset based on a product management decision","text_ja":"特定のアプリケーションエンジニアリングプロセス（例：アプリケーション実現）の出力で、アプリケーションエンジニアリングの他のライフサイクルプロセスで利用でき、製品管理決定に基づいてドメイン資産として適応できるもの","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.2"}],"note":"Application asset encompasses requirements, an architectural design, components, and tests.","note_ja":"アプリケーション資産は、要求、アーキテクチャ設計、コンポーネント、およびテストを包含する"}
{"number":"3.172","name":"application assets in requirements","name_ja":"要求におけるアプリケーション資産","definitions":[{"text":"application-specific artifacts produced during application requirements engineering, such as application requirements specifications and application requirements models","text_ja":"アプリケーション要求エンジニアリング中に生成されるアプリケーション固有の成果物で、アプリケーション要求仕様書やアプリケーション要求モデルなど","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.1"}]}
{"number":"3.173","name":"application boundary","name_ja":"アプリケーション境界","definitions":[{"text":"the border between the application and its environment of other applications and users","text_ja":"アプリケーションと、他のアプリケーションおよびユーザーの環境との境界","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"}]}
{"number":"3.174","name":"application design","name_ja":"アプリケーション設計","definitions":[{"text":"process of application engineering where a single application architecture conforming to the domain architecture is derived","text_ja":"ドメインアーキテクチャに適合する単一のアプリケーションアーキテクチャが導出されるアプリケーションエンジニアリングのプロセス","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.3"}]}
{"number":"3.175","name":"application engineering","name_ja":"アプリケーションエンジニアリング","definitions":[{"text":"process of constructing or refining application systems by reusing assets","text_ja":"資産を再利用してアプリケーションシステムを構築または改良するプロセス","reference":"IEEE 1517-2010 IEEE Standard for Information Technology — System and software life cycle processes — Reuse processes, 3"},{"text":"life cycle consisting of a set of processes in which the application assets and member products of the product line are implemented and managed by reusing domain assets in conformance to the domain architecture and by binding the variability of the platform","text_ja":"ドメインアーキテクチャに適合してドメイン資産を再利用し、プラットフォームの可変性を束縛することによって、プロダクトラインのアプリケーション資産とメンバー製品が実装・管理される一連のプロセスから構成されるライフサイクル","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.4"}]}
{"number":"3.176","name":"application engineering process","name_ja":"アプリケーションエンジニアリングプロセス","definitions":[{"text":"processes for developing a member product in a product line","text_ja":"プロダクトラインにおけるメンバー製品を開発するためのプロセス","reference":"ISO/IEC 26555:2015 Software and systems engineering — Tools and methods for product line technical management, 3.1"}]}
{"number":"3.177","name":"application frameworks","name_ja":"アプリケーションフレームワーク","definitions":[{"text":"subsystem design made up of a collection of abstract and concrete classes and interfaces between them","text_ja":"抽象クラスと具象クラスの集合とそれらの間のインターフェースから構成されるサブシステム設計"}],"note":"Frameworks are often instantiation of a number of patterns.","note_ja":"フレームワークは多くの場合、多数のパターンのインスタンス化である"}
{"number":"3.178","name":"application function point count","name_ja":"アプリケーション機能ポイント数","definitions":[{"text":"a count that provides a measure of the functionality the application provides to the end-user","text_ja":"アプリケーションがエンドユーザーに提供する機能性の測度を提供する数","reference":"ISO/IEC 20968:2002 Software engineering — Mk II Function Point Analysis — Counting Practices Manual, 10"},{"text":"the size of an application expressed in function points","text_ja":"機能ポイントで表現されるアプリケーションのサイズ","reference":"ISO/IEC 24570:2005 Software engineering — NESMA functional size measurement method version 2.1 — Definitions and counting guidelines for the application of Function Point Analysis"},{"text":"activity of applying ISO/IEC 20926:2009 to measure the functional size of an application","text_ja":"アプリケーションの機能サイズを測定するためにISO/IEC 20926:2009を適用する活動","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.4"}],"note":"i.e., the functionality already provided to the user or that is still to be provided. With it, the effort required to support the realized application can also be determined.","note_ja":"すなわち、既にユーザーに提供されている機能性またはまだ提供される予定の機能性。これによって、実現されたアプリケーションを支援するために必要な工数も決定できる"}
{"number":"3.179","name":"application functional size","name_ja":"アプリケーション機能サイズ","definitions":[{"text":"measure of the functionality that an application provides to the user, determined by the application function point count","text_ja":"アプリケーション機能ポイント数によって決定される、アプリケーションがユーザーに提供する機能性の測度","reference":"ISO/IEC 20926:2009 Software and systems engineering — Software measurement — IFPUG functional size measurement method 2009, 3.3"}]}
{"number":"3.180","name":"application generator","name_ja":"アプリケーション生成器","definitions":[{"text":"code generator that produces programs to solve one or more problems in a particular application area","text_ja":"特定の応用分野における一つ以上の問題を解決するプログラムを生成するコード生成器"}],"example":"a payroll generator"}
{"number":"3.181","name":"application management","name_ja":"アプリケーション管理","definitions":[{"text":"domain responsible for all of the tasks and activities that are aimed at managing, supporting, maintaining, and renewing existing applications and related data structures","text_ja":"既存のアプリケーションと関連するデータ構造の管理、支援、保守、および更新を目的とするすべてのタスクと活動に責任を持つドメイン","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.2"}],"note":"Application management includes all of the tasks, responsibilities, and activities that serve to bring applications into a state where they meet the requirements and needs of their owners throughout the entire life cycle of the business processes that are supported by the applications.","note_ja":"アプリケーション管理には、アプリケーションによって支援されるビジネスプロセスの全ライフサイクルを通じて、アプリケーションが所有者の要求とニーズを満たす状態にするために役立つすべてのタスク、責任、および活動が含まれる"}
{"number":"3.182","name":"application management organization","name_ja":"アプリケーション管理組織","definitions":[{"text":"organizational unit that is responsible for application management for one or more applications","text_ja":"一つ以上のアプリケーションのアプリケーション管理に責任を持つ組織単位","reference":"ISO/IEC 16350- 2015 Information technology — Systems and software engineering — Application management, 4.3"}],"note":"An application management organization can be an internal or external unit in relation to the user organization.","note_ja":"アプリケーション管理組織は、ユーザー組織に対して内部または外部の単位となりうる"}
{"number":"3.183","name":"application object","name_ja":"アプリケーションオブジェクト","definitions":[{"text":"component that is directly related to or forms part of an application","text_ja":"アプリケーションに直接関連する、またはアプリケーションの一部を形成するコンポーネント","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.4"}],"example":"Programs, sources, databases, documentation, data structures, test files, and scripts."}
{"number":"3.184","name":"application portfolio","name_ja":"アプリケーションポートフォリオ","definitions":[{"text":"collection of applications managed by an application management organization or an entity within that application management organization","text_ja":"アプリケーション管理組織またはそのアプリケーション管理組織内のエンティティによって管理されるアプリケーションの集合","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.5"}],"note":"The scope of the application portfolio can be the entire portfolio of that application management organization, but it can also be the applications of one or some customer organizations of entity within part of a certain customer organization.","note_ja":"アプリケーションポートフォリオの範囲は、そのアプリケーション管理組織の全ポートフォリオとすることもできるが、特定の顧客組織の一部内のエンティティの一つまたは複数の顧客組織のアプリケーションとすることもできる"}
{"number":"3.185","name":"application problem","name_ja":"アプリケーション問題","definitions":[{"text":"problem submitted by an end user and requiring information processing for its solution. ISO/IEC 2382:2015, Information technology — Vocabulary]","text_ja":"エンドユーザーによって提出され、その解決のために情報処理を必要とする問題"}]}
{"number":"3.186","name":"application realization","name_ja":"アプリケーション実現","definitions":[{"text":"process of application engineering that develops application assets, some of which can be derived from domain assets, and member products based on the application architecture and the sets of application assets and domain assets","text_ja":"アプリケーションアーキテクチャとアプリケーション資産およびドメイン資産の集合に基づいて、アプリケーション資産（その一部はドメイン資産から導出可能）とメンバー製品を開発するアプリケーションエンジニアリングのプロセス","reference":"ISO/IEC 26550:2015 Software and systems engineering — Reference model for product line engineering and management, 3.5"}]}
{"number":"3.187","name":"application requirements analysis","name_ja":"アプリケーション要求分析","definitions":[{"text":"subprocess that understands all application specific requirements, scrutinizes incorrect and inconsistent application requirements through modelling, and then analyses and negotiates application requirements that cannot be satisfied through the domain requirements","text_ja":"すべてのアプリケーション固有要求を理解し、モデリングを通じて不正確で一貫性のないアプリケーション要求を精査し、その後ドメイン要求では満たすことができないアプリケーション要求を分析・交渉するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.3"}]}
{"number":"3.188","name":"application requirements elicitation","name_ja":"アプリケーション要求抽出","definitions":[{"text":"subprocess for identifying stakeholders relevant to an application, eliciting application specific requirements, and binding the appropriate variants","text_ja":"アプリケーションに関連するステークホルダーを特定し、アプリケーション固有要求を抽出し、適切なバリアントを束縛するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.2"}]}
{"number":"3.189","name":"application requirements management","name_ja":"アプリケーション要求管理","definitions":[{"text":"subprocess that manages traceability and changes on application requirements","text_ja":"アプリケーション要求のトレーサビリティと変更を管理するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.6"}]}
{"number":"3.190","name":"application requirements specification","name_ja":"アプリケーション要求仕様","definitions":[{"text":"subprocess that documents the application specific requirements and integrates it with the domain requirements specification whose variants are bound","text_ja":"アプリケーション固有要求を文書化し、バリアントが束縛されたドメイン要求仕様と統合するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.4"}]}
{"number":"3.191","name":"application requirements verification and validation","name_ja":"アプリケーション要求検証・妥当性確認","definitions":[{"text":"subprocess that confirms that the application specific requirements are consistent and feasible and ensures that the bound variants satisfy the specific products requirements","text_ja":"アプリケーション固有要求が一貫性があり実現可能であることを確認し、束縛されたバリアントが特定製品の要求を満たすことを保証するサブプロセス","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.5"}]}
{"number":"3.192","name":"application software","name_ja":"アプリケーションソフトウェア","definitions":[{"text":"software designed to help users perform particular tasks or handle particular types of problems, as distinct from software that controls the computer itself","text_ja":"コンピュータ自体を制御するソフトウェアとは異なり、ユーザーが特定のタスクを実行したり特定の種類の問題を処理したりするのを支援するように設計されたソフトウェア"},{"text":"software or a program that is specific to the solution of an application problem","text_ja":"アプリケーション問題の解決に特化したソフトウェアまたはプログラム","reference":"ISO/IEC 2382:2015, Information technology — Vocabulary"},{"text":"software designed to fulfill specific needs of a user4. software of an application","text_ja":"ユーザーの特定のニーズを満たすように設計されたソフトウェア。アプリケーションのソフトウェア","reference":"ISO/IEC 16350-2015 Information technology — Systems and software engineering — Application management, 4.6"}],"note":"Application software is the software that the application management organization produces, services, and maintains. There is also system software: the software to produce and maintain the application software and to run the application software on its platform. The application management organization is one of the users of the system software.","note_ja":"アプリケーションソフトウェアは、アプリケーション管理組織が製造、サービス提供、保守するソフトウェアである。システムソフトウェアもある：アプリケーションソフトウェアを製造・保守し、プラットフォーム上でアプリケーションソフトウェアを実行するソフトウェア。アプリケーション管理組織は、システムソフトウェアのユーザーの一つである"}
{"number":"3.193","name":"application specific integrated circuit (ASIC)","name_ja":"特定用途向け集積回路（ASIC）","definitions":[{"text":"integrated circuit customized for a particular use","text_ja":"特定の用途に合わせてカスタマイズされた集積回路"}]}
{"number":"3.194","name":"application-oriented language","name_ja":"アプリケーション指向言語","definitions":[{"text":"computer language with facilities or notations applicable primarily to a single application area","text_ja":"主に単一の応用分野に適用可能な機能や記法を持つコンピュータ言語"}],"confer":["authoring language","specification language","query language"],"confer_ja":["オーサリング言語","仕様記述言語","問い合わせ言語"],"example":"a language for computer-assisted instruction or hardware design"}
{"number":"3.195","name":"application-specific requirements","name_ja":"アプリケーション固有要求","definitions":[{"text":"requirements specific to an application or requirements not covered in domain requirements","text_ja":"アプリケーションに固有の要求、またはドメイン要求で対象とされない要求","reference":"ISO/IEC 26551:2016 Software and systems engineering — Tools and methods for product line requirements engineering, 3.9"}]}
{"number":"3.196","name":"applying leads and lags","name_ja":"リードとラグの適用","definitions":[{"text":"a technique that is used to adjust the amount of time between predecessor and successor activities","text_ja":"先行活動と後続活動の間の時間量を調整するために使用される技法","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}]}
{"number":"3.197","name":"apportioned effort","name_ja":"按分工数","definitions":[{"text":"an activity where effort is allotted proportionately across certain discrete efforts and not divisible into discrete efforts","text_ja":"特定の個別工数に工数を比例配分し、個別工数に分割できない活動","reference":"A Guide to the Project Management Body of Knowledge (PMBOK® Guide) — Fifth Edition"}],"confer":["discrete effort"],"confer_ja":["個別工数"],"note":"Apportioned effort is one of three earned value management (EVM) types of activities used to measure work performance.","note_ja":"按分工数は、作業パフォーマンスを測定するために使用される3つのアーンドバリューマネジメント（EVM）活動タイプの一つである"}
{"number":"3.198","name":"appraisal findings","name_ja":"評価結果","definitions":[{"text":"results of an appraisal that identify the most important issues, problems, or opportunities for process improvement within the appraisal scope","text_ja":"評価範囲内でプロセス改善のための最も重要な課題、問題、または機会を特定する評価の結果"}],"note":"Appraisal findings are inferences drawn from corroborated objective evidence.","note_ja":"評価結果は、裏付けられた客観的証拠から導かれる推論である"}
{"number":"3.199","name":"appraisal participants","name_ja":"評価参加者","definitions":[{"text":"members of the organizational unit who participate in providing information during an appraisal","text_ja":"評価中に情報提供に参加する組織単位のメンバー"}]}
{"number":"3.200","name":"appraisal team leader","name_ja":"評価チームリーダー","definitions":[{"text":"person who leads the activities of an appraisal and has satisfied qualification criteria for experience, knowledge, and skills defined by the appraisal method","text_ja":"評価の活動を指導し、評価手法によって定義された経験、知識、およびスキルの資格基準を満たした人"}]}
{"number":"3.201","name":"appropriateness recognizability","name_ja":"適切性認識性","definitions":[{"text":"degree to which users can recognize whether a product or system is appropriate for their needs","text_ja":"ユーザーが製品またはシステムが自分のニーズに適切かどうかを認識できる度合い","reference":"ISO/IEC 25010:2011 Systems and software engineering — Systems and software Quality Requirements and Evaluation (SQuaRE) — System and software quality models, 4.2.4.1"}],"confer":["functional appropriateness"],"confer_ja":["機能適切性"],"note":"Appropriateness recognizability will depend on the ability to recognize the appropriateness of the product or systems functions from initial impressions of the product or system or any associated documentation. The information provided by the product or system can include demonstrations, tutorials, documentation or, for a web site, the information on the home page.","note_ja":"適切性認識性は、製品またはシステムの第一印象や関連文書から、製品またはシステムの機能の適切性を認識する能力に依存する。製品またはシステムによって提供される情報には、デモンストレーション、チュートリアル、文書、またはウェブサイトの場合はホームページ上の情報が含まれる"}
{"number":"3.202","name":"approval","name_ja":"承認","definitions":[{"text":"written notification, by an authorized representative, that an information item appears to satisfy requirements and is complete","text_ja":"情報項目が要求を満たしているように見え、完全であることの権限ある代表者による書面による通知","reference":"ISO/IEC/IEEE 15289:2015 Systems and software engineering — Content of life-cycle information products (documentation), 5.1"}],"note":"Such approval does not shift responsibility from the supplier to meet requirements under a two-party situation","note_ja":"このような承認は、二者間状況下で要求を満たす責任を供給者から移すものではない"}
